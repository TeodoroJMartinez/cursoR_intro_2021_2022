[{"path":"index.html","id":"prefacio","chapter":"Prefacio","heading":"Prefacio","text":"Este curso ha sido diseñado por Javier Álvarez Liébana y pensado para introducir en el lenguaje R todas aquellas personas que quieran aprenderlo desde cero, sin necesidad de ningún conocimiento previo de programación. Dicho manual ha sido elaborado su vez en R con {bookdown}. Puedes ver un resumen de las funcionalidades de algunos paquetes documentados por el equipo de R Studio en sus esquemas resumen. El código de dicho manual se encuentra en GitHub.Si el material te resulta de ayuda puedes dejar tu aportación en https://www.buymeacoffee.com/dadosdelaplace, como si invitarás algunos cafés. Para elaborar informes o libros con una estructura similar (de forma nativa en R) el paquete bookdown puede ser instalado desde la plataforma CRAN o desde su versión en desarrollo actualizada en Github:","code":"\ninstall.packages(\"bookdown\")\n# o desde su versión en desarrollo actualizada\n# devtools::install_github(\"rstudio/bookdown\")"},{"path":"index.html","id":"sobre-el-autor","chapter":"Prefacio","heading":"Sobre el autor","text":"Esto de presentarse sí mismo es siempre un poco raro pero vamos intentarlo. Mi nombre es Javier Álvarez Liébana, soy matemático, nacido en 1989 en Carabanchel (Madrid), pasando por Bologna (Italia). Tras terminar licenciatura y Máster en Ingeniería Matemática, recibí en julio de 2018 el título de Doctor en Estadística (por la Universidad de Granada, con dos estancias en Université Pierre et Marie Curie)Además de investigador (con acreditación de Contratado Doctor por la ANECA, y plaza de Ayudante Doctor en la Facultad de Estudios Estadísticos de la Universidad Complutense de Madrid), soy docente en dicha facultad y ando intentando eso de la divulgación en estadística y dataviz (visualización de datos) en redes sociales🎲 Web\n💌 Newsletter\n🐦 Twitter\n📸 Instagram","code":""},{"path":"index.html","id":"propósito","chapter":"Prefacio","heading":"Propósito","text":"El objetivo de este tutorial es introducir la programación y análisis estadístico en R toda aquella persona que nunca se haya iniciado en él, sin necesitar conocimientos previos de programación (aunque siempre ayuda, obviamente). Con este manual se pretende que adquieras un vasto y experto conocimiento de R, pero si lo suficiente como para lograrNo tener miedo programar: los errores son solo eso, errores.Entender los conceptos básicos de R.Dotarte de una autonomía muy básica para poder empezar trabajar con datos.Algunos trucos sencillos para que el trabajo sea más rápido, tanto en tiempo de escritura como de ejecución.","code":""},{"path":"index.html","id":"contenidos","chapter":"Prefacio","heading":"Contenidos","text":"1 Requisitos2 Instalacion de R y RStudio3 ¿Qué es R?4 Primeros pasos en R","code":""},{"path":"index.html","id":"código-de-colores","chapter":"Prefacio","heading":"Código de colores","text":"Puedes buscar los siguientes términos en el buscador del documentoERROR:En color rojo encontrarás errores comunes o prácticas evitar. WARNING:En color naranja/amarillo encontrarás warnings o advertencias sobre cosas tener en cuenta para evitar problemas.Algunas funciones pueden arrojar ciertas advertencias que nunca está de más leer. Pero si dichos mensajes de alerta los tenemos controlados, y queremos que nos ensucie la ejecución en la consola, podemos poner al inicio del código assign(\"last.warning\", NULL, envir = baseenv()) para limpiar los warnings antiguos y options(warn = -1) para desactivarlos. CONSEJO:En color verde encontrarás consejos o tips para ampliar y facilitar tu programación. Además en cada cajita de código, si pasas el ratón, encontrarás un botón 📄📄 en la esquina superior derecha de la caja para copiar el código directamente tu consola. Puedes encontrarlos todos escribiendo «consejo» en el buscador. GLOSARIO:En color azul encontrarás un 📚 glosario con algunos términos estadísticos y conceptos básicos.","code":""},{"path":"index.html","id":"licencia","chapter":"Prefacio","heading":"Licencia","text":"Este documento es publicado bajo licencia pública general GNU,\nuna licencia libre de copyleft que garantiza los usuarios finales (personas, organizaciones, compañías) la libertad de usar, estudiar, compartir (copiar) y modificar el software, citando adecuadamente al autor del mismo.","code":""},{"path":"index.html","id":"contribuye-si-quieres","chapter":"Prefacio","heading":"Contribuye (si quieres)","text":"Si el material te resulta de ayuda puedes dejar tu aportación en https://www.buymeacoffee.com/dadosdelaplace, como si invitarás algunos cafés.","code":""},{"path":"ejercicios-recopilados.html","id":"ejercicios-recopilados","chapter":"📝 Ejercicios recopilados","heading":"📝 Ejercicios recopilados","text":"Recopilación de los ejercicios planteados lo largo del manual. Vuelve por aquí si quieres cuando acabes las lecciones para repasar aquellos ejercicios que más te hayan costado.","code":""},{"path":"ejercicios-recopilados.html","id":"instalación","chapter":"📝 Ejercicios recopilados","heading":"Instalación","text":"Scripts usados:script02.R: instalación de R. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script02.R(haz click en las flechas para ver soluciones)📝Ejercicio 1: abre R Studio y en tu consola (parte inferior de tu pantalla) asigna los valores 2 y 5 dos variables y b. Tras asignarles valores, multiplica los números en consola (haz click en la flecha para la solución propuesta). Solución:\nImagen/gráfica 0.1: Multiplicación de y b.\n 📝Ejercicio 2: modifica el código inferior para definir dos variables c y d, con valores 3 y -1, y calcular la división c/d (haz click en la flecha para la solución propuesta).Solución: 📝Ejercicio 3: repite el ejercicio 1 pero ahora guarda el resultado de la multiplicación final en una variable c. Para ver el resultado guardado en c escribe dicha variable en consola (haz click en la flecha para la solución propuesta). Solución:\nImagen/gráfica 0.2: Multiplicación de y b guardando el resultado.\n WARNING:hace falta gastar una línea por cada orden que quieras ejecutar. Tampoco necesitas guardar cada paso intermedio que realices. Cuidado con la memoria: cada asignación que hagas es una variable guardada que consume recursos en tu ordenador.","code":"\n# Para poner comentarios en el código se usa #\n\n# Definición de variables\na <- 2\nb <- 5\n\n# Multiplicación\na * b## [1] 10\n# Definición de variables\nc <- \nd <-\n\n# Operación (división)\nc ? d\n# Definición de variables\nc <- 3\nd <- -1\n\n# División\nc / d## [1] -3\n# Variables\na <- 2\nb <- 5\n\n# Resultado\nc <- a * b\n\n# Muestro en consola\nc## [1] 10"},{"path":"ejercicios-recopilados.html","id":"primeros-pasos","chapter":"📝 Ejercicios recopilados","heading":"Primeros pasos","text":"Scripts usados:script04.R: primeros pasos. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script04.R(haz click en las flechas para ver soluciones)📝Ejercicio 1: asigna ahora los valores 1, -2, 3 tres variables , b y c distintas, y calcula la raíz cuadrada de cada uno (haz click en la flecha para la solución propuesta). Solución: 📝Ejercicio 2: calcula en consola la suma de 3 más 4, y todo ello multiplicado por 10, y asígnalo una variable x (haz click en la flecha para la solución propuesta). Imprime el valor por consolaSolución: 📝Ejercicio 3: asigna un valor positivo x y calcula su raíz cuadrada; asigna otro negativo y calcula su valor absoluto con la función abs() (haz click en la flecha para la solución propuesta).Solución: CONSEJO:Las órdenes sqrt(x) y abs(y) se llaman funciones, y la variable que tienen entre paréntesis se llama argumento de la función: una variable que toma de entrada la función y con la que opera internamente. 📝Ejercicio 4: usando la variable x ya definida, completa/modifica el código inferior para guardar en una nueva variable z el resultado guardado en x menos 5 (haz click en la flecha para la solución propuesta).Solución: 📝Ejercicio 5: usando las variables x e y ya definidas, calcula el máximo de ambas (función max()), y guárdalo en una nueva variable t. (haz click en la flecha para la solución propuesta).Solución: WARNING:hace falta gastar una línea por cada orden que quieras ejecutar. Tampoco necesitas guardar cada paso intermedio que realices. Cuidado con la memoria: cada asignación que hagas es una variable guardada que consume recursos en tu ordenador.","code":"\n# Variables\na <- 1\nb <- -2\nc <- 3\n\n# Resultado\nsqrt(a)## [1] 1\nsqrt(b)## [1] NaN\nsqrt(c)## [1] 1.732051\n# Asignamos\nx <- (3 + 4) * 10\n\n# Imprimimos\nx## [1] 70\n# Raíz cuadrada\nx <- 73 # por ejemplo\nsqrt(x)## [1] 8.544004\n# Valor absoluto\ny <- -19 # por ejemplo\nabs(y)## [1] 19\nz <- ? - ?\nz\nz <- x - 5\nz## [1] 68\nt <- max(x, y)\nt## [1] 73"},{"path":"ejercicios-recopilados.html","id":"variables-numéricas-y-de-texto","chapter":"📝 Ejercicios recopilados","heading":"0.1 Variables numéricas y de texto","text":"Scripts usados:script05.R: variables numéricas y caracteres. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script05.R(haz click en las flechas para ver soluciones)📝Ejercicio 1: define una variable edad que guarde tu edad y otra nombre con tu nombre. Solución: 📝Ejercicio 2: define otra variable con tus apellidos y junta las variables nombre y apellidos en una sola cadena de texto que guardes en nombre_completo. Solución: 📝Ejercicio 3: define dos variables numéricas y realiza la suma de ambas. Obtén con class() la clase de dicha variable suma Solución: 📝Ejercicio 4: construye una frase que diga «Hola, llamo … y tengo … años». Solución: 📝Ejercicio 5: define una cadena de texto con \"mi código postal es 28045\". Calcula la longitud de la cadena y extrae la subcadena del lugar 3 al 17 con str_sub() del paquete stringr (guarda dicha subcadena en una variable y) Solución: 📝Ejercicio 6: con la subcadena y del ejercicio anterior, elimina los espacios solo de la izquierda y convierte mayúsculas Solución: 📝Ejercicio 7: con la cadena x original, sustituye la subcadena “código postal” por “cp”.Solución: ","code":"\nedad <- 32 # tipo numeric\nnombre <- \"Javier\" # tipo caracter\n\nedad## [1] 32\nnombre## [1] \"Javier\"\nlibrary(glue)\n# Apellidos\napellidos <- \"Álvarez Liébana\"\n\n# Pegamos\nnombre_completo <- glue(\"{nombre} {apellidos}\")\nnombre_completo## Javier Álvarez Liébana\n# Otra forma\nnombre_completo <- paste(nombre, apellidos)\nnombre_completo## [1] \"Javier Álvarez Liébana\"\n# Definimos dos variables numéricas\na <- 1\nb <- -2\n\na + b## [1] -1\nclass(a + b)## [1] \"numeric\"\nedad <- 32\nglue(\"Hola, me llamo {nombre_completo} y tengo {edad} años\")## Hola, me llamo Javier Álvarez Liébana y tengo 32 años\nlibrary(stringr)\nx <- \"mi código postal es 28045\"\ny <- str_sub(x, 3, 17)\ny## [1] \" código postal \"\n# Todo en una línea\nstr_to_upper(str_trim(y, side = \"left\"))## [1] \"CÓDIGO POSTAL \"\n# Paso a paso\nz <- str_trim(y, side = \"left\")\nstr_to_upper(z)## [1] \"CÓDIGO POSTAL \"\nstr_sub(x, 4, 16) <- \"cp\""},{"path":"ejercicios-recopilados.html","id":"vectores","chapter":"📝 Ejercicios recopilados","heading":"0.2 Vectores","text":"Scripts usados:script06.R: vectores. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script06.R(haz click en las flechas para ver soluciones)📝Ejercicio 1: modifica el código inferior para crear un vector de nombre vector_num que contenga los números 1, 5 y -7.Solución: 📝Ejercicio 2: define un vector que contenga los números 1, 10, -1 y 2, y guárdalo en una variable llamada vector_num. Solución: 📝Ejercicio 3: obtén la longitud del vector anterior vector_num. Solución: 📝Ejercicio 4: crea un vector con las palabras “Hola”, “”, “llamo” (y tu nombre y apellidos), y pega luego sus elementos de forma que la frase esté correctamente escrita en castellano. Tras hacerlo, añade “y tengo 30 años”. Solución: 📝Ejercicio 5: el código inferior crea una secuencia de números, que empieza en -1, que acaba en 32, y que va saltando de 2 en 2. Modíficalo para que haga el salto de 3 en 3 y guárdalo en una variable llamada secuenciaSolución: 📝Ejercicio 6: crea una secuencia de números, que empiece en -1, que acabe en 32, y que tenga longitud 12. Solución: 📝Ejercicio 7: crea una secuencia que empiece en 1 y recorra todos los naturales hasta el 10. Después crea otra secuencia de longitud 7 que todos los números sean 3. Solución: 📝Ejercicio 8: crea una secuencia que repita 5 veces el patrón 1, 2, 3. Después crea otra que repita dicho patrón pero de forma intercalada, con 5 veces 1, después 5 veces 2 y después 5 veces 3.Solución: 📝Ejercicio 9: crea una variable x <- c(\"oso pardo\", \"oso polar\", \"ballena\", \"grillo\", \"oso panda\", \"perro\"). Haciendo uso de str_length() calcula la longitud de cada cadena de texto. Haciendo uso de str_detect() detecta los animales que son un oso.Solución:","code":"\n# Vector de números\nvector_num <- c(1)\nvector_num\n# Vector de números\nvector_num <- c(1, 5, -7)\nvector_num## [1]  1  5 -7\n# Vector de números\nvector_num <- c(1, 10, -1, 2)\nvector_num## [1]  1 10 -1  2\n# Longitud del vector\nlength(vector_num)## [1] 4\n# Definiendo el vector\nvector_char <- c(\"Hola\", \"me\", \"llamo\", \"Javier\",\n                 \"Álvarez\", \"Liébana\")\n\n# Pegamos\nfrase <- paste(vector_char, collapse = \" \")\nfrase## [1] \"Hola me llamo Javier Álvarez Liébana\"\n# Añadimos frase\nglue(\"{frase} y tengo 30 años.\")## Hola me llamo Javier Álvarez Liébana y tengo 30 años.\n# Otra forma\npaste0(frase, \" y tengo 30 años.\")## [1] \"Hola me llamo Javier Álvarez Liébana y tengo 30 años.\"\n# Otra forma\npaste(frase, \"y tengo 30 años.\")## [1] \"Hola me llamo Javier Álvarez Liébana y tengo 30 años.\"\nseq(-1, 32, by = 2)\nsecuencia <- seq(-1, 32, by = 3)\nsecuencia##  [1] -1  2  5  8 11 14 17 20 23 26 29 32\nlength(secuencia) # longitud de la secuencia## [1] 12\nsecuencia <- seq(-1, 32, l = 12)\nsecuencia##  [1] -1  2  5  8 11 14 17 20 23 26 29 32\nlength(secuencia) # longitud de la secuencia## [1] 12\n1:10##  [1]  1  2  3  4  5  6  7  8  9 10\nrep(3, 7) # secuencia repetida## [1] 3 3 3 3 3 3 3\nrep(c(1, 2, 3), 5) # repetimos patrón (1, 2, 3) 5 veces##  [1] 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\nrep(c(1, 2, 3), each = 5) # repetimos patrón alternado##  [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3\nx <- c(\"oso pardo\", \"Oso polar\", \"ballena\", \"grillo\", \"OSO panda\", \"perro\")\nstr_length(x) # longitud## [1] 9 9 7 6 9 5\n# OJO! antes hay que pasar todo a mayúscula o minúscula, nos da igual que sea oso, OSO, Oso, etc\nstr_detect(str_to_lower(x), \"oso\") ## [1]  TRUE  TRUE FALSE FALSE  TRUE FALSE"},{"path":"ejercicios-recopilados.html","id":"operaciones-con-vectores","chapter":"📝 Ejercicios recopilados","heading":"0.3 Operaciones con vectores","text":"Scripts usados:script07.R: operaciones con vectores. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script07.R(haz click en las flechas para ver soluciones)📝Ejercicio 1: define el vector x como la concatenación de los números 1, 10, -1 y 2, y calcula su suma.Solución: 📝Ejercicio 2: define otro vector y que contenga los números 5, -7, 8, -3, y haz la suma de x e y. Solución: 📝Ejercicio 3: calcula el número de elementos mayores que 0 del resultado de la suma de x + y. Solución: 📝Ejercicio 4: calcula la versión ordenada del vector x. Solución: 📝Ejercicio 5: encuentra del vector x original el lugar (el índice) que ocupa su mínimo y su máximo. Solución: 📝Ejercicio 6: encuentra del vector x los elementos mayores que 1 y menores que 7. Encuentra una forma de averiguar si todos los elementos son o positivos. Solución: 📝Ejercicio 7: define el vector c(-1, 0, 4, 5, -2), calcula la raíz cuadrada del vector y determina que lugares son ausente de tipo NaN. Solución: 📝Ejercicio 8: define el vector de los primeros números impares (hasta el 21) y extrae los elementos que ocupan los lugares 1, 4, 5, 8. Elimina del vector el segundo elementoSolución: 📝Ejercicio 9: define una cadena de caracteres texto <- c(\"oso polar\", \"oso pardo\", \"salamandra\", \"buho\", \"lechuza\", \"oso malayo\"). Usa str_count() para contabilizar el número de osos. Usa str_starts() para saber que elemento del vector es un oso o . Obten la longitud de cada cadena. Sustituye en todas las cadenas la o por *Solución:","code":"\n# Vector de números\nx <- c(1, 10, -1, 2)\n\n# Suma\nsum(x)## [1] 12\n# Vector de números\ny <- c(5, -7, 8, -3)\n\n# Suma\nx + y## [1]  6  3  7 -1\nsum((x + y) > 0)## [1] 3\n# Otra forma\nsuma <- x + y\nsum(suma > 0)## [1] 3\n# Ordenamos el vector (con sort)\nsort(x)## [1] -1  1  2 10\n# Ordenamos el vector  (con order)\nx[order(x)]## [1] -1  1  2 10\nx<- c(1, 10, -1, 2)\n\n# Encontrando el lugar que ocupa el máximo y mínimo\nwhich.max(x)## [1] 2\nwhich.min(x)## [1] 3\n# Vector lógico: mayores que 1 y menores que 7\nx > 1 & x < 7## [1] FALSE FALSE FALSE  TRUE\n# ¿Son todos positivos? Mira también any()\nall(x > 0)## [1] FALSE\n# Vector\nz <- c(-1, 0, 4, 5, -2)\n\n# ¿Cuáles son ausentes tras aplicar la raíz cuadrada?\nis.nan(sqrt(z))## [1]  TRUE FALSE FALSE FALSE  TRUE\n# Vector de impares (de 1 a 21 saltando de dos en dos)\nx <- seq(1, 21, by = 2)\n\n# Seleccionamos elementos\nx[c(1, 4, 5, 8)]## [1]  1  7  9 15\n# Eliminamos elementos\ny <- x[-2]\ny##  [1]  1  5  7  9 11 13 15 17 19 21\ntexto <- c(\"oso polar\", \"oso pardo\", \"salamandra\", \"buho\", \"lechuza\", \"oso malayo\")\n\n# Cuenta el número de cadenas que contienen la palabra \"oso\"\nstr_count(texto, \"oso\")## [1] 1 1 0 0 0 1\n# Nos devuelve TRUE en las cadenas que empiecen por \"oso\"\nstr_starts(texto, \"oso\")## [1]  TRUE  TRUE FALSE FALSE FALSE  TRUE\nstr_ends(texto, \"oso\") # devuelve todo FALSE## [1] FALSE FALSE FALSE FALSE FALSE FALSE\n# Longitud de cada cadena\nstr_length(texto)## [1]  9  9 10  4  7 10\n# Sustituimos en todas las oes por *\nstr_replace_all(texto, \"o\", \"*\")## [1] \"*s* p*lar\"  \"*s* pard*\"  \"salamandra\" \"buh*\"       \"lechuza\"   \n## [6] \"*s* malay*\""},{"path":"ejercicios-recopilados.html","id":"fechas","chapter":"📝 Ejercicios recopilados","heading":"0.4 Fechas","text":"Scripts usados:script08.R: operaciones con vectores. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script08.R(haz click en las flechas para ver soluciones)📝Ejercicio 1: obten la fecha de hoy, define la fecha de tu cumpleaños, y calcula la diferencia de días. Solución: 📝Ejercicio 2: define la fecha de tu cumpleaños y determina si fue año bisiesto. Súmale 1-2-3-4-5 semanas. Solución: 📝Ejercicio 3: extrae el mes, año y día de la semana de tu cumpleaños Solución: 📝Ejercicio 4: calcula los días que han pasado desde la fecha de tu nacimiento Solución: ","code":"\nlibrary(lubridate)\n# Hoy\nhoy <- today()\n\n# Cumple (diferentes formatos de entrada)\ncumple <- as_date(\"1989-09-10\") # por defecto\ncumple <- as_date(\"10-09-1989\", format = \"%d-%m-%Y\")\n\n# Diferencia\nhoy - cumple## Time difference of 12055 days\ncumple <- as_date(\"1989-09-10\") # por defecto\n\n# Bisiesto\nleap_year(cumple)## [1] FALSE\n# Sumamos semanaes\ncumple + weeks(1:5)## [1] \"1989-09-17\" \"1989-09-24\" \"1989-10-01\" \"1989-10-08\" \"1989-10-15\"\n# Mes\nmonth(cumple)## [1] 9\n# Año \nyear(cumple)## [1] 1989\n# wday\nwday(cumple, week_start = 1)## [1] 7\nwday(cumple, week_start = 1, label = TRUE)## [1] Sun\n## Levels: Mon < Tue < Wed < Thu < Fri < Sat < Sun\nseconds(today() - cumple)## [1] \"12055S\""},{"path":"ejercicios-recopilados.html","id":"datos-estructurados","chapter":"📝 Ejercicios recopilados","heading":"0.5 Datos estructurados","text":"Scripts usados:script09.R: datos estructurados. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script09.R(haz click en las flechas para ver soluciones)Ejercicio 1: modifica el código para definir una matriz x de ceros de 3 filas y 7 columnas.Solución: Ejercicio 2: la matriz anterior, suma un 1 cada número de la matriz y divide el resultado entre 5.Solución: Ejercicio 3: tras definir la matriz x calcula su transpuesta y obtén sus dimensionesSolución: Ejercicio 4: el siguiente código define una matriz de dimensiones 4 x 3 y calcula la suma por columnas. Modifica el código para que realice la suma por filas.Solución: Ejercicio 5: con la matriz anterior definida como matrix(1:12, nrow = 4), calcula la media de todos los elementos, la media de cada fila y la media de cada columna.Solución: Ejercicio 6: el data.frame llamado airquality, del paquete {datasets}, contiene variables de la calidad del aire de la ciudad de Nueva York desde mayo hasta septiembre de 1973. Obtén el nombre de las variables.\nSolución: Ejercicio 7: obtén las dimensiones del conjunto de datos. ¿Cuántas variables hay? ¿Cuántos días se han medido?Solución: Ejercicio 8: modifica el código inferior para que nos filtre solo los datos del mes de julio.Solución: Ejercicio 9: del conjunto airquality selecciona aquellos datos que sean ni de julio ni de agosto.Solución: Ejercicio 10: modifica el siguiente código para quedarte solo con las variable Ozone y Temp.Solución: Ejercicio 11: del conjunto airquality selecciona los datos de temperatura y viento de agosto.Solución: Ejercicio 12: calcula el número de filas borradas del ejercicio anterior. Tras hacer todo ello, traduce castellano el nombre de las columnas del data.frame filtrado.Solución: Ejercicio 13: añade los datos originales una columna con la fecha completa (recuerda que es del año 1973 todas las observaciones.Solución: ","code":"\n# Matriz\nx <- matrix(0, nrow = 2, ncol = 3)\nx\n# Matriz\nx <- matrix(0, nrow = 3, ncol = 7)\nx##      [,1] [,2] [,3] [,4] [,5] [,6] [,7]\n## [1,]    0    0    0    0    0    0    0\n## [2,]    0    0    0    0    0    0    0\n## [3,]    0    0    0    0    0    0    0\n(x + 1) / 5##      [,1] [,2] [,3] [,4] [,5] [,6] [,7]\n## [1,]  0.2  0.2  0.2  0.2  0.2  0.2  0.2\n## [2,]  0.2  0.2  0.2  0.2  0.2  0.2  0.2\n## [3,]  0.2  0.2  0.2  0.2  0.2  0.2  0.2\n# Transpuesta\nt(x)##      [,1] [,2] [,3]\n## [1,]    0    0    0\n## [2,]    0    0    0\n## [3,]    0    0    0\n## [4,]    0    0    0\n## [5,]    0    0    0\n## [6,]    0    0    0\n## [7,]    0    0    0\n# Dimensiones transpuesta: pasa de ser 3x7 a 7x3\ndim(t(x))## [1] 7 3\nncol(t(x)) # número de columnas de la transpuesta## [1] 3\nnrow(t(x)) # número de filas de la transpuesta## [1] 7\n# Matriz\nmatriz <- matrix(1:12, nrow = 4)\n\n# Suma por columnas\napply(matriz, MARGIN = 2, FUN = \"sum\")## [1] 10 26 42\n# Matriz\nmatriz <- matrix(1:12, nrow = 4)\n\n# Suma por filas\napply(matriz, MARGIN = 1, FUN = \"sum\")## [1] 15 18 21 24\n# Matriz\nmatriz <- matrix(1:12, nrow = 4)\n\n#  media de todos\nmean(matriz)## [1] 6.5\n# Media por filas (MARGIN = 1 ya que es una operación por filas)\napply(matriz, MARGIN = 1, FUN = \"mean\")## [1] 5 6 7 8\n# Media por filas (MARGIN = 2 ya que es una operación por filas)\napply(matriz, MARGIN = 2, FUN = \"mean\")## [1]  2.5  6.5 10.5\nlibrary(datasets)\nnames(airquality)## [1] \"Ozone\"   \"Solar.R\" \"Wind\"    \"Temp\"    \"Month\"   \"Day\"\n# Dimensiones\ndim(airquality)## [1] 153   6\nnrow(airquality)## [1] 153\nncol(airquality)## [1] 6\n# Filtramos filas\nfiltro_fila <- subset(., subset = Month < 6)\nfiltro_fila\n# Filtramos filas\nfiltro_fila <- subset(airquality, subset = Month == 7)\nfiltro_fila##    Ozone Solar.R Wind Temp Month Day\n## 62   135     269  4.1   84     7   1\n## 63    49     248  9.2   85     7   2\n## 64    32     236  9.2   81     7   3\n## 65    NA     101 10.9   84     7   4\n## 66    64     175  4.6   83     7   5\n## 67    40     314 10.9   83     7   6\n## 68    77     276  5.1   88     7   7\n## 69    97     267  6.3   92     7   8\n## 70    97     272  5.7   92     7   9\n## 71    85     175  7.4   89     7  10\n## 72    NA     139  8.6   82     7  11\n## 73    10     264 14.3   73     7  12\n## 74    27     175 14.9   81     7  13\n## 75    NA     291 14.9   91     7  14\n## 76     7      48 14.3   80     7  15\n## 77    48     260  6.9   81     7  16\n## 78    35     274 10.3   82     7  17\n## 79    61     285  6.3   84     7  18\n## 80    79     187  5.1   87     7  19\n## 81    63     220 11.5   85     7  20\n## 82    16       7  6.9   74     7  21\n## 83    NA     258  9.7   81     7  22\n## 84    NA     295 11.5   82     7  23\n## 85    80     294  8.6   86     7  24\n## 86   108     223  8.0   85     7  25\n## 87    20      81  8.6   82     7  26\n## 88    52      82 12.0   86     7  27\n## 89    82     213  7.4   88     7  28\n## 90    50     275  7.4   86     7  29\n## 91    64     253  7.4   83     7  30\n## 92    59     254  9.2   81     7  31\n# Filtramos filas\nfiltro_fila <-\n  subset(airquality, subset = !(Month %in% c(7, 8)))\nfiltro_fila##     Ozone Solar.R Wind Temp Month Day\n## 1      41     190  7.4   67     5   1\n## 2      36     118  8.0   72     5   2\n## 3      12     149 12.6   74     5   3\n## 4      18     313 11.5   62     5   4\n## 5      NA      NA 14.3   56     5   5\n## 6      28      NA 14.9   66     5   6\n## 7      23     299  8.6   65     5   7\n## 8      19      99 13.8   59     5   8\n## 9       8      19 20.1   61     5   9\n## 10     NA     194  8.6   69     5  10\n## 11      7      NA  6.9   74     5  11\n## 12     16     256  9.7   69     5  12\n## 13     11     290  9.2   66     5  13\n## 14     14     274 10.9   68     5  14\n## 15     18      65 13.2   58     5  15\n## 16     14     334 11.5   64     5  16\n## 17     34     307 12.0   66     5  17\n## 18      6      78 18.4   57     5  18\n## 19     30     322 11.5   68     5  19\n## 20     11      44  9.7   62     5  20\n## 21      1       8  9.7   59     5  21\n## 22     11     320 16.6   73     5  22\n## 23      4      25  9.7   61     5  23\n## 24     32      92 12.0   61     5  24\n## 25     NA      66 16.6   57     5  25\n## 26     NA     266 14.9   58     5  26\n## 27     NA      NA  8.0   57     5  27\n## 28     23      13 12.0   67     5  28\n## 29     45     252 14.9   81     5  29\n## 30    115     223  5.7   79     5  30\n## 31     37     279  7.4   76     5  31\n## 32     NA     286  8.6   78     6   1\n## 33     NA     287  9.7   74     6   2\n## 34     NA     242 16.1   67     6   3\n## 35     NA     186  9.2   84     6   4\n## 36     NA     220  8.6   85     6   5\n## 37     NA     264 14.3   79     6   6\n## 38     29     127  9.7   82     6   7\n## 39     NA     273  6.9   87     6   8\n## 40     71     291 13.8   90     6   9\n## 41     39     323 11.5   87     6  10\n## 42     NA     259 10.9   93     6  11\n## 43     NA     250  9.2   92     6  12\n## 44     23     148  8.0   82     6  13\n## 45     NA     332 13.8   80     6  14\n## 46     NA     322 11.5   79     6  15\n## 47     21     191 14.9   77     6  16\n## 48     37     284 20.7   72     6  17\n## 49     20      37  9.2   65     6  18\n## 50     12     120 11.5   73     6  19\n## 51     13     137 10.3   76     6  20\n## 52     NA     150  6.3   77     6  21\n## 53     NA      59  1.7   76     6  22\n## 54     NA      91  4.6   76     6  23\n## 55     NA     250  6.3   76     6  24\n## 56     NA     135  8.0   75     6  25\n## 57     NA     127  8.0   78     6  26\n## 58     NA      47 10.3   73     6  27\n## 59     NA      98 11.5   80     6  28\n## 60     NA      31 14.9   77     6  29\n## 61     NA     138  8.0   83     6  30\n## 124    96     167  6.9   91     9   1\n## 125    78     197  5.1   92     9   2\n## 126    73     183  2.8   93     9   3\n## 127    91     189  4.6   93     9   4\n## 128    47      95  7.4   87     9   5\n## 129    32      92 15.5   84     9   6\n## 130    20     252 10.9   80     9   7\n## 131    23     220 10.3   78     9   8\n## 132    21     230 10.9   75     9   9\n## 133    24     259  9.7   73     9  10\n## 134    44     236 14.9   81     9  11\n## 135    21     259 15.5   76     9  12\n## 136    28     238  6.3   77     9  13\n## 137     9      24 10.9   71     9  14\n## 138    13     112 11.5   71     9  15\n## 139    46     237  6.9   78     9  16\n## 140    18     224 13.8   67     9  17\n## 141    13      27 10.3   76     9  18\n## 142    24     238 10.3   68     9  19\n## 143    16     201  8.0   82     9  20\n## 144    13     238 12.6   64     9  21\n## 145    23      14  9.2   71     9  22\n## 146    36     139 10.3   81     9  23\n## 147     7      49 10.3   69     9  24\n## 148    14      20 16.6   63     9  25\n## 149    30     193  6.9   70     9  26\n## 150    NA     145 13.2   77     9  27\n## 151    14     191 14.3   75     9  28\n## 152    18     131  8.0   76     9  29\n## 153    20     223 11.5   68     9  30\nfiltro_col <- subset(.,  select = c(\"Ozone\"))\nfiltro_col\n# Filtramos columnas\nfiltro_col <- subset(airquality,  select = c(\"Ozone\", \"Temp\"))\nfiltro_col##     Ozone Temp\n## 1      41   67\n## 2      36   72\n## 3      12   74\n## 4      18   62\n## 5      NA   56\n## 6      28   66\n## 7      23   65\n## 8      19   59\n## 9       8   61\n## 10     NA   69\n## 11      7   74\n## 12     16   69\n## 13     11   66\n## 14     14   68\n## 15     18   58\n## 16     14   64\n## 17     34   66\n## 18      6   57\n## 19     30   68\n## 20     11   62\n## 21      1   59\n## 22     11   73\n## 23      4   61\n## 24     32   61\n## 25     NA   57\n## 26     NA   58\n## 27     NA   57\n## 28     23   67\n## 29     45   81\n## 30    115   79\n## 31     37   76\n## 32     NA   78\n## 33     NA   74\n## 34     NA   67\n## 35     NA   84\n## 36     NA   85\n## 37     NA   79\n## 38     29   82\n## 39     NA   87\n## 40     71   90\n## 41     39   87\n## 42     NA   93\n## 43     NA   92\n## 44     23   82\n## 45     NA   80\n## 46     NA   79\n## 47     21   77\n## 48     37   72\n## 49     20   65\n## 50     12   73\n## 51     13   76\n## 52     NA   77\n## 53     NA   76\n## 54     NA   76\n## 55     NA   76\n## 56     NA   75\n## 57     NA   78\n## 58     NA   73\n## 59     NA   80\n## 60     NA   77\n## 61     NA   83\n## 62    135   84\n## 63     49   85\n## 64     32   81\n## 65     NA   84\n## 66     64   83\n## 67     40   83\n## 68     77   88\n## 69     97   92\n## 70     97   92\n## 71     85   89\n## 72     NA   82\n## 73     10   73\n## 74     27   81\n## 75     NA   91\n## 76      7   80\n## 77     48   81\n## 78     35   82\n## 79     61   84\n## 80     79   87\n## 81     63   85\n## 82     16   74\n## 83     NA   81\n## 84     NA   82\n## 85     80   86\n## 86    108   85\n## 87     20   82\n## 88     52   86\n## 89     82   88\n## 90     50   86\n## 91     64   83\n## 92     59   81\n## 93     39   81\n## 94      9   81\n## 95     16   82\n## 96     78   86\n## 97     35   85\n## 98     66   87\n## 99    122   89\n## 100    89   90\n## 101   110   90\n## 102    NA   92\n## 103    NA   86\n## 104    44   86\n## 105    28   82\n## 106    65   80\n## 107    NA   79\n## 108    22   77\n## 109    59   79\n## 110    23   76\n## 111    31   78\n## 112    44   78\n## 113    21   77\n## 114     9   72\n## 115    NA   75\n## 116    45   79\n## 117   168   81\n## 118    73   86\n## 119    NA   88\n## 120    76   97\n## 121   118   94\n## 122    84   96\n## 123    85   94\n## 124    96   91\n## 125    78   92\n## 126    73   93\n## 127    91   93\n## 128    47   87\n## 129    32   84\n## 130    20   80\n## 131    23   78\n## 132    21   75\n## 133    24   73\n## 134    44   81\n## 135    21   76\n## 136    28   77\n## 137     9   71\n## 138    13   71\n## 139    46   78\n## 140    18   67\n## 141    13   76\n## 142    24   68\n## 143    16   82\n## 144    13   64\n## 145    23   71\n## 146    36   81\n## 147     7   69\n## 148    14   63\n## 149    30   70\n## 150    NA   77\n## 151    14   75\n## 152    18   76\n## 153    20   68\n# Todo de una vez\nfiltro <- subset(airquality, subset = Month == 8,\n                 select = c(\"Temp\", \"Wind\"))\nfiltro##     Temp Wind\n## 93    81  6.9\n## 94    81 13.8\n## 95    82  7.4\n## 96    86  6.9\n## 97    85  7.4\n## 98    87  4.6\n## 99    89  4.0\n## 100   90 10.3\n## 101   90  8.0\n## 102   92  8.6\n## 103   86 11.5\n## 104   86 11.5\n## 105   82 11.5\n## 106   80  9.7\n## 107   79 11.5\n## 108   77 10.3\n## 109   79  6.3\n## 110   76  7.4\n## 111   78 10.9\n## 112   78 10.3\n## 113   77 15.5\n## 114   72 14.3\n## 115   75 12.6\n## 116   79  9.7\n## 117   81  3.4\n## 118   86  8.0\n## 119   88  5.7\n## 120   97  9.7\n## 121   94  2.3\n## 122   96  6.3\n## 123   94  6.3\n# Filas borradas\nnrow(airquality) - nrow(filtro)## [1] 122\n# Cambiamos nombres a castellano del conjunto filtrado\nnames(filtro) <- c(\"temperatura\", \"viento\")\n# Construimos las fechas (pegamos año-mes-día con \"-\")\nfechas <- \n  as_date(paste(\"1973\", airquality$Month, airquality$Day,\n                sep = \"-\"))\n\n# Añadimos\ndata.frame(airquality, fechas)##     Ozone Solar.R Wind Temp Month Day     fechas\n## 1      41     190  7.4   67     5   1 1973-05-01\n## 2      36     118  8.0   72     5   2 1973-05-02\n## 3      12     149 12.6   74     5   3 1973-05-03\n## 4      18     313 11.5   62     5   4 1973-05-04\n## 5      NA      NA 14.3   56     5   5 1973-05-05\n## 6      28      NA 14.9   66     5   6 1973-05-06\n## 7      23     299  8.6   65     5   7 1973-05-07\n## 8      19      99 13.8   59     5   8 1973-05-08\n## 9       8      19 20.1   61     5   9 1973-05-09\n## 10     NA     194  8.6   69     5  10 1973-05-10\n## 11      7      NA  6.9   74     5  11 1973-05-11\n## 12     16     256  9.7   69     5  12 1973-05-12\n## 13     11     290  9.2   66     5  13 1973-05-13\n## 14     14     274 10.9   68     5  14 1973-05-14\n## 15     18      65 13.2   58     5  15 1973-05-15\n## 16     14     334 11.5   64     5  16 1973-05-16\n## 17     34     307 12.0   66     5  17 1973-05-17\n## 18      6      78 18.4   57     5  18 1973-05-18\n## 19     30     322 11.5   68     5  19 1973-05-19\n## 20     11      44  9.7   62     5  20 1973-05-20\n## 21      1       8  9.7   59     5  21 1973-05-21\n## 22     11     320 16.6   73     5  22 1973-05-22\n## 23      4      25  9.7   61     5  23 1973-05-23\n## 24     32      92 12.0   61     5  24 1973-05-24\n## 25     NA      66 16.6   57     5  25 1973-05-25\n## 26     NA     266 14.9   58     5  26 1973-05-26\n## 27     NA      NA  8.0   57     5  27 1973-05-27\n## 28     23      13 12.0   67     5  28 1973-05-28\n## 29     45     252 14.9   81     5  29 1973-05-29\n## 30    115     223  5.7   79     5  30 1973-05-30\n## 31     37     279  7.4   76     5  31 1973-05-31\n## 32     NA     286  8.6   78     6   1 1973-06-01\n## 33     NA     287  9.7   74     6   2 1973-06-02\n## 34     NA     242 16.1   67     6   3 1973-06-03\n## 35     NA     186  9.2   84     6   4 1973-06-04\n## 36     NA     220  8.6   85     6   5 1973-06-05\n## 37     NA     264 14.3   79     6   6 1973-06-06\n## 38     29     127  9.7   82     6   7 1973-06-07\n## 39     NA     273  6.9   87     6   8 1973-06-08\n## 40     71     291 13.8   90     6   9 1973-06-09\n## 41     39     323 11.5   87     6  10 1973-06-10\n## 42     NA     259 10.9   93     6  11 1973-06-11\n## 43     NA     250  9.2   92     6  12 1973-06-12\n## 44     23     148  8.0   82     6  13 1973-06-13\n## 45     NA     332 13.8   80     6  14 1973-06-14\n## 46     NA     322 11.5   79     6  15 1973-06-15\n## 47     21     191 14.9   77     6  16 1973-06-16\n## 48     37     284 20.7   72     6  17 1973-06-17\n## 49     20      37  9.2   65     6  18 1973-06-18\n## 50     12     120 11.5   73     6  19 1973-06-19\n## 51     13     137 10.3   76     6  20 1973-06-20\n## 52     NA     150  6.3   77     6  21 1973-06-21\n## 53     NA      59  1.7   76     6  22 1973-06-22\n## 54     NA      91  4.6   76     6  23 1973-06-23\n## 55     NA     250  6.3   76     6  24 1973-06-24\n## 56     NA     135  8.0   75     6  25 1973-06-25\n## 57     NA     127  8.0   78     6  26 1973-06-26\n## 58     NA      47 10.3   73     6  27 1973-06-27\n## 59     NA      98 11.5   80     6  28 1973-06-28\n## 60     NA      31 14.9   77     6  29 1973-06-29\n## 61     NA     138  8.0   83     6  30 1973-06-30\n## 62    135     269  4.1   84     7   1 1973-07-01\n## 63     49     248  9.2   85     7   2 1973-07-02\n## 64     32     236  9.2   81     7   3 1973-07-03\n## 65     NA     101 10.9   84     7   4 1973-07-04\n## 66     64     175  4.6   83     7   5 1973-07-05\n## 67     40     314 10.9   83     7   6 1973-07-06\n## 68     77     276  5.1   88     7   7 1973-07-07\n## 69     97     267  6.3   92     7   8 1973-07-08\n## 70     97     272  5.7   92     7   9 1973-07-09\n## 71     85     175  7.4   89     7  10 1973-07-10\n## 72     NA     139  8.6   82     7  11 1973-07-11\n## 73     10     264 14.3   73     7  12 1973-07-12\n## 74     27     175 14.9   81     7  13 1973-07-13\n## 75     NA     291 14.9   91     7  14 1973-07-14\n## 76      7      48 14.3   80     7  15 1973-07-15\n## 77     48     260  6.9   81     7  16 1973-07-16\n## 78     35     274 10.3   82     7  17 1973-07-17\n## 79     61     285  6.3   84     7  18 1973-07-18\n## 80     79     187  5.1   87     7  19 1973-07-19\n## 81     63     220 11.5   85     7  20 1973-07-20\n## 82     16       7  6.9   74     7  21 1973-07-21\n## 83     NA     258  9.7   81     7  22 1973-07-22\n## 84     NA     295 11.5   82     7  23 1973-07-23\n## 85     80     294  8.6   86     7  24 1973-07-24\n## 86    108     223  8.0   85     7  25 1973-07-25\n## 87     20      81  8.6   82     7  26 1973-07-26\n## 88     52      82 12.0   86     7  27 1973-07-27\n## 89     82     213  7.4   88     7  28 1973-07-28\n## 90     50     275  7.4   86     7  29 1973-07-29\n## 91     64     253  7.4   83     7  30 1973-07-30\n## 92     59     254  9.2   81     7  31 1973-07-31\n## 93     39      83  6.9   81     8   1 1973-08-01\n## 94      9      24 13.8   81     8   2 1973-08-02\n## 95     16      77  7.4   82     8   3 1973-08-03\n## 96     78      NA  6.9   86     8   4 1973-08-04\n## 97     35      NA  7.4   85     8   5 1973-08-05\n## 98     66      NA  4.6   87     8   6 1973-08-06\n## 99    122     255  4.0   89     8   7 1973-08-07\n## 100    89     229 10.3   90     8   8 1973-08-08\n## 101   110     207  8.0   90     8   9 1973-08-09\n## 102    NA     222  8.6   92     8  10 1973-08-10\n## 103    NA     137 11.5   86     8  11 1973-08-11\n## 104    44     192 11.5   86     8  12 1973-08-12\n## 105    28     273 11.5   82     8  13 1973-08-13\n## 106    65     157  9.7   80     8  14 1973-08-14\n## 107    NA      64 11.5   79     8  15 1973-08-15\n## 108    22      71 10.3   77     8  16 1973-08-16\n## 109    59      51  6.3   79     8  17 1973-08-17\n## 110    23     115  7.4   76     8  18 1973-08-18\n## 111    31     244 10.9   78     8  19 1973-08-19\n## 112    44     190 10.3   78     8  20 1973-08-20\n## 113    21     259 15.5   77     8  21 1973-08-21\n## 114     9      36 14.3   72     8  22 1973-08-22\n## 115    NA     255 12.6   75     8  23 1973-08-23\n## 116    45     212  9.7   79     8  24 1973-08-24\n## 117   168     238  3.4   81     8  25 1973-08-25\n## 118    73     215  8.0   86     8  26 1973-08-26\n## 119    NA     153  5.7   88     8  27 1973-08-27\n## 120    76     203  9.7   97     8  28 1973-08-28\n## 121   118     225  2.3   94     8  29 1973-08-29\n## 122    84     237  6.3   96     8  30 1973-08-30\n## 123    85     188  6.3   94     8  31 1973-08-31\n## 124    96     167  6.9   91     9   1 1973-09-01\n## 125    78     197  5.1   92     9   2 1973-09-02\n## 126    73     183  2.8   93     9   3 1973-09-03\n## 127    91     189  4.6   93     9   4 1973-09-04\n## 128    47      95  7.4   87     9   5 1973-09-05\n## 129    32      92 15.5   84     9   6 1973-09-06\n## 130    20     252 10.9   80     9   7 1973-09-07\n## 131    23     220 10.3   78     9   8 1973-09-08\n## 132    21     230 10.9   75     9   9 1973-09-09\n## 133    24     259  9.7   73     9  10 1973-09-10\n## 134    44     236 14.9   81     9  11 1973-09-11\n## 135    21     259 15.5   76     9  12 1973-09-12\n## 136    28     238  6.3   77     9  13 1973-09-13\n## 137     9      24 10.9   71     9  14 1973-09-14\n## 138    13     112 11.5   71     9  15 1973-09-15\n## 139    46     237  6.9   78     9  16 1973-09-16\n## 140    18     224 13.8   67     9  17 1973-09-17\n## 141    13      27 10.3   76     9  18 1973-09-18\n## 142    24     238 10.3   68     9  19 1973-09-19\n## 143    16     201  8.0   82     9  20 1973-09-20\n## 144    13     238 12.6   64     9  21 1973-09-21\n## 145    23      14  9.2   71     9  22 1973-09-22\n## 146    36     139 10.3   81     9  23 1973-09-23\n## 147     7      49 10.3   69     9  24 1973-09-24\n## 148    14      20 16.6   63     9  25 1973-09-25\n## 149    30     193  6.9   70     9  26 1973-09-26\n## 150    NA     145 13.2   77     9  27 1973-09-27\n## 151    14     191 14.3   75     9  28 1973-09-28\n## 152    18     131  8.0   76     9  29 1973-09-29\n## 153    20     223 11.5   68     9  30 1973-09-30"},{"path":"ejercicios-recopilados.html","id":"listas","chapter":"📝 Ejercicios recopilados","heading":"0.6 Listas","text":"Scripts usados:script10.R: datos estructurados. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script10.R(haz click en las flechas para ver soluciones)Ejercicio 1: define una lista de 4 elementos de tipos distintos y accede al segundo de ellos (yo incluiré uno que sea un data.frame para que veas que en una lista cabe de todo).Solución: Ejercicio 2: accede los elementos que ocupan los lugares 1 y 4 de la lista definida anteriormente.Solución:Otra opción es acceder con los nombres Ejercicio 3: define una lista de 4 elementos que contenga, en una sola variable, tu nombre, apellido, edad y si estás soltero/.Solución:","code":"\n# Ejemplo: lista con texto, numérico, lógico y un data.frame\nlista_ejemplo <- list(\"nombre\" = \"Javier\", \"cp\" = 28019,\n                      \"soltero\" = TRUE,\n                      \"notas\" = data.frame(\"mates\" = c(7.5, 8, 9),\n                                           \"lengua\" = c(10, 5, 6)))\nlista_ejemplo## $nombre\n## [1] \"Javier\"\n## \n## $cp\n## [1] 28019\n## \n## $soltero\n## [1] TRUE\n## \n## $notas\n##   mates lengua\n## 1   7.5     10\n## 2   8.0      5\n## 3   9.0      6\n# Longitud\nlength(lista_ejemplo)## [1] 4\n# Accedemos al elemento dos\nlista_ejemplo[[2]]## [1] 28019\n# Accedemos al 1 y al 4\nlista_ejemplo[c(1, 4)]## $nombre\n## [1] \"Javier\"\n## \n## $notas\n##   mates lengua\n## 1   7.5     10\n## 2   8.0      5\n## 3   9.0      6\n# Accedemos al 1 y al 4\nlista_ejemplo$nombre## [1] \"Javier\"\nlista_ejemplo$notas##   mates lengua\n## 1   7.5     10\n## 2   8.0      5\n## 3   9.0      6\nlista_ejemplo[c(\"nombre\", \"notas\")]## $nombre\n## [1] \"Javier\"\n## \n## $notas\n##   mates lengua\n## 1   7.5     10\n## 2   8.0      5\n## 3   9.0      6\n# Creamos lista: con lubridate calculamos la diferencia de años desde la fecha de nuestro nacimiento hasta hoy (sea cuando sea hoy)\nlista_personal <- list(\"nombre\" = \"Javier\",\n                       \"apellidos\" = \"Álvarez Liébana\",\n                       \"edad\" = 32,\n                       \"soltero\" = TRUE)\nlista_personal## $nombre\n## [1] \"Javier\"\n## \n## $apellidos\n## [1] \"Álvarez Liébana\"\n## \n## $edad\n## [1] 32\n## \n## $soltero\n## [1] TRUE"},{"path":"ejercicios-recopilados.html","id":"estructuras-if-else","chapter":"📝 Ejercicios recopilados","heading":"0.7 Estructuras if-else","text":"Scripts usados:script11.R: -else. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script11.R(haz click en las flechas para ver soluciones)📝Ejercicio 1: modifica el código inferior para imprimir un mensaje por pantalla si todos los datos del conjunto airquality son de meses que sean enero.Solución: 📝Ejercicio 2: modifica el código inferior para guardar en una variable temperatura_alta un valor TRUE si alguno de los registros tiene una temperatura mayor 90 (están en Farenheit) y un FALSE en caso contrario.Solución: 📝Ejercicio 3: modifica el código inferior para imprimir un mensaje por pantalla si alguno de los días supera la temperatura de 100.Solución:debería imprimar nada porque ninguno cumple la condición. 📝Ejercicio 4: del paquete lubridate, la función hour() nos devuelve la hora de una fecha dada, y la función now() nos devuelve fecha y hora del momento actual. Con ambas funciones, y usando , imprime por pantalla \"buenas noches\" solo partir de las 21 horas. Solución: 📝Ejercicio 5: con las funciones del ejercicio anterior, y usando una estructura -else, imprime por pantalla \"buenos días\" (de 6 14 horas), \"buenas tardes\" (de 14 21 horas) o \"buenas noches\" (de las 21 las 6 horas). Solución: 📝Ejercicio 6: realiza el ejercicio anterior pero sin estructura de llaves, de forma concisa con ifelse(). Mira la ayuda si la necesitases poniendo ? ifelse en consola. Solución: ","code":"\n# install.packages(\"dataset\") # solo la primera vez\nlibrary(datasets) # paquete con los datos\nmes <- airquality$Month\n\nif (mes == 2) {\n  \n  print(\"Ningún dato es del mes de enero\")\n  \n}\n# install.packages(\"dataset\") # solo la primera vez\nlibrary(datasets) # paquete con los datos\nmes <- airquality$Month\n\nif (all(mes != 1)) { # todos con mes distinto de 1\n  \n  print(\"Ningún dato es del mes de enero\")\n  \n}## [1] \"Ningún dato es del mes de enero\"\ntemperatura <- airquality$Temp\n\nif (temperatura == 100) {\n  \n  print(\"Alguno de los registros tiene temperatura superior a 90 Farenheit\")\n  \n}\ntemperatura <- airquality$Temp\ntemperatura_alta <- FALSE # por defecto FALSE\nif (any(temperatura > 90)) {\n  \n  temperatura_alta <- TRUE # si se cumple la condición, a TRUE\n  \n}\ntemperatura <- airquality$Temp\n\nif (all(temperatura < 50)) {\n  \n  print(\"Alguno de los registros tiene temperatura superior a 100 Farenheit\")\n  \n}\ntemperatura <- airquality$Temp\n\nif (any(temperatura > 100)) { # nos basta con uno\n  \n  print(\"Alguno de los registros tiene temperatura superior a 100 Farenheit\")\n  \n}\n# Cargamos librería\nlibrary(lubridate)\n\n# Fecha-hora actual\nfecha_actual <- now()\n\n# Estructura if\nif (hour(fecha_actual) > 21) {\n  \n  cat(\"Buenas noches\") # print/cat dos formas de imprimir por pantalla\n}\n# Fecha actual\nfecha_actual <- now()\n\n# Estructura if-else\nif (hour(fecha_actual) > 6 & hour(fecha_actual) < 14) {\n  \n  cat(\"Buenos días\")\n  \n} else if (hour(fecha_actual) > 14 & hour(fecha_actual) < 21) {\n  \n  cat(\"Buenas tardes\")\n  \n} else {\n  \n  cat(\"Buenas noches\")\n}## Buenos días\n# Fecha actual\nfecha_actual <- now()\n\n# Estructura if-else\ncat(ifelse(hour(fecha_actual) > 6 & hour(fecha_actual) < 14,\n           \"Buenos días\",\n           ifelse(hour(fecha_actual) > 14 &\n                    hour(fecha_actual) < 21,\n                  \"Buenas tardes\", \"Buenas noches\")))## Buenos días"},{"path":"ejercicios-recopilados.html","id":"estructuras-for-y-while","chapter":"📝 Ejercicios recopilados","heading":"0.8 Estructuras for y while","text":"Scripts usados:script12.R: bucles. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script12.R(haz click en las flechas para ver soluciones)📝Ejercicio 1: modifica el código interior para diseñar un bucle de 5 iteraciones que recorra los 5 primeros impares y les sume uno.Solución: 📝Ejercicio 2: modifica el código interior para diseñar un bucle que parta con una variable conteo <- 1 y pare cuando llegue 6.Solución: 📝Ejercicio 3: construye un bucle que recorra las primeras 8 filas del conjunto de datos datasets::airquality y que imprima un mensaje con la temperaturaSolución: 📝Ejercicio 4: diseña un bucle de 200 iteraciones que, empezando en un valor inicial de 100 (euros), te sume 3€ si el número actual es par y te reste 5€ si es impar.Un número par o impar: un número par será todo aquel número que al dividir entre 2, la división es exacta, es decir, que su resto es nulo. Por ejemplo, al dividir 5 entre 2, el resto es 1, pero al dividir 12 entre 2 el resto es 0. Para calcula ese resto usaremos la función %%.Solución: 📝Ejercicio 5: diseña el anterior bucle pero guardando el dinero de cada iteración.Solución: 📝Ejercicio 6: diseña el bucle del ejercicio 4 parando cuando nos quede dinero.Solución:","code":"\nfor (i in 1:5) {\n  \n  print(i)\n}## [1] 1\n## [1] 2\n## [1] 3\n## [1] 4\n## [1] 5\n# Una forma\nfor (i in seq(1, 9, by = 2)) {\n  \n  print(i + 1)\n}## [1] 2\n## [1] 4\n## [1] 6\n## [1] 8\n## [1] 10\n# Otra\nfor (i in c(1, 3, 5, 7, 9)) {\n  \n  print(i + 1)\n}## [1] 2\n## [1] 4\n## [1] 6\n## [1] 8\n## [1] 10\nconteo <- 1\nwhile (conteo == 2) {\n  \n  print(conteo)\n}\nconteo <- 1\nwhile (conteo < 6) {\n  \n  print(conteo)\n  conteo <- conteo <- conteo + 1\n}## [1] 1\n## [1] 2\n## [1] 3\n## [1] 4\n## [1] 5\nfor (i in 1:8) {\n  \n  print(glue(\"La temperatura es de {airquality$Temp[i]}ºF\"))\n}## La temperatura es de 67ºF\n## La temperatura es de 72ºF\n## La temperatura es de 74ºF\n## La temperatura es de 62ºF\n## La temperatura es de 56ºF\n## La temperatura es de 66ºF\n## La temperatura es de 65ºF\n## La temperatura es de 59ºF\n5 %% 2## [1] 1\n12 %% 2## [1] 0\n23 %% 2## [1] 1\n46 %% 2## [1] 0\n# dinero inicial\ndinero <- 100\n\n# Bucle for\nfor (i in 1:200) {\n  \n  dinero <- ifelse(dinero %% 2 == 0, dinero + 3, dinero  - 5)\n  \n}\ndinero## [1] -100\n# vector de importes\ndinero <- rep(0, 201)\ndinero[1] <- 100 # dinero inicial\n\n# Bucle for\nfor (i in 2:201) {\n  \n  # si dinero[i - 1] es par o  impar\n  dinero[i] <- ifelse(dinero[i - 1] %% 2 == 0, dinero[i - 1] + 3,\n                      dinero[i - 1]  - 5)\n  \n}\ndinero##   [1]  100  103   98  101   96   99   94   97   92   95   90   93   88   91   86\n##  [16]   89   84   87   82   85   80   83   78   81   76   79   74   77   72   75\n##  [31]   70   73   68   71   66   69   64   67   62   65   60   63   58   61   56\n##  [46]   59   54   57   52   55   50   53   48   51   46   49   44   47   42   45\n##  [61]   40   43   38   41   36   39   34   37   32   35   30   33   28   31   26\n##  [76]   29   24   27   22   25   20   23   18   21   16   19   14   17   12   15\n##  [91]   10   13    8   11    6    9    4    7    2    5    0    3   -2    1   -4\n## [106]   -1   -6   -3   -8   -5  -10   -7  -12   -9  -14  -11  -16  -13  -18  -15\n## [121]  -20  -17  -22  -19  -24  -21  -26  -23  -28  -25  -30  -27  -32  -29  -34\n## [136]  -31  -36  -33  -38  -35  -40  -37  -42  -39  -44  -41  -46  -43  -48  -45\n## [151]  -50  -47  -52  -49  -54  -51  -56  -53  -58  -55  -60  -57  -62  -59  -64\n## [166]  -61  -66  -63  -68  -65  -70  -67  -72  -69  -74  -71  -76  -73  -78  -75\n## [181]  -80  -77  -82  -79  -84  -81  -86  -83  -88  -85  -90  -87  -92  -89  -94\n## [196]  -91  -96  -93  -98  -95 -100\ndinero <- 100 # dinero inicial\n\n# Bucle while\nwhile (dinero > 0) {\n  \n  dinero <- ifelse(dinero %% 2 == 0, dinero + 3, dinero - 5)\n  \n}\ndinero## [1] 0"},{"path":"ejercicios-recopilados.html","id":"funciones","chapter":"📝 Ejercicios recopilados","heading":"0.9 Funciones","text":"Scripts usados:script13.R: funciones. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script13.R(haz click en las flechas para ver soluciones)Ejercicio 1: modifica el código inferior para definir una función llamada funcion_suma, de forma que dados dos elementos, devuelve su suma.Solución:&nsbp;Ejercicio 2: modifica el código inferior para definir una función llamada funcion_producto, de forma que dados dos elementos, devuelve su producto.Solución: Ejercicio 3: modifica el código inferior para definir una función llamada funcion_producto, de forma que dados dos elementos, devuelve su producto, pero que por defecto calcule el cuadrado (es decir, por defecto un solo argumento, y el resultado sea el número por sí mismo)Solución: Ejercicio 4: define una función llamada igualdad_nombres que, dados dos nombres persona_1 e persona_2, nos diga si son iguales o . Hazlo considerando importantes las mayúsculas, y sin que importen las mayúsculas. Recuerda que con toupper() podemos pasar todo un texto mayúscula. Solución: Ejercicio 5: define una función llamada pares que, dados dos números x e y, nos diga si la suma de ambos es par o .Recuerda que con %% podemos obtener el resto de un número al dividir entre 2.Solución: Ejercicio 6: define una función llamada pasar_a_celsius que, dada una temperatura \\(x\\) en Fahrenheit, la convierta grados Celsius (\\(ºC = (ºF - 32) * \\frac{5}{9}\\)). Aplica la función la columna Temp del conjunto airquality, e incorpórala al fichero en una nueva columna Temp_Celsius.\nSolución: ","code":"\n# Definimos función\nnombre <- function(x, y) {\n  \n  # Sumamos\n  suma <- # código a ejecutar\n  \n  # ¿Qué devolvemos?\n  return()\n}\n\n# Aplicamos la función\nsuma(3, 7)\n# Definimos función\nfuncion_suma <- function(x, y) {\n  \n  # Sumamos\n  suma <- x + y\n  \n  # Devolvemos la salida\n  return(suma)\n}\n\n# Aplicamos la función\nfuncion_suma(3, 7)## [1] 10\n# Definimos función\nnombre <- function(x, y) {\n  \n  # Multiplicamos\n  producto <- # código de la multiplicación\n  \n  # ¿Qué devolvemos?\n  return()\n}\n\n# Aplicamos la función\nproducto(3, -7)\n# Definimos función\nfuncion_producto <- function(x, y) {\n  \n  # Multiplicamos\n  producto <- x * y\n  \n  # Devolvemos la salida\n  return(producto)\n}\n\n# Aplicamos la función\nfuncion_producto(3, -7)## [1] -21\n# Definimos función\nnombre <- function(x, y) {\n  \n  # Multiplicamos\n  producto <- # código de la multiplicación\n  \n  # ¿Qué devolvemos?\n  return()\n}\n\n# Aplicamos la función solo con un argumento\nproducto(3)\n\n# Aplicamos la función con dos argumentos\nproducto(3, -7)\n# Definimos función\nfuncion_producto <- function(x, y = x) {\n  \n  # Multiplicamos\n  producto <- x * y\n  \n  # Devolvemos la salida\n  return(producto)\n}\n\n# Aplicamos la función\nfuncion_producto(3) # por defecto x = 3, y = 3## [1] 9\nfuncion_producto(3, -7)## [1] -21\n# Distinguiendo mayúsculas\nigualdad_nombres <- function(persona_1, persona_2) {\n  \n  return(persona_1 == persona_2)\n}\nigualdad_nombres(\"Javi\", \"javi\")## [1] FALSE\nigualdad_nombres(\"Javi\", \"Lucía\")## [1] FALSE\n# Sin importar mayúsculas\nigualdad_nombres <- function(persona_1, persona_2) {\n  \n  return(toupper(persona_1) == toupper(persona_2))\n}\nigualdad_nombres(\"Javi\", \"javi\")## [1] TRUE\nigualdad_nombres(\"Javi\", \"Lucía\")## [1] FALSE\n2 %% 2 # par, resto 0## [1] 0\n3 %% 2 # impar, resto 1## [1] 1\n# Definimos función\npares <- function(x, y) {\n  \n  # Sumamos\n  suma <- x + y\n  \n  # Comprobamos si es par\n  par <- suma %% 2 == 0\n  \n  # Devolvemos la salida\n  return(par)\n}\n\n# Aplicamos la función\npares(1, 3) # suma 4 (par)## [1] TRUE\npares(2, 7) # suma 9 (impar)## [1] FALSE\n# Definimos función\npasar_a_celsius <- function(x) {\n  \n  # Temperatura en Celsius\n  x_celsius <- (x - 32) * (5 / 9)\n  \n  # Devolvemos la salida\n  return(x_celsius)\n}\n\n# Aplicamos la función\npasar_a_celsius(0)## [1] -17.77778\npasar_a_celsius(80)## [1] 26.66667\n# Aplicamos\ndata.frame(airquality,\n           \"Temp_Celsius\" = pasar_a_celsius(airquality$Temp))##     Ozone Solar.R Wind Temp Month Day Temp_Celsius\n## 1      41     190  7.4   67     5   1     19.44444\n## 2      36     118  8.0   72     5   2     22.22222\n## 3      12     149 12.6   74     5   3     23.33333\n## 4      18     313 11.5   62     5   4     16.66667\n## 5      NA      NA 14.3   56     5   5     13.33333\n## 6      28      NA 14.9   66     5   6     18.88889\n## 7      23     299  8.6   65     5   7     18.33333\n## 8      19      99 13.8   59     5   8     15.00000\n## 9       8      19 20.1   61     5   9     16.11111\n## 10     NA     194  8.6   69     5  10     20.55556\n## 11      7      NA  6.9   74     5  11     23.33333\n## 12     16     256  9.7   69     5  12     20.55556\n## 13     11     290  9.2   66     5  13     18.88889\n## 14     14     274 10.9   68     5  14     20.00000\n## 15     18      65 13.2   58     5  15     14.44444\n## 16     14     334 11.5   64     5  16     17.77778\n## 17     34     307 12.0   66     5  17     18.88889\n## 18      6      78 18.4   57     5  18     13.88889\n## 19     30     322 11.5   68     5  19     20.00000\n## 20     11      44  9.7   62     5  20     16.66667\n## 21      1       8  9.7   59     5  21     15.00000\n## 22     11     320 16.6   73     5  22     22.77778\n## 23      4      25  9.7   61     5  23     16.11111\n## 24     32      92 12.0   61     5  24     16.11111\n## 25     NA      66 16.6   57     5  25     13.88889\n## 26     NA     266 14.9   58     5  26     14.44444\n## 27     NA      NA  8.0   57     5  27     13.88889\n## 28     23      13 12.0   67     5  28     19.44444\n## 29     45     252 14.9   81     5  29     27.22222\n## 30    115     223  5.7   79     5  30     26.11111\n## 31     37     279  7.4   76     5  31     24.44444\n## 32     NA     286  8.6   78     6   1     25.55556\n## 33     NA     287  9.7   74     6   2     23.33333\n## 34     NA     242 16.1   67     6   3     19.44444\n## 35     NA     186  9.2   84     6   4     28.88889\n## 36     NA     220  8.6   85     6   5     29.44444\n## 37     NA     264 14.3   79     6   6     26.11111\n## 38     29     127  9.7   82     6   7     27.77778\n## 39     NA     273  6.9   87     6   8     30.55556\n## 40     71     291 13.8   90     6   9     32.22222\n## 41     39     323 11.5   87     6  10     30.55556\n## 42     NA     259 10.9   93     6  11     33.88889\n## 43     NA     250  9.2   92     6  12     33.33333\n## 44     23     148  8.0   82     6  13     27.77778\n## 45     NA     332 13.8   80     6  14     26.66667\n## 46     NA     322 11.5   79     6  15     26.11111\n## 47     21     191 14.9   77     6  16     25.00000\n## 48     37     284 20.7   72     6  17     22.22222\n## 49     20      37  9.2   65     6  18     18.33333\n## 50     12     120 11.5   73     6  19     22.77778\n## 51     13     137 10.3   76     6  20     24.44444\n## 52     NA     150  6.3   77     6  21     25.00000\n## 53     NA      59  1.7   76     6  22     24.44444\n## 54     NA      91  4.6   76     6  23     24.44444\n## 55     NA     250  6.3   76     6  24     24.44444\n## 56     NA     135  8.0   75     6  25     23.88889\n## 57     NA     127  8.0   78     6  26     25.55556\n## 58     NA      47 10.3   73     6  27     22.77778\n## 59     NA      98 11.5   80     6  28     26.66667\n## 60     NA      31 14.9   77     6  29     25.00000\n## 61     NA     138  8.0   83     6  30     28.33333\n## 62    135     269  4.1   84     7   1     28.88889\n## 63     49     248  9.2   85     7   2     29.44444\n## 64     32     236  9.2   81     7   3     27.22222\n## 65     NA     101 10.9   84     7   4     28.88889\n## 66     64     175  4.6   83     7   5     28.33333\n## 67     40     314 10.9   83     7   6     28.33333\n## 68     77     276  5.1   88     7   7     31.11111\n## 69     97     267  6.3   92     7   8     33.33333\n## 70     97     272  5.7   92     7   9     33.33333\n## 71     85     175  7.4   89     7  10     31.66667\n## 72     NA     139  8.6   82     7  11     27.77778\n## 73     10     264 14.3   73     7  12     22.77778\n## 74     27     175 14.9   81     7  13     27.22222\n## 75     NA     291 14.9   91     7  14     32.77778\n## 76      7      48 14.3   80     7  15     26.66667\n## 77     48     260  6.9   81     7  16     27.22222\n## 78     35     274 10.3   82     7  17     27.77778\n## 79     61     285  6.3   84     7  18     28.88889\n## 80     79     187  5.1   87     7  19     30.55556\n## 81     63     220 11.5   85     7  20     29.44444\n## 82     16       7  6.9   74     7  21     23.33333\n## 83     NA     258  9.7   81     7  22     27.22222\n## 84     NA     295 11.5   82     7  23     27.77778\n## 85     80     294  8.6   86     7  24     30.00000\n## 86    108     223  8.0   85     7  25     29.44444\n## 87     20      81  8.6   82     7  26     27.77778\n## 88     52      82 12.0   86     7  27     30.00000\n## 89     82     213  7.4   88     7  28     31.11111\n## 90     50     275  7.4   86     7  29     30.00000\n## 91     64     253  7.4   83     7  30     28.33333\n## 92     59     254  9.2   81     7  31     27.22222\n## 93     39      83  6.9   81     8   1     27.22222\n## 94      9      24 13.8   81     8   2     27.22222\n## 95     16      77  7.4   82     8   3     27.77778\n## 96     78      NA  6.9   86     8   4     30.00000\n## 97     35      NA  7.4   85     8   5     29.44444\n## 98     66      NA  4.6   87     8   6     30.55556\n## 99    122     255  4.0   89     8   7     31.66667\n## 100    89     229 10.3   90     8   8     32.22222\n## 101   110     207  8.0   90     8   9     32.22222\n## 102    NA     222  8.6   92     8  10     33.33333\n## 103    NA     137 11.5   86     8  11     30.00000\n## 104    44     192 11.5   86     8  12     30.00000\n## 105    28     273 11.5   82     8  13     27.77778\n## 106    65     157  9.7   80     8  14     26.66667\n## 107    NA      64 11.5   79     8  15     26.11111\n## 108    22      71 10.3   77     8  16     25.00000\n## 109    59      51  6.3   79     8  17     26.11111\n## 110    23     115  7.4   76     8  18     24.44444\n## 111    31     244 10.9   78     8  19     25.55556\n## 112    44     190 10.3   78     8  20     25.55556\n## 113    21     259 15.5   77     8  21     25.00000\n## 114     9      36 14.3   72     8  22     22.22222\n## 115    NA     255 12.6   75     8  23     23.88889\n## 116    45     212  9.7   79     8  24     26.11111\n## 117   168     238  3.4   81     8  25     27.22222\n## 118    73     215  8.0   86     8  26     30.00000\n## 119    NA     153  5.7   88     8  27     31.11111\n## 120    76     203  9.7   97     8  28     36.11111\n## 121   118     225  2.3   94     8  29     34.44444\n## 122    84     237  6.3   96     8  30     35.55556\n## 123    85     188  6.3   94     8  31     34.44444\n## 124    96     167  6.9   91     9   1     32.77778\n## 125    78     197  5.1   92     9   2     33.33333\n## 126    73     183  2.8   93     9   3     33.88889\n## 127    91     189  4.6   93     9   4     33.88889\n## 128    47      95  7.4   87     9   5     30.55556\n## 129    32      92 15.5   84     9   6     28.88889\n## 130    20     252 10.9   80     9   7     26.66667\n## 131    23     220 10.3   78     9   8     25.55556\n## 132    21     230 10.9   75     9   9     23.88889\n## 133    24     259  9.7   73     9  10     22.77778\n## 134    44     236 14.9   81     9  11     27.22222\n## 135    21     259 15.5   76     9  12     24.44444\n## 136    28     238  6.3   77     9  13     25.00000\n## 137     9      24 10.9   71     9  14     21.66667\n## 138    13     112 11.5   71     9  15     21.66667\n## 139    46     237  6.9   78     9  16     25.55556\n## 140    18     224 13.8   67     9  17     19.44444\n## 141    13      27 10.3   76     9  18     24.44444\n## 142    24     238 10.3   68     9  19     20.00000\n## 143    16     201  8.0   82     9  20     27.77778\n## 144    13     238 12.6   64     9  21     17.77778\n## 145    23      14  9.2   71     9  22     21.66667\n## 146    36     139 10.3   81     9  23     27.22222\n## 147     7      49 10.3   69     9  24     20.55556\n## 148    14      20 16.6   63     9  25     17.22222\n## 149    30     193  6.9   70     9  26     21.11111\n## 150    NA     145 13.2   77     9  27     25.00000\n## 151    14     191 14.3   75     9  28     23.88889\n## 152    18     131  8.0   76     9  29     24.44444\n## 153    20     223 11.5   68     9  30     20.00000"},{"path":"ejercicios-recopilados.html","id":"practica-final","chapter":"📝 Ejercicios recopilados","heading":"0.10 Practica final","text":"Scripts usados:script16.R: practica final. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script16.R(haz click en las flechas para ver soluciones)Ejercicio 1: carga el fichero titanic.RData que tienes en la carpeta DATOS https://github.com/dadosdelaplace/courses-intro-r/tree/main/DATOS.Solución:&nsbp;Ejercicio 2: obtén el número de individuos y de variables de nuestro datasetSolución:&nsbp;Ejercicio 3: ¿de qué tipo es la variable Name? ¿Y la variable Pclass? ¿Y la variable Age? ¿Y la variable SurvivedSolución:&nsbp;Ejercicio 4: internamente tenemos 0 y 1 pero la variable Survived en realidad debería ser variable lógica (TRUE si sobrevivió). Modifica la variable para ponter TRUE cuando vale 1 y FALSE en caso contrarioSolución:&nsbp;Ejercicio 5: en la variable Name tenemos guardado el nombre de los pasajeros, pero también su título (Mr., Mrs, Miss, etc). Extrae los nombres de las personas con Miss.Solución:&nsbp;Ejercicio 6: calcula la media de edad de los pasajeros del Titanic (recuerda: si hay datos ausentes…). Haz lo mismo pero por sexos (male/female)Solución:&nsbp;Ejercicio 7: ordena la edad de los pasajeros del Titanic de menor mayor, y de mayor menorSolución:&nsbp;Ejercicio 8: vamos clasificar los pasajeros según su edad en \"mayores de edad\" y \"menores de edad\". Crea un función que, dada una edad, nos diga si es mayor o menor de edad. Aplícala después nuestra variable Age y guarda el resultado en una variable edad_recodificada que añadamos los datos originalesSolución:&nsbp;Ejercicio 9: el accidente del Titanic se produjo el 15 de abril de 1912. Tomando dicha fecha como referencia, usa la edad de los pasajeros para añadir una nueva variable que sea la fecha de nacimiento.Solución:","code":"\nload(\"./DATOS/titanic.RData\")\nncol(titanic) # variables## [1] 12\nnrow(titanic) # individuos## [1] 891\nclass(titanic$Name) ## [1] \"character\"\nclass(titanic$Pclass)## [1] \"integer\"\nclass(titanic$Age)## [1] \"numeric\"\nclass(titanic$Survived)## [1] \"integer\"\n# Modo ifelse\ntitanic$Survived <- ifelse(titanic$Survived == 1, TRUE, FALSE)\n\n# otra forma: modo bucle + if\nload(\"./DATOS/titanic.RData\")\nnueva_variable <- rep(FALSE, length(titanic$Survived))\nfor (i in 1:length(titanic$Survived)) {\n  \n  if (titanic$Survived[i] == 1) {\n    \n    nueva_variable[i] <- TRUE\n    \n  }\n}\ntitanic$Survived <- nueva_variable\nlibrary(stringr)\n# Con str_detect obtenemos un TRUE/FALSE\ntitanic$Name[str_detect(titanic$Name, pattern = \"Miss.\")]##   [1] \"Heikkinen, Miss. Laina\"                                               \n##   [2] \"Sandstrom, Miss. Marguerite Rut\"                                      \n##   [3] \"Bonnell, Miss. Elizabeth\"                                             \n##   [4] \"Vestrom, Miss. Hulda Amanda Adolfina\"                                 \n##   [5] \"McGowan, Miss. Anna \\\"Annie\\\"\"                                        \n##   [6] \"Palsson, Miss. Torborg Danira\"                                        \n##   [7] \"O'Dwyer, Miss. Ellen \\\"Nellie\\\"\"                                      \n##   [8] \"Glynn, Miss. Mary Agatha\"                                             \n##   [9] \"Vander Planke, Miss. Augusta Maria\"                                   \n##  [10] \"Nicola-Yarred, Miss. Jamila\"                                          \n##  [11] \"Laroche, Miss. Simonne Marie Anne Andree\"                             \n##  [12] \"Devaney, Miss. Margaret Delia\"                                        \n##  [13] \"O'Driscoll, Miss. Bridget\"                                            \n##  [14] \"Rugg, Miss. Emily\"                                                    \n##  [15] \"West, Miss. Constance Mirium\"                                         \n##  [16] \"Icard, Miss. Amelie\"                                                  \n##  [17] \"Andersson, Miss. Erna Alexandra\"                                      \n##  [18] \"Goodwin, Miss. Lillian Amy\"                                           \n##  [19] \"Dowdell, Miss. Elizabeth\"                                             \n##  [20] \"McDermott, Miss. Brigdet Delia\"                                       \n##  [21] \"Ilett, Miss. Bertha\"                                                  \n##  [22] \"Fortune, Miss. Mabel Helen\"                                           \n##  [23] \"Petranec, Miss. Matilda\"                                              \n##  [24] \"Salkjelsvik, Miss. Anna Kristine\"                                     \n##  [25] \"Moran, Miss. Bertha\"                                                  \n##  [26] \"Zabour, Miss. Hileni\"                                                 \n##  [27] \"Jussila, Miss. Katriina\"                                              \n##  [28] \"Attalah, Miss. Malake\"                                                \n##  [29] \"Andersson, Miss. Ellis Anna Maria\"                                    \n##  [30] \"Webber, Miss. Susan\"                                                  \n##  [31] \"Peter, Miss. Anna\"                                                    \n##  [32] \"Newsom, Miss. Helen Monypeny\"                                         \n##  [33] \"Nysten, Miss. Anna Sofia\"                                             \n##  [34] \"Ford, Miss. Robina Maggie \\\"Ruby\\\"\"                                   \n##  [35] \"Gilnagh, Miss. Katherine \\\"Katie\\\"\"                                   \n##  [36] \"Johnson, Miss. Eleanor Ileen\"                                         \n##  [37] \"Isham, Miss. Ann Elizabeth\"                                           \n##  [38] \"Sage, Miss. Constance Gladys\"                                         \n##  [39] \"Kink-Heilmann, Miss. Luise Gretchen\"                                  \n##  [40] \"Andersen-Jensen, Miss. Carla Christine Nielsine\"                      \n##  [41] \"Lurette, Miss. Elise\"                                                 \n##  [42] \"Madigan, Miss. Margaret \\\"Maggie\\\"\"                                   \n##  [43] \"Yrois, Miss. Henriette (\\\"Mrs Harbeck\\\")\"                             \n##  [44] \"Strom, Miss. Telma Matilda\"                                           \n##  [45] \"Carr, Miss. Helen \\\"Ellen\\\"\"                                          \n##  [46] \"Cameron, Miss. Clear Annie\"                                           \n##  [47] \"Newell, Miss. Madeleine\"                                              \n##  [48] \"Honkanen, Miss. Eliina\"                                               \n##  [49] \"Bazzani, Miss. Albina\"                                                \n##  [50] \"Lefebre, Miss. Mathilde\"                                              \n##  [51] \"Asplund, Miss. Lillian Gertrud\"                                       \n##  [52] \"Harknett, Miss. Alice Phoebe\"                                         \n##  [53] \"Collyer, Miss. Marjorie \\\"Lottie\\\"\"                                   \n##  [54] \"Zabour, Miss. Thamine\"                                                \n##  [55] \"Murphy, Miss. Katherine \\\"Kate\\\"\"                                     \n##  [56] \"Lindahl, Miss. Agda Thorilda Viktoria\"                                \n##  [57] \"Cherry, Miss. Gladys\"                                                 \n##  [58] \"Ward, Miss. Anna\"                                                     \n##  [59] \"Henry, Miss. Delia\"                                                   \n##  [60] \"Bissette, Miss. Amelia\"                                               \n##  [61] \"Healy, Miss. Hanora \\\"Nora\\\"\"                                         \n##  [62] \"Andrews, Miss. Kornelia Theodosia\"                                    \n##  [63] \"Lindblom, Miss. Augusta Charlotta\"                                    \n##  [64] \"Connolly, Miss. Kate\"                                                 \n##  [65] \"Barber, Miss. Ellen \\\"Nellie\\\"\"                                       \n##  [66] \"Haas, Miss. Aloisia\"                                                  \n##  [67] \"Allison, Miss. Helen Loraine\"                                         \n##  [68] \"Kelly, Miss. Anna Katherine \\\"Annie Kate\\\"\"                           \n##  [69] \"Keane, Miss. Nora A\"                                                  \n##  [70] \"Fleming, Miss. Margaret\"                                              \n##  [71] \"Francatelli, Miss. Laura Mabel\"                                       \n##  [72] \"Hays, Miss. Margaret Bechstein\"                                       \n##  [73] \"Ryerson, Miss. Emily Borie\"                                           \n##  [74] \"Nilsson, Miss. Helmina Josefina\"                                      \n##  [75] \"Wick, Miss. Mary Natalie\"                                             \n##  [76] \"Slayter, Miss. Hilda Mary\"                                            \n##  [77] \"Young, Miss. Marie Grice\"                                             \n##  [78] \"Hippach, Miss. Jean Gertrude\"                                         \n##  [79] \"McCoy, Miss. Agnes\"                                                   \n##  [80] \"Burns, Miss. Elizabeth Margaret\"                                      \n##  [81] \"Fortune, Miss. Alice Elizabeth\"                                       \n##  [82] \"Brown, Miss. Amelia \\\"Mildred\\\"\"                                      \n##  [83] \"Smith, Miss. Marion Elsie\"                                            \n##  [84] \"Bowerman, Miss. Elsie Edith\"                                          \n##  [85] \"Funk, Miss. Annie Clemmer\"                                            \n##  [86] \"McGovern, Miss. Mary\"                                                 \n##  [87] \"Mockler, Miss. Helen Mary \\\"Ellie\\\"\"                                  \n##  [88] \"Jermyn, Miss. Annie\"                                                  \n##  [89] \"Palsson, Miss. Stina Viola\"                                           \n##  [90] \"Landergren, Miss. Aurora Adelia\"                                      \n##  [91] \"Bidois, Miss. Rosalie\"                                                \n##  [92] \"Nakid, Miss. Maria (\\\"Mary\\\")\"                                        \n##  [93] \"Buss, Miss. Kate\"                                                     \n##  [94] \"Lehmann, Miss. Bertha\"                                                \n##  [95] \"Newell, Miss. Marjorie\"                                               \n##  [96] \"Olsson, Miss. Elina\"                                                  \n##  [97] \"Jussila, Miss. Mari Aina\"                                             \n##  [98] \"Oreskovic, Miss. Marija\"                                              \n##  [99] \"Lefebre, Miss. Ida\"                                                   \n## [100] \"Minahan, Miss. Daisy E\"                                               \n## [101] \"Silven, Miss. Lyyli Karoliina\"                                        \n## [102] \"Van Impe, Miss. Catharina\"                                            \n## [103] \"Phillips, Miss. Kate Florence (\\\"Mrs Kate Louise Phillips Marshall\\\")\"\n## [104] \"Carter, Miss. Lucile Polk\"                                            \n## [105] \"Ford, Miss. Doolina Margaret \\\"Daisy\\\"\"                               \n## [106] \"Mellinger, Miss. Madeleine Violet\"                                    \n## [107] \"Baclini, Miss. Marie Catherine\"                                       \n## [108] \"Toomey, Miss. Ellen\"                                                  \n## [109] \"Baclini, Miss. Helene Barbara\"                                        \n## [110] \"Strandberg, Miss. Ida Sofia\"                                          \n## [111] \"Hirvonen, Miss. Hildur E\"                                             \n## [112] \"Lefebre, Miss. Jeannie\"                                               \n## [113] \"Eustis, Miss. Elizabeth Mussey\"                                       \n## [114] \"Canavan, Miss. Mary\"                                                  \n## [115] \"O'Sullivan, Miss. Bridget Mary\"                                       \n## [116] \"Laitinen, Miss. Kristina Sofia\"                                       \n## [117] \"Maioni, Miss. Roberta\"                                                \n## [118] \"Perreault, Miss. Anne\"                                                \n## [119] \"Ridsdale, Miss. Lucy\"                                                 \n## [120] \"Quick, Miss. Phyllis May\"                                             \n## [121] \"Cacic, Miss. Marija\"                                                  \n## [122] \"Hart, Miss. Eva Miriam\"                                               \n## [123] \"LeRoy, Miss. Bertha\"                                                  \n## [124] \"Frolicher, Miss. Hedwig Margaritha\"                                   \n## [125] \"Crosby, Miss. Harriet R\"                                              \n## [126] \"Andersson, Miss. Ingeborg Constanzia\"                                 \n## [127] \"Andersson, Miss. Sigrid Elisabeth\"                                    \n## [128] \"Ohman, Miss. Velin\"                                                   \n## [129] \"Meanwell, Miss. (Marion Ogden)\"                                       \n## [130] \"Kelly, Miss. Mary\"                                                    \n## [131] \"Garside, Miss. Ethel\"                                                 \n## [132] \"Christy, Miss. Julie Rachel\"                                          \n## [133] \"Taussig, Miss. Ruth\"                                                  \n## [134] \"Bourke, Miss. Mary\"                                                   \n## [135] \"Leitch, Miss. Jessie Wills\"                                           \n## [136] \"Shutes, Miss. Elizabeth W\"                                            \n## [137] \"Murphy, Miss. Margaret Jane\"                                          \n## [138] \"Herman, Miss. Alice\"                                                  \n## [139] \"Becker, Miss. Marion Louise\"                                          \n## [140] \"Longley, Miss. Gretchen Fiske\"                                        \n## [141] \"Skoog, Miss. Mabel\"                                                   \n## [142] \"Davis, Miss. Mary\"                                                    \n## [143] \"Skoog, Miss. Margit Elizabeth\"                                        \n## [144] \"Baclini, Miss. Eugenie\"                                               \n## [145] \"Stanley, Miss. Amy Zillah Elsie\"                                      \n## [146] \"Doling, Miss. Elsie\"                                                  \n## [147] \"O'Leary, Miss. Hanora \\\"Norah\\\"\"                                      \n## [148] \"Hegarty, Miss. Hanora \\\"Nora\\\"\"                                       \n## [149] \"Turja, Miss. Anna Sofia\"                                              \n## [150] \"Peters, Miss. Katie\"                                                  \n## [151] \"Madill, Miss. Georgette Alexandra\"                                    \n## [152] \"Karun, Miss. Manca\"                                                   \n## [153] \"Mullens, Miss. Katherine \\\"Katie\\\"\"                                   \n## [154] \"Barbara, Miss. Saiide\"                                                \n## [155] \"Cleaver, Miss. Alice\"                                                 \n## [156] \"Endres, Miss. Caroline Louise\"                                        \n## [157] \"Troutt, Miss. Edwina Celia \\\"Winnie\\\"\"                                \n## [158] \"Harper, Miss. Annie Jessie \\\"Nina\\\"\"                                  \n## [159] \"Mannion, Miss. Margareth\"                                             \n## [160] \"Ilmakangas, Miss. Pieta Sofia\"                                        \n## [161] \"Allen, Miss. Elisabeth Walton\"                                        \n## [162] \"Ryerson, Miss. Susan Parker \\\"Suzette\\\"\"                              \n## [163] \"Sinkkonen, Miss. Anna\"                                                \n## [164] \"Wells, Miss. Joan\"                                                    \n## [165] \"Mangan, Miss. Mary\"                                                   \n## [166] \"Emanuel, Miss. Virginia Ethel\"                                        \n## [167] \"Ayoub, Miss. Banoura\"                                                 \n## [168] \"Sjoblom, Miss. Anna Sofia\"                                            \n## [169] \"Sage, Miss. Stella Anna\"                                              \n## [170] \"Pettersson, Miss. Ellen Natalia\"                                      \n## [171] \"Andersson, Miss. Ebba Iris Alfrida\"                                   \n## [172] \"Heininen, Miss. Wendla Maria\"                                         \n## [173] \"Compton, Miss. Sara Rebecca\"                                          \n## [174] \"Serepeca, Miss. Augusta\"                                              \n## [175] \"Boulos, Miss. Nourelain\"                                              \n## [176] \"Lines, Miss. Mary Conover\"                                            \n## [177] \"Sage, Miss. Dorothy Edith \\\"Dolly\\\"\"                                  \n## [178] \"Duran y More, Miss. Asuncion\"                                         \n## [179] \"Najib, Miss. Adele Kiamie \\\"Jane\\\"\"                                   \n## [180] \"Dahlberg, Miss. Gerda Ulrika\"                                         \n## [181] \"Graham, Miss. Margaret Edith\"                                         \n## [182] \"Johnston, Miss. Catherine Helen \\\"Carrie\\\"\"\nmean(titanic$Age, na.rm = TRUE)## [1] 29.69912\nmean(titanic$Age[titanic$Sex == \"male\"], na.rm = TRUE)## [1] 30.72664\nmean(titanic$Age[titanic$Sex == \"female\"], na.rm = TRUE)## [1] 27.91571\nsort(titanic$Age) # menor a mayor##   [1]  0.42  0.67  0.75  0.75  0.83  0.83  0.92  1.00  1.00  1.00  1.00  1.00\n##  [13]  1.00  1.00  2.00  2.00  2.00  2.00  2.00  2.00  2.00  2.00  2.00  2.00\n##  [25]  3.00  3.00  3.00  3.00  3.00  3.00  4.00  4.00  4.00  4.00  4.00  4.00\n##  [37]  4.00  4.00  4.00  4.00  5.00  5.00  5.00  5.00  6.00  6.00  6.00  7.00\n##  [49]  7.00  7.00  8.00  8.00  8.00  8.00  9.00  9.00  9.00  9.00  9.00  9.00\n##  [61]  9.00  9.00 10.00 10.00 11.00 11.00 11.00 11.00 12.00 13.00 13.00 14.00\n##  [73] 14.00 14.00 14.00 14.00 14.00 14.50 15.00 15.00 15.00 15.00 15.00 16.00\n##  [85] 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00\n##  [97] 16.00 16.00 16.00 16.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00\n## [109] 17.00 17.00 17.00 17.00 17.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00\n## [121] 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00\n## [133] 18.00 18.00 18.00 18.00 18.00 18.00 18.00 19.00 19.00 19.00 19.00 19.00\n## [145] 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00\n## [157] 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 20.00 20.00 20.00 20.00\n## [169] 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.50\n## [181] 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00\n## [193] 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00\n## [205] 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00\n## [217] 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00\n## [229] 22.00 22.00 22.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00\n## [241] 23.00 23.00 23.00 23.00 23.00 23.00 23.50 24.00 24.00 24.00 24.00 24.00\n## [253] 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00\n## [265] 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00\n## [277] 24.00 24.50 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00\n## [289] 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00\n## [301] 25.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00\n## [313] 26.00 26.00 26.00 26.00 26.00 26.00 26.00 27.00 27.00 27.00 27.00 27.00\n## [325] 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00\n## [337] 27.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00\n## [349] 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00\n## [361] 28.00 28.00 28.50 28.50 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00\n## [373] 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00\n## [385] 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00\n## [397] 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00\n## [409] 30.00 30.50 30.50 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00\n## [421] 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 32.00 32.00 32.00 32.00\n## [433] 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00\n## [445] 32.00 32.00 32.50 32.50 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00\n## [457] 33.00 33.00 33.00 33.00 33.00 33.00 33.00 34.00 34.00 34.00 34.00 34.00\n## [469] 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.50 35.00\n## [481] 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00\n## [493] 35.00 35.00 35.00 35.00 35.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00\n## [505] 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00\n## [517] 36.00 36.00 36.00 36.50 37.00 37.00 37.00 37.00 37.00 37.00 38.00 38.00\n## [529] 38.00 38.00 38.00 38.00 38.00 38.00 38.00 38.00 38.00 39.00 39.00 39.00\n## [541] 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 40.00\n## [553] 40.00 40.00 40.00 40.00 40.00 40.00 40.00 40.00 40.00 40.00 40.00 40.00\n## [565] 40.50 40.50 41.00 41.00 41.00 41.00 41.00 41.00 42.00 42.00 42.00 42.00\n## [577] 42.00 42.00 42.00 42.00 42.00 42.00 42.00 42.00 42.00 43.00 43.00 43.00\n## [589] 43.00 43.00 44.00 44.00 44.00 44.00 44.00 44.00 44.00 44.00 44.00 45.00\n## [601] 45.00 45.00 45.00 45.00 45.00 45.00 45.00 45.00 45.00 45.00 45.00 45.50\n## [613] 45.50 46.00 46.00 46.00 47.00 47.00 47.00 47.00 47.00 47.00 47.00 47.00\n## [625] 47.00 48.00 48.00 48.00 48.00 48.00 48.00 48.00 48.00 48.00 49.00 49.00\n## [637] 49.00 49.00 49.00 49.00 50.00 50.00 50.00 50.00 50.00 50.00 50.00 50.00\n## [649] 50.00 50.00 51.00 51.00 51.00 51.00 51.00 51.00 51.00 52.00 52.00 52.00\n## [661] 52.00 52.00 52.00 53.00 54.00 54.00 54.00 54.00 54.00 54.00 54.00 54.00\n## [673] 55.00 55.00 55.50 56.00 56.00 56.00 56.00 57.00 57.00 58.00 58.00 58.00\n## [685] 58.00 58.00 59.00 59.00 60.00 60.00 60.00 60.00 61.00 61.00 61.00 62.00\n## [697] 62.00 62.00 62.00 63.00 63.00 64.00 64.00 65.00 65.00 65.00 66.00 70.00\n## [709] 70.00 70.50 71.00 71.00 74.00 80.00\nsort(titanic$Age, decreasing = TRUE) # mayor a menor##   [1] 80.00 74.00 71.00 71.00 70.50 70.00 70.00 66.00 65.00 65.00 65.00 64.00\n##  [13] 64.00 63.00 63.00 62.00 62.00 62.00 62.00 61.00 61.00 61.00 60.00 60.00\n##  [25] 60.00 60.00 59.00 59.00 58.00 58.00 58.00 58.00 58.00 57.00 57.00 56.00\n##  [37] 56.00 56.00 56.00 55.50 55.00 55.00 54.00 54.00 54.00 54.00 54.00 54.00\n##  [49] 54.00 54.00 53.00 52.00 52.00 52.00 52.00 52.00 52.00 51.00 51.00 51.00\n##  [61] 51.00 51.00 51.00 51.00 50.00 50.00 50.00 50.00 50.00 50.00 50.00 50.00\n##  [73] 50.00 50.00 49.00 49.00 49.00 49.00 49.00 49.00 48.00 48.00 48.00 48.00\n##  [85] 48.00 48.00 48.00 48.00 48.00 47.00 47.00 47.00 47.00 47.00 47.00 47.00\n##  [97] 47.00 47.00 46.00 46.00 46.00 45.50 45.50 45.00 45.00 45.00 45.00 45.00\n## [109] 45.00 45.00 45.00 45.00 45.00 45.00 45.00 44.00 44.00 44.00 44.00 44.00\n## [121] 44.00 44.00 44.00 44.00 43.00 43.00 43.00 43.00 43.00 42.00 42.00 42.00\n## [133] 42.00 42.00 42.00 42.00 42.00 42.00 42.00 42.00 42.00 42.00 41.00 41.00\n## [145] 41.00 41.00 41.00 41.00 40.50 40.50 40.00 40.00 40.00 40.00 40.00 40.00\n## [157] 40.00 40.00 40.00 40.00 40.00 40.00 40.00 39.00 39.00 39.00 39.00 39.00\n## [169] 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 38.00 38.00 38.00\n## [181] 38.00 38.00 38.00 38.00 38.00 38.00 38.00 38.00 37.00 37.00 37.00 37.00\n## [193] 37.00 37.00 36.50 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00\n## [205] 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00\n## [217] 36.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00\n## [229] 35.00 35.00 35.00 35.00 35.00 35.00 35.00 34.50 34.00 34.00 34.00 34.00\n## [241] 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 33.00\n## [253] 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00\n## [265] 33.00 33.00 32.50 32.50 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00\n## [277] 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 31.00 31.00\n## [289] 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00\n## [301] 31.00 31.00 31.00 30.50 30.50 30.00 30.00 30.00 30.00 30.00 30.00 30.00\n## [313] 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00\n## [325] 30.00 30.00 30.00 30.00 30.00 30.00 29.00 29.00 29.00 29.00 29.00 29.00\n## [337] 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00\n## [349] 29.00 29.00 28.50 28.50 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00\n## [361] 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00\n## [373] 28.00 28.00 28.00 28.00 28.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00\n## [385] 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 26.00\n## [397] 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00\n## [409] 26.00 26.00 26.00 26.00 26.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00\n## [421] 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00\n## [433] 25.00 25.00 25.00 25.00 24.50 24.00 24.00 24.00 24.00 24.00 24.00 24.00\n## [445] 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00\n## [457] 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 23.50\n## [469] 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00\n## [481] 23.00 23.00 23.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00\n## [493] 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00\n## [505] 22.00 22.00 22.00 22.00 22.00 22.00 21.00 21.00 21.00 21.00 21.00 21.00\n## [517] 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00\n## [529] 21.00 21.00 21.00 21.00 21.00 21.00 20.50 20.00 20.00 20.00 20.00 20.00\n## [541] 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 19.00 19.00\n## [553] 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00\n## [565] 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 18.00\n## [577] 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00\n## [589] 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00\n## [601] 18.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00\n## [613] 17.00 17.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00\n## [625] 16.00 16.00 16.00 16.00 16.00 16.00 16.00 15.00 15.00 15.00 15.00 15.00\n## [637] 14.50 14.00 14.00 14.00 14.00 14.00 14.00 13.00 13.00 12.00 11.00 11.00\n## [649] 11.00 11.00 10.00 10.00  9.00  9.00  9.00  9.00  9.00  9.00  9.00  9.00\n## [661]  8.00  8.00  8.00  8.00  7.00  7.00  7.00  6.00  6.00  6.00  5.00  5.00\n## [673]  5.00  5.00  4.00  4.00  4.00  4.00  4.00  4.00  4.00  4.00  4.00  4.00\n## [685]  3.00  3.00  3.00  3.00  3.00  3.00  2.00  2.00  2.00  2.00  2.00  2.00\n## [697]  2.00  2.00  2.00  2.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.92\n## [709]  0.83  0.83  0.75  0.75  0.67  0.42\n# Definimos función\nmenor_edad <- function(edad) {\n  \n  salida <- ifelse(edad < 18, \"menores de edad\", \"mayores de edad\")\n  return(salida)\n}\n\n# Creamos nueva variable\ntitanic$edad_recodificada <- menor_edad(titanic$Age) # se aplica elemento a elemento\ntitanic$edad_recodificada # habrá NA##   [1] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n##   [5] \"mayores de edad\" NA                \"mayores de edad\" \"menores de edad\"\n##   [9] \"mayores de edad\" \"menores de edad\" \"menores de edad\" \"mayores de edad\"\n##  [13] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n##  [17] \"menores de edad\" NA                \"mayores de edad\" NA               \n##  [21] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n##  [25] \"menores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n##  [29] NA                NA                \"mayores de edad\" NA               \n##  [33] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n##  [37] NA                \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n##  [41] \"mayores de edad\" \"mayores de edad\" NA                \"menores de edad\"\n##  [45] \"mayores de edad\" NA                NA                NA               \n##  [49] NA                \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n##  [53] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n##  [57] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"menores de edad\"\n##  [61] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n##  [65] NA                NA                \"mayores de edad\" \"mayores de edad\"\n##  [69] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n##  [73] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n##  [77] NA                NA                \"menores de edad\" \"mayores de edad\"\n##  [81] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n##  [85] \"menores de edad\" \"mayores de edad\" \"menores de edad\" NA               \n##  [89] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n##  [93] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n##  [97] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [101] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [105] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [109] \"mayores de edad\" NA                \"mayores de edad\" \"menores de edad\"\n## [113] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [117] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [121] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [125] \"mayores de edad\" \"menores de edad\" NA                \"mayores de edad\"\n## [129] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [133] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [137] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [141] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [145] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [149] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [153] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [157] \"menores de edad\" \"mayores de edad\" NA                NA               \n## [161] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [165] \"menores de edad\" \"menores de edad\" NA                \"mayores de edad\"\n## [169] NA                \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [173] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [177] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [181] NA                NA                \"menores de edad\" \"menores de edad\"\n## [185] \"menores de edad\" NA                NA                \"mayores de edad\"\n## [189] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [193] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [197] NA                \"mayores de edad\" NA                \"mayores de edad\"\n## [201] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [205] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [209] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [213] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [217] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [221] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [225] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [229] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [233] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" NA               \n## [237] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [241] NA                NA                \"mayores de edad\" \"mayores de edad\"\n## [245] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [249] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [253] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [257] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [261] NA                \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [265] NA                \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [269] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [273] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [277] \"mayores de edad\" NA                \"menores de edad\" \"mayores de edad\"\n## [281] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [285] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [289] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [293] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [297] \"mayores de edad\" \"menores de edad\" NA                \"mayores de edad\"\n## [301] NA                NA                \"mayores de edad\" NA               \n## [305] NA                \"menores de edad\" NA                \"menores de edad\"\n## [309] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [313] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [317] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [321] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [325] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [329] \"mayores de edad\" \"menores de edad\" NA                \"mayores de edad\"\n## [333] \"mayores de edad\" \"menores de edad\" NA                NA               \n## [337] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [341] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [345] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [349] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [353] \"menores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [357] \"mayores de edad\" \"mayores de edad\" NA                NA               \n## [361] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [365] NA                \"mayores de edad\" \"mayores de edad\" NA               \n## [369] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [373] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" NA               \n## [377] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [381] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [385] NA                \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [389] NA                \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [393] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [397] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [401] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [405] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [409] \"mayores de edad\" NA                NA                NA               \n## [413] \"mayores de edad\" NA                \"mayores de edad\" NA               \n## [417] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [421] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [425] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [429] NA                \"mayores de edad\" \"mayores de edad\" NA               \n## [433] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"menores de edad\"\n## [437] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [441] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [445] NA                \"menores de edad\" \"menores de edad\" \"mayores de edad\"\n## [449] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [453] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [457] \"mayores de edad\" NA                \"mayores de edad\" NA               \n## [461] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [465] NA                \"mayores de edad\" NA                \"mayores de edad\"\n## [469] NA                \"menores de edad\" NA                \"mayores de edad\"\n## [473] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [477] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [481] \"menores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [485] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [489] \"mayores de edad\" \"menores de edad\" NA                \"mayores de edad\"\n## [493] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [497] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [501] \"menores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [505] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [509] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [513] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [517] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [521] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [525] NA                \"mayores de edad\" \"mayores de edad\" NA               \n## [529] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" NA               \n## [533] \"menores de edad\" NA                \"mayores de edad\" \"menores de edad\"\n## [537] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [541] \"mayores de edad\" \"menores de edad\" \"menores de edad\" \"mayores de edad\"\n## [545] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [549] \"mayores de edad\" \"menores de edad\" \"menores de edad\" \"mayores de edad\"\n## [553] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [557] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [561] NA                \"mayores de edad\" \"mayores de edad\" NA               \n## [565] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [569] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [573] \"mayores de edad\" NA                \"menores de edad\" \"mayores de edad\"\n## [577] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [581] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [585] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [589] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [593] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [597] NA                \"mayores de edad\" NA                \"mayores de edad\"\n## [601] \"mayores de edad\" NA                NA                \"mayores de edad\"\n## [605] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [609] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [613] NA                NA                \"mayores de edad\" \"mayores de edad\"\n## [617] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [621] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [625] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [629] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [633] \"mayores de edad\" NA                \"menores de edad\" \"mayores de edad\"\n## [637] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [641] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" NA               \n## [645] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [649] NA                \"mayores de edad\" NA                \"mayores de edad\"\n## [653] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [657] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [661] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [665] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [669] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [673] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [677] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [681] NA                \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [685] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [689] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"menores de edad\"\n## [693] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [697] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [701] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [705] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [709] \"mayores de edad\" NA                \"mayores de edad\" NA               \n## [713] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [717] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [721] \"menores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [725] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [729] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [733] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [737] \"mayores de edad\" \"mayores de edad\" NA                NA               \n## [741] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [745] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [749] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"menores de edad\"\n## [753] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [757] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [761] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [765] \"menores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [769] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [773] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [777] NA                \"menores de edad\" NA                \"mayores de edad\"\n## [781] \"menores de edad\" \"menores de edad\" \"mayores de edad\" NA               \n## [785] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [789] \"menores de edad\" \"mayores de edad\" NA                \"menores de edad\"\n## [793] NA                NA                \"mayores de edad\" \"mayores de edad\"\n## [797] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [801] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"menores de edad\"\n## [805] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [809] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [813] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" NA               \n## [817] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [821] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [825] \"menores de edad\" NA                NA                \"menores de edad\"\n## [829] NA                \"mayores de edad\" \"menores de edad\" \"menores de edad\"\n## [833] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [837] \"mayores de edad\" NA                \"mayores de edad\" NA               \n## [841] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [845] \"menores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [849] \"mayores de edad\" NA                \"menores de edad\" \"mayores de edad\"\n## [853] \"menores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [857] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [861] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [865] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [869] NA                \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [873] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [877] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [881] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [885] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [889] NA                \"mayores de edad\" \"mayores de edad\"\nlibrary(lubridate)\n# Fecha accidente\naccidente <- as_date(\"1912/04/15\")\n\n# Creamos nueva variable: fecha del accidente - años\n# (saldrán todos nacidos el 15 de abril, ya que no sabemos\n# cuantos meses cumplían en el momento del accidente)\ntitanic$fecha_nacimiento <- accidente - titanic$Age\ntitanic$fecha_nacimiento ##   [1] \"1912-03-24\" \"1912-03-08\" \"1912-03-20\" \"1912-03-11\" \"1912-03-11\"\n##   [6] NA           \"1912-02-21\" \"1912-04-13\" \"1912-03-19\" \"1912-04-01\"\n##  [11] \"1912-04-11\" \"1912-02-17\" \"1912-03-26\" \"1912-03-07\" \"1912-04-01\"\n##  [16] \"1912-02-20\" \"1912-04-13\" NA           \"1912-03-15\" NA          \n##  [21] \"1912-03-11\" \"1912-03-12\" \"1912-03-31\" \"1912-03-18\" \"1912-04-07\"\n##  [26] \"1912-03-08\" NA           \"1912-03-27\" NA           NA          \n##  [31] \"1912-03-06\" NA           NA           \"1912-02-09\" \"1912-03-18\"\n##  [36] \"1912-03-04\" NA           \"1912-03-25\" \"1912-03-28\" \"1912-04-01\"\n##  [41] \"1912-03-06\" \"1912-03-19\" NA           \"1912-04-12\" \"1912-03-27\"\n##  [46] NA           NA           NA           NA           \"1912-03-28\"\n##  [51] \"1912-04-08\" \"1912-03-25\" \"1912-02-26\" \"1912-03-17\" \"1912-02-10\"\n##  [56] NA           \"1912-03-25\" \"1912-03-17\" \"1912-04-10\" \"1912-04-04\"\n##  [61] \"1912-03-24\" \"1912-03-08\" \"1912-03-01\" \"1912-04-11\" NA          \n##  [66] NA           \"1912-03-17\" \"1912-03-27\" \"1912-03-29\" \"1912-03-20\"\n##  [71] \"1912-03-14\" \"1912-03-30\" \"1912-03-25\" \"1912-03-20\" \"1912-03-14\"\n##  [76] \"1912-03-21\" NA           NA           \"1912-04-14\" \"1912-03-16\"\n##  [81] \"1912-03-24\" \"1912-03-17\" NA           \"1912-03-18\" \"1912-03-29\"\n##  [86] \"1912-03-13\" \"1912-03-30\" NA           \"1912-03-23\" \"1912-03-22\"\n##  [91] \"1912-03-17\" \"1912-03-26\" \"1912-02-29\" \"1912-03-20\" \"1912-02-16\"\n##  [96] NA           \"1912-02-04\" \"1912-03-23\" \"1912-03-12\" \"1912-03-12\"\n## [101] \"1912-03-18\" NA           \"1912-03-25\" \"1912-03-13\" \"1912-03-09\"\n## [106] \"1912-03-18\" \"1912-03-25\" NA           \"1912-03-08\" NA          \n## [111] \"1912-02-28\" \"1912-03-31\" \"1912-03-24\" \"1912-03-26\" \"1912-03-29\"\n## [116] \"1912-03-25\" \"1912-02-04\" \"1912-03-17\" \"1912-03-22\" \"1912-04-13\"\n## [121] \"1912-03-25\" NA           \"1912-03-13\" \"1912-03-13\" \"1912-02-21\"\n## [126] \"1912-04-03\" NA           \"1912-03-22\" NA           \"1912-03-01\"\n## [131] \"1912-03-13\" \"1912-03-26\" \"1912-02-28\" \"1912-03-17\" \"1912-03-21\"\n## [136] \"1912-03-23\" \"1912-03-27\" \"1912-03-09\" \"1912-03-30\" \"1912-03-22\"\n## [141] NA           \"1912-03-24\" \"1912-03-22\" \"1912-03-27\" \"1912-03-28\"\n## [146] \"1912-03-27\" \"1912-03-19\" \"1912-04-06\" \"1912-03-09\" \"1912-03-04\"\n## [151] \"1912-02-24\" \"1912-03-24\" \"1912-02-19\" \"1912-03-05\" NA          \n## [156] \"1912-02-24\" \"1912-03-30\" \"1912-03-16\" NA           NA          \n## [161] \"1912-03-02\" \"1912-03-06\" \"1912-03-20\" \"1912-03-29\" \"1912-04-14\"\n## [166] \"1912-04-06\" NA           \"1912-03-01\" NA           \"1912-03-18\"\n## [171] \"1912-02-14\" \"1912-04-11\" \"1912-04-14\" \"1912-03-25\" \"1912-02-19\"\n## [176] \"1912-03-28\" NA           \"1912-02-25\" \"1912-03-16\" \"1912-03-10\"\n## [181] NA           NA           \"1912-04-06\" \"1912-04-14\" \"1912-04-11\"\n## [186] NA           NA           \"1912-03-01\" \"1912-03-06\" \"1912-03-10\"\n## [191] \"1912-03-14\" \"1912-03-27\" \"1912-03-27\" \"1912-04-12\" \"1912-03-02\"\n## [196] \"1912-02-17\" NA           \"1912-03-04\" NA           \"1912-03-22\"\n## [201] \"1912-03-18\" NA           \"1912-03-12\" \"1912-02-29\" \"1912-03-28\"\n## [206] \"1912-04-13\" \"1912-03-14\" \"1912-03-20\" \"1912-03-30\" \"1912-03-06\"\n## [211] \"1912-03-22\" \"1912-03-11\" \"1912-03-24\" \"1912-03-16\" NA          \n## [216] \"1912-03-15\" \"1912-03-19\" \"1912-03-04\" \"1912-03-14\" \"1912-03-16\"\n## [221] \"1912-03-30\" \"1912-03-19\" \"1912-02-24\" NA           \"1912-03-08\"\n## [226] \"1912-03-24\" \"1912-03-27\" \"1912-03-25\" \"1912-03-28\" NA          \n## [231] \"1912-03-11\" \"1912-03-17\" \"1912-02-16\" \"1912-04-10\" \"1912-03-22\"\n## [236] NA           \"1912-03-02\" \"1912-04-07\" \"1912-03-27\" \"1912-03-13\"\n## [241] NA           NA           \"1912-03-17\" \"1912-03-24\" \"1912-03-16\"\n## [246] \"1912-03-02\" \"1912-03-21\" \"1912-03-22\" \"1912-03-09\" \"1912-02-21\"\n## [251] NA           \"1912-03-17\" \"1912-02-13\" \"1912-03-16\" \"1912-03-05\"\n## [256] \"1912-03-17\" NA           \"1912-03-16\" \"1912-03-11\" \"1912-02-25\"\n## [261] NA           \"1912-04-12\" \"1912-02-23\" \"1912-03-06\" NA          \n## [266] \"1912-03-10\" \"1912-03-30\" \"1912-03-21\" \"1912-02-17\" \"1912-03-11\"\n## [271] NA           \"1912-03-21\" \"1912-03-05\" \"1912-03-09\" NA          \n## [276] \"1912-02-12\" \"1912-03-01\" NA           \"1912-04-08\" \"1912-03-11\"\n## [281] \"1912-02-10\" \"1912-03-18\" \"1912-03-30\" \"1912-03-27\" NA          \n## [286] \"1912-03-13\" \"1912-03-16\" \"1912-03-24\" \"1912-03-04\" \"1912-03-24\"\n## [291] \"1912-03-20\" \"1912-03-27\" \"1912-03-10\" \"1912-03-22\" \"1912-03-22\"\n## [296] NA           \"1912-03-22\" \"1912-04-13\" NA           \"1912-02-25\"\n## [301] NA           NA           \"1912-03-27\" NA           NA          \n## [306] \"1912-04-14\" NA           \"1912-03-29\" \"1912-03-16\" \"1912-03-16\"\n## [311] \"1912-03-22\" \"1912-03-28\" \"1912-03-20\" \"1912-03-18\" \"1912-03-03\"\n## [316] \"1912-03-20\" \"1912-03-22\" \"1912-02-21\" \"1912-03-15\" \"1912-03-06\"\n## [321] \"1912-03-24\" \"1912-03-19\" \"1912-03-16\" \"1912-03-24\" NA          \n## [326] \"1912-03-10\" \"1912-02-14\" \"1912-03-10\" \"1912-03-15\" \"1912-03-30\"\n## [331] NA           \"1912-02-29\" \"1912-03-08\" \"1912-03-30\" NA          \n## [336] NA           \"1912-03-17\" \"1912-03-05\" \"1912-03-01\" \"1912-03-01\"\n## [341] \"1912-04-13\" \"1912-03-22\" \"1912-03-18\" \"1912-03-21\" \"1912-03-10\"\n## [346] \"1912-03-22\" \"1912-03-06\" NA           \"1912-04-12\" \"1912-03-04\"\n## [351] \"1912-03-23\" NA           \"1912-03-31\" \"1912-03-21\" NA          \n## [356] \"1912-03-18\" \"1912-03-24\" \"1912-03-08\" NA           NA          \n## [361] \"1912-03-06\" \"1912-03-17\" \"1912-03-01\" \"1912-03-11\" NA          \n## [366] \"1912-03-16\" \"1912-02-15\" NA           NA           \"1912-03-22\"\n## [371] \"1912-03-21\" \"1912-03-28\" \"1912-03-27\" \"1912-03-24\" \"1912-04-12\"\n## [376] NA           \"1912-03-24\" \"1912-03-19\" \"1912-03-26\" \"1912-03-27\"\n## [381] \"1912-03-04\" \"1912-04-14\" \"1912-03-14\" \"1912-03-11\" NA          \n## [386] \"1912-03-28\" \"1912-04-14\" \"1912-03-10\" NA           \"1912-03-29\"\n## [391] \"1912-03-10\" \"1912-03-25\" \"1912-03-18\" \"1912-03-23\" \"1912-03-22\"\n## [396] \"1912-03-24\" \"1912-03-15\" \"1912-02-29\" \"1912-03-23\" \"1912-03-18\"\n## [401] \"1912-03-07\" \"1912-03-20\" \"1912-03-25\" \"1912-03-18\" \"1912-03-26\"\n## [406] \"1912-03-12\" \"1912-02-24\" \"1912-04-12\" \"1912-03-25\" NA          \n## [411] NA           NA           \"1912-03-13\" NA           \"1912-03-02\"\n## [416] NA           \"1912-03-12\" \"1912-03-28\" \"1912-03-16\" \"1912-04-05\"\n## [421] NA           \"1912-03-25\" \"1912-03-17\" \"1912-03-18\" \"1912-03-28\"\n## [426] NA           \"1912-03-18\" \"1912-03-27\" NA           \"1912-03-14\"\n## [431] \"1912-03-18\" NA           \"1912-03-04\" \"1912-03-29\" \"1912-02-25\"\n## [436] \"1912-04-01\" \"1912-03-25\" \"1912-03-22\" \"1912-02-11\" \"1912-03-15\"\n## [441] \"1912-03-01\" \"1912-03-26\" \"1912-03-21\" \"1912-03-18\" NA          \n## [446] \"1912-04-11\" \"1912-04-02\" \"1912-03-12\" \"1912-04-10\" \"1912-02-23\"\n## [451] \"1912-03-10\" NA           \"1912-03-16\" \"1912-02-26\" NA          \n## [456] \"1912-03-17\" \"1912-02-10\" NA           \"1912-02-25\" NA          \n## [461] \"1912-02-27\" \"1912-03-12\" \"1912-02-28\" \"1912-02-27\" NA          \n## [466] \"1912-03-08\" NA           \"1912-02-19\" NA           \"1912-04-14\"\n## [471] NA           \"1912-03-08\" \"1912-03-13\" \"1912-03-23\" \"1912-03-24\"\n## [476] NA           \"1912-03-12\" \"1912-03-17\" \"1912-03-24\" \"1912-04-13\"\n## [481] \"1912-04-06\" NA           \"1912-02-25\" \"1912-02-12\" \"1912-03-21\"\n## [486] NA           \"1912-03-11\" \"1912-02-17\" \"1912-03-16\" \"1912-04-06\"\n## [491] NA           \"1912-03-25\" \"1912-02-20\" \"1912-02-04\" \"1912-03-25\"\n## [496] NA           \"1912-02-21\" NA           \"1912-03-21\" \"1912-03-22\"\n## [501] \"1912-03-29\" \"1912-03-25\" NA           \"1912-03-09\" \"1912-03-30\"\n## [506] \"1912-03-28\" \"1912-03-13\" NA           \"1912-03-18\" \"1912-03-20\"\n## [511] \"1912-03-17\" NA           \"1912-03-10\" \"1912-02-21\" \"1912-03-22\"\n## [516] \"1912-02-28\" \"1912-03-12\" NA           \"1912-03-10\" \"1912-03-14\"\n## [521] \"1912-03-16\" \"1912-03-24\" NA           \"1912-03-02\" NA          \n## [526] \"1912-03-05\" \"1912-02-25\" NA           \"1912-03-07\" \"1912-03-23\"\n## [531] \"1912-04-13\" NA           \"1912-03-29\" NA           \"1912-03-16\"\n## [536] \"1912-04-08\" \"1912-03-01\" \"1912-03-16\" NA           \"1912-03-24\"\n## [541] \"1912-03-10\" \"1912-04-06\" \"1912-04-04\" \"1912-03-14\" \"1912-02-25\"\n## [546] \"1912-02-11\" \"1912-03-27\" NA           \"1912-03-13\" \"1912-04-07\"\n## [551] \"1912-03-29\" \"1912-03-19\" NA           \"1912-03-24\" \"1912-03-24\"\n## [556] \"1912-02-13\" \"1912-02-27\" NA           \"1912-03-07\" \"1912-03-10\"\n## [561] NA           \"1912-03-06\" \"1912-03-18\" NA           NA          \n## [566] \"1912-03-22\" \"1912-03-27\" \"1912-03-17\" NA           \"1912-03-14\"\n## [571] \"1912-02-13\" \"1912-02-22\" \"1912-03-10\" NA           \"1912-03-30\"\n## [576] \"1912-03-27\" \"1912-03-12\" \"1912-03-07\" NA           \"1912-03-14\"\n## [581] \"1912-03-21\" \"1912-03-07\" \"1912-02-21\" \"1912-03-10\" NA          \n## [586] \"1912-03-28\" \"1912-02-28\" \"1912-02-15\" \"1912-03-24\" NA          \n## [591] \"1912-03-11\" \"1912-02-23\" \"1912-02-28\" NA           \"1912-03-09\"\n## [596] \"1912-03-10\" NA           \"1912-02-26\" NA           \"1912-02-26\"\n## [601] \"1912-03-22\" NA           NA           \"1912-03-02\" \"1912-03-11\"\n## [606] \"1912-03-10\" \"1912-03-16\" \"1912-03-19\" \"1912-03-24\" \"1912-03-06\"\n## [611] \"1912-03-07\" NA           NA           NA           \"1912-03-11\"\n## [616] \"1912-03-22\" \"1912-03-12\" \"1912-03-20\" \"1912-04-11\" \"1912-03-20\"\n## [621] \"1912-03-19\" \"1912-03-04\" \"1912-03-26\" \"1912-03-25\" \"1912-03-25\"\n## [626] \"1912-02-14\" \"1912-02-18\" \"1912-03-25\" \"1912-03-20\" NA          \n## [631] \"1912-01-26\" \"1912-02-24\" \"1912-03-14\" NA           \"1912-04-06\"\n## [636] \"1912-03-18\" \"1912-03-14\" \"1912-03-15\" \"1912-03-05\" NA          \n## [641] \"1912-03-26\" \"1912-03-22\" \"1912-04-13\" NA           \"1912-04-14\"\n## [646] \"1912-02-27\" \"1912-03-27\" \"1912-02-19\" NA           \"1912-03-23\"\n## [651] NA           \"1912-03-28\" \"1912-03-25\" NA           \"1912-03-28\"\n## [656] \"1912-03-22\" NA           \"1912-03-14\" \"1912-03-23\" \"1912-02-17\"\n## [661] \"1912-02-25\" \"1912-03-06\" \"1912-02-28\" \"1912-03-10\" \"1912-03-26\"\n## [666] \"1912-03-14\" \"1912-03-21\" NA           \"1912-03-03\" NA          \n## [671] \"1912-03-06\" \"1912-03-15\" \"1912-02-05\" \"1912-03-15\" NA          \n## [676] \"1912-03-28\" \"1912-03-21\" \"1912-03-28\" \"1912-03-03\" \"1912-03-10\"\n## [681] NA           \"1912-03-19\" \"1912-03-26\" \"1912-04-01\" \"1912-02-15\"\n## [686] \"1912-03-21\" \"1912-04-01\" \"1912-03-27\" \"1912-03-28\" \"1912-03-31\"\n## [691] \"1912-03-15\" \"1912-04-11\" NA           \"1912-03-21\" \"1912-02-15\"\n## [696] \"1912-02-23\" \"1912-03-02\" NA           \"1912-02-26\" \"1912-03-04\"\n## [701] \"1912-03-28\" \"1912-03-11\" \"1912-03-28\" \"1912-03-21\" \"1912-03-20\"\n## [706] \"1912-03-07\" \"1912-03-01\" \"1912-03-04\" \"1912-03-24\" NA          \n## [711] \"1912-03-22\" NA           \"1912-02-27\" \"1912-03-17\" \"1912-02-23\"\n## [716] \"1912-03-27\" \"1912-03-08\" \"1912-03-19\" NA           \"1912-03-13\"\n## [721] \"1912-04-09\" \"1912-03-29\" \"1912-03-12\" \"1912-02-25\" \"1912-03-19\"\n## [726] \"1912-03-26\" \"1912-03-16\" NA           \"1912-03-21\" \"1912-03-21\"\n## [731] \"1912-03-17\" \"1912-04-04\" NA           \"1912-03-23\" \"1912-03-23\"\n## [736] \"1912-03-17\" \"1912-02-27\" \"1912-03-11\" NA           NA          \n## [741] NA           \"1912-03-10\" \"1912-03-25\" \"1912-03-22\" \"1912-03-15\"\n## [746] \"1912-02-05\" \"1912-03-30\" \"1912-03-16\" \"1912-03-27\" \"1912-03-15\"\n## [751] \"1912-04-11\" \"1912-04-09\" \"1912-03-13\" \"1912-03-23\" \"1912-02-27\"\n## [756] \"1912-04-14\" \"1912-03-18\" \"1912-03-28\" \"1912-03-12\" \"1912-03-13\"\n## [761] NA           \"1912-03-05\" \"1912-03-26\" \"1912-03-10\" \"1912-03-30\"\n## [766] \"1912-02-24\" NA           \"1912-03-15\" NA           \"1912-03-14\"\n## [771] \"1912-03-22\" \"1912-02-27\" \"1912-02-18\" NA           \"1912-02-21\"\n## [776] \"1912-03-28\" NA           \"1912-04-10\" NA           \"1912-03-03\"\n## [781] \"1912-04-02\" \"1912-03-29\" \"1912-03-17\" NA           \"1912-03-21\"\n## [786] \"1912-03-21\" \"1912-03-28\" \"1912-04-07\" \"1912-04-14\" \"1912-02-29\"\n## [791] NA           \"1912-03-30\" NA           NA           \"1912-03-21\"\n## [796] \"1912-03-07\" \"1912-02-26\" \"1912-03-15\" \"1912-03-16\" \"1912-03-16\"\n## [801] \"1912-03-12\" \"1912-03-15\" \"1912-04-04\" \"1912-04-14\" \"1912-03-19\"\n## [806] \"1912-03-15\" \"1912-03-07\" \"1912-03-28\" \"1912-03-07\" \"1912-03-13\"\n## [811] \"1912-03-20\" \"1912-03-07\" \"1912-03-11\" \"1912-04-09\" \"1912-03-15\"\n## [816] NA           \"1912-03-23\" \"1912-03-15\" \"1912-03-03\" \"1912-04-05\"\n## [821] \"1912-02-23\" \"1912-03-19\" \"1912-03-08\" \"1912-03-19\" \"1912-04-13\"\n## [826] NA           NA           \"1912-04-14\" NA           \"1912-02-13\"\n## [831] \"1912-03-31\" \"1912-04-14\" NA           \"1912-03-23\" \"1912-03-28\"\n## [836] \"1912-03-07\" \"1912-03-25\" NA           \"1912-03-14\" NA          \n## [841] \"1912-03-26\" \"1912-03-30\" \"1912-03-16\" \"1912-03-11\" \"1912-03-29\"\n## [846] \"1912-03-04\" NA           \"1912-03-11\" \"1912-03-18\" NA          \n## [851] \"1912-04-11\" \"1912-02-01\" \"1912-04-06\" \"1912-03-30\" \"1912-03-02\"\n## [856] \"1912-03-28\" \"1912-03-01\" \"1912-02-24\" \"1912-03-22\" NA          \n## [861] \"1912-03-05\" \"1912-03-25\" \"1912-02-27\" NA           \"1912-03-22\"\n## [866] \"1912-03-04\" \"1912-03-19\" \"1912-03-15\" NA           \"1912-04-11\"\n## [871] \"1912-03-20\" \"1912-02-28\" \"1912-03-13\" \"1912-02-28\" \"1912-03-18\"\n## [876] \"1912-03-31\" \"1912-03-26\" \"1912-03-27\" NA           \"1912-02-19\"\n## [881] \"1912-03-21\" \"1912-03-13\" \"1912-03-24\" \"1912-03-18\" \"1912-03-21\"\n## [886] \"1912-03-07\" \"1912-03-19\" \"1912-03-27\" NA           \"1912-03-20\"\n## [891] \"1912-03-14\""},{"path":"recursos-de-aprendizaje.html","id":"recursos-de-aprendizaje","chapter":"📚 Recursos de aprendizaje","heading":"📚 Recursos de aprendizaje","text":"Recopilación de recursos de aprendizaje para seguir profundizando.","code":""},{"path":"recursos-de-aprendizaje.html","id":"aprendizajedocencia","chapter":"📚 Recursos de aprendizaje","heading":"Aprendizaje/docencia","text":"cursos de R gratuitos. Recopilados y/o creados por Javier Álvarez Liébana. https://dadosdelaplace.github.io/cursoscursos de R gratuitos. Recopilados y/o creados por Javier Álvarez Liébana. https://dadosdelaplace.github.io/cursostutoriales de R gratuitos. De Javier Álvarez Liébana. https://dadosdelaplace.github.io/blog-R/tutoriales de R gratuitos. De Javier Álvarez Liébana. https://dadosdelaplace.github.io/blog-R/Lista de usuarios/de Twitter especializados/en dataviz. https://twitter.com//lists/1324478481338683392?s=20Lista de usuarios/de Twitter especializados/en dataviz. https://twitter.com//lists/1324478481338683392?s=20Hashtag #TidyTuesday: todos los martes un reto de dataviz. https://twitter.com/search?q=%23tidytuesday&src=hashtag_click. Repositorio oficial con los datos y retos: https://github.com/rfordatascience/tidytuesdayHashtag #TidyTuesday: todos los martes un reto de dataviz. https://twitter.com/search?q=%23tidytuesday&src=hashtag_click. Repositorio oficial con los datos y retos: https://github.com/rfordatascience/tidytuesdayswirl: paquete para aprender R y crear cursos. https://swirlstats.com/swirl: paquete para aprender R y crear cursos. https://swirlstats.com/Estadística y probabilidad para científicos de datos. De Raúl Vaquerizo https://analisisydecision.es/estadistica-data-scientist/index.htmlEstadística y probabilidad para científicos de datos. De Raúl Vaquerizo https://analisisydecision.es/estadistica-data-scientist/index.html","code":""},{"path":"recursos-de-aprendizaje.html","id":"manejo-de-datos","chapter":"📚 Recursos de aprendizaje","heading":"Manejo de datos","text":"tibble: simplificando data.frames. Entorno tidyverse. https://tibble.tidyverse.org/tibble: simplificando data.frames. Entorno tidyverse. https://tibble.tidyverse.org/tidyr: ordenando los datos. Entorno tidyverse. https://tibble.tidyverse.org/tidyr: ordenando los datos. Entorno tidyverse. https://tibble.tidyverse.org/dplyr: procesando/manipulando los datos. Entorno tidyverse. https://dplyr.tidyverse.org/dplyr: procesando/manipulando los datos. Entorno tidyverse. https://dplyr.tidyverse.org/purrr: programación funcional con listas. Entorno tidyverse. https://purrr.tidyverse.org/purrr: programación funcional con listas. Entorno tidyverse. https://purrr.tidyverse.org/forcast: manejo de variables cualitativas. Entorno tidyverse. https://forcats.tidyverse.org/forcast: manejo de variables cualitativas. Entorno tidyverse. https://forcats.tidyverse.org/lubridate: manejo de fechas y tiempos. Entorno tidyverse. https://lubridate.tidyverse.org/lubridate: manejo de fechas y tiempos. Entorno tidyverse. https://lubridate.tidyverse.org/Tidy data tutor. Visualizador del flujo de operaciones de las funciones del entorno tidyverse. https://tidydatatutor.com/Tidy data tutor. Visualizador del flujo de operaciones de las funciones del entorno tidyverse. https://tidydatatutor.com/Tidyverse skill data science. De Carrie Wright, Shannon E. Ellis, Stephanie C. Hicks y Roger D. Peng. https://jhudatascience.org/tidyversecourse/Tidyverse skill data science. De Carrie Wright, Shannon E. Ellis, Stephanie C. Hicks y Roger D. Peng. https://jhudatascience.org/tidyversecourse/","code":""},{"path":"recursos-de-aprendizaje.html","id":"manejo-de-textos","chapter":"📚 Recursos de aprendizaje","heading":"Manejo de textos","text":"stringr: manipulación de textos. Entorno tidyverse. https://stringr.tidyverse.org/stringr: manipulación de textos. Entorno tidyverse. https://stringr.tidyverse.org/glue: pegado de cadenas de texto. Entorno tidyverse. https://glue.tidyverse.org/glue: pegado de cadenas de texto. Entorno tidyverse. https://glue.tidyverse.org/Text mining. De Julia Silge y David Robinson. https://tidytextmining.comText mining. De Julia Silge y David Robinson. https://tidytextmining.comDescarga de textos libres. De David Robinson. https://github.com/ropensci/gutenbergrDescarga de textos libres. De David Robinson. https://github.com/ropensci/gutenbergrAnálisis de sentimientos en Twitter. De Harshvardhan. https://www.harsh17./twitter-sentiments/Análisis de sentimientos en Twitter. De Harshvardhan. https://www.harsh17./twitter-sentiments/","code":""},{"path":"recursos-de-aprendizaje.html","id":"datos.-importarexportar","chapter":"📚 Recursos de aprendizaje","heading":"Datos. Importar/exportar","text":"readr: importación de ficheros (.csv, .tsv, .txt). Entorno tidyverse. https://readr.tidyverse.org/readr: importación de ficheros (.csv, .tsv, .txt). Entorno tidyverse. https://readr.tidyverse.org/readxl: importación de ficheros formateados por Excel. Entorno tidyverse. https://readxl.tidyverse.org/readxl: importación de ficheros formateados por Excel. Entorno tidyverse. https://readxl.tidyverse.org/haven: importación de ficheros de SPSS, Stata y SAS. Entorno tidyverse. https://haven.tidyverse.org/haven: importación de ficheros de SPSS, Stata y SAS. Entorno tidyverse. https://haven.tidyverse.org/rvest: scrapping de páginas web sencillas. Entorno tidyverse. https://rvest.tidyverse.org/rvest: scrapping de páginas web sencillas. Entorno tidyverse. https://rvest.tidyverse.org/RSelenium: scrapping web con navegación inteligente. De John Harrison y Ju Yeong Kim. https://docs.ropensci.org/RSelenium/RSelenium: scrapping web con navegación inteligente. De John Harrison y Ju Yeong Kim. https://docs.ropensci.org/RSelenium/Paquetes para acceder datos abiertos. https://ropensci.org/packages/data-access/Paquetes para acceder datos abiertos. https://ropensci.org/packages/data-access/googledrive: interacción con ficheros de Google Drive. Entorno tidyverse. https://googledrive.tidyverse.org/googledrive: interacción con ficheros de Google Drive. Entorno tidyverse. https://googledrive.tidyverse.org/httr: comunicación webs http y API. De Hadley Wickham, Chief Scientist en RStudio. https://github.com/r-lib/httrhttr: comunicación webs http y API. De Hadley Wickham, Chief Scientist en RStudio. https://github.com/r-lib/httrfitbitr: datos de pulseras fitbit. De Matt Kaye https://mrkaye97.github.io/fitbitr/index.htmlfitbitr: datos de pulseras fitbit. De Matt Kaye https://mrkaye97.github.io/fitbitr/index.htmlrtweet: datos de Twitter. De Michael W. Kearney https://docs.ropensci.org/rtweet/rtweet: datos de Twitter. De Michael W. Kearney https://docs.ropensci.org/rtweet/owidR: datos de World Data. De OWiD. https://github.com/piersyork/owidRowidR: datos de World Data. De OWiD. https://github.com/piersyork/owidReurostat: datos de Eurostat. https://ropengov.github.io/eurostat/articles/articles/eurostat_tutorial.htmleurostat: datos de Eurostat. https://ropengov.github.io/eurostat/articles/articles/eurostat_tutorial.htmlclimaemet: datos del AEMET. https://ropenspain.github.io/climaemet/climaemet: datos del AEMET. https://ropenspain.github.io/climaemet/infoelectoral: datos electorales de España. https://ropenspain.github.io/infoelectoral/infoelectoral: datos electorales de España. https://ropenspain.github.io/infoelectoral/rfishbase: datos de fishbase.org. https://github.com/ropensci/rfishbaserfishbase: datos de fishbase.org. https://github.com/ropensci/rfishbase","code":""},{"path":"recursos-de-aprendizaje.html","id":"dataviz","chapter":"📚 Recursos de aprendizaje","heading":"dataviz","text":"Gramática de las gráficas: pistas para mejorarlas representaciones de datos. Libro de Joaquín Sevilla. http://academica-e.unavarra.es/bitstream/handle/2454/15785/Gram%C3%A1tica.pdfGramática de las gráficas: pistas para mejorarlas representaciones de datos. Libro de Joaquín Sevilla. http://academica-e.unavarra.es/bitstream/handle/2454/15785/Gram%C3%A1tica.pdfggplot2: visualización de datos. Entorno tidyverse. https://ggplot2.tidyverse.org/. Manual oficial: https://ggplot2-book.org/index.htmlggplot2: visualización de datos. Entorno tidyverse. https://ggplot2.tidyverse.org/. Manual oficial: https://ggplot2-book.org/index.htmlR Graph Gallery: colección de dataviz en R https://www.r-graph-gallery.com/R Graph Gallery: colección de dataviz en R https://www.r-graph-gallery.com/patchwork: agregar y componer gráficas. De Thomas Lin Pedersen. https://patchwork.data-imaginist.com/.>patchwork: agregar y componer gráficas. De Thomas Lin Pedersen. https://patchwork.data-imaginist.com/.>plotly: gráficas interactivas. https://plotly.com/r/plotly: gráficas interactivas. https://plotly.com/r/ggplotly: convertir ggplot2 plotly. https://www.rdocumentation.org/packages/plotly/versions/4.10.0/topics/ggplotlyggplotly: convertir ggplot2 plotly. https://www.rdocumentation.org/packages/plotly/versions/4.10.0/topics/ggplotlydatawRappr: conectar R con datawrapper. De Benedict Witzenberger. https://munichrocker.github.io/DatawRappr/datawRappr: conectar R con datawrapper. De Benedict Witzenberger. https://munichrocker.github.io/DatawRappr/ggtheme: paletas de colores y temas. De Edward Tufte. https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/ggtheme: paletas de colores y temas. De Edward Tufte. https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/geomtextpath: curvando el texto ajustándose una gráfica. De Allan Cameron y Teun van den Brand. https://allancameron.github.io/geomtextpath/geomtextpath: curvando el texto ajustándose una gráfica. De Allan Cameron y Teun van den Brand. https://allancameron.github.io/geomtextpath/El arte del dato: aprender construir un ggplot. De Paula Casado. https://elartedeldato.com/El arte del dato: aprender construir un ggplot. De Paula Casado. https://elartedeldato.com/circlize: visualización de datos circulares. De Z. Gu. https://jokergoo.github.io/circlize_book/book/circlize: visualización de datos circulares. De Z. Gu. https://jokergoo.github.io/circlize_book/book/ggstream: visualización de datos en flujo. De Z. Gu. https://github.com/davidsjoberg/ggstreamggstream: visualización de datos en flujo. De Z. Gu. https://github.com/davidsjoberg/ggstreamTutoriales de visualización de datos. De Cedric Scherer. https://www.cedricscherer.com/Tutoriales de visualización de datos. De Cedric Scherer. https://www.cedricscherer.com/","code":""},{"path":"recursos-de-aprendizaje.html","id":"mapas-y-datos-espaciales-en-r","chapter":"📚 Recursos de aprendizaje","heading":"Mapas y datos espaciales en R","text":"Visualización de datos geográficos. De Dominic Royé. https://dominicroye.github.io/en/Visualización de datos geográficos. De Dominic Royé. https://dominicroye.github.io/en/mapSpain: visualización de datos en mapas de España en R. De Diego Hernangómez. https://dieghernan.github.io/rpubs/mapSpain_RMadrid/#1mapSpain: visualización de datos en mapas de España en R. De Diego Hernangómez. https://dieghernan.github.io/rpubs/mapSpain_RMadrid/#1rasterpic: visualización de mapas con imágenes rasterizados de fondo. De Diego Hernangómez. https://dieghernan.github.io/rasterpic/rasterpic: visualización de mapas con imágenes rasterizados de fondo. De Diego Hernangómez. https://dieghernan.github.io/rasterpic/layer: paquete para crear capas de mapas. De Marco Sciaini y Cédric Scherer https://github.com/marcosci/layerlayer: paquete para crear capas de mapas. De Marco Sciaini y Cédric Scherer https://github.com/marcosci/layer","code":""},{"path":"recursos-de-aprendizaje.html","id":"colores-y-temas-en-dataviz-generales","chapter":"📚 Recursos de aprendizaje","heading":"Colores y temas en dataviz (generales)","text":"Uso de colores. De Lisa Charlotte Muth, experta en dataviz en Datawrapper. https://datawrapper.notion.site/Color-Book-Updates-54905c2bd0bb4c6bae15d99e31a9d5c4Uso de colores. De Lisa Charlotte Muth, experta en dataviz en Datawrapper. https://datawrapper.notion.site/Color-Book-Updates-54905c2bd0bb4c6bae15d99e31a9d5c4Paletas de colores inspiradas en el Metropolitan Museum. De\nBlake Robert Mills. https://github.com/BlakeRMills/MetBrewer/tree/mainPaletas de colores inspiradas en el Metropolitan Museum. De\nBlake Robert Mills. https://github.com/BlakeRMills/MetBrewer/tree/mainPaletas de colores inspiradas paisajes de los parques nacionales. De\nKevin Blake. https://github.com/kevinsblake/NatParksPalettesPaletas de colores inspiradas paisajes de los parques nacionales. De\nKevin Blake. https://github.com/kevinsblake/NatParksPalettesPaletas de colores de álbumes de Taylor Swift. De asteves https://github.com/asteves/tayloRswiftPaletas de colores de álbumes de Taylor Swift. De asteves https://github.com/asteves/tayloRswiftPaletas de colores inspiradas en la fotografía de Harry Potter. De\nAlejandro Jiménez. https://github.com/aljrico/harrypotterPaletas de colores inspiradas en la fotografía de Harry Potter. De\nAlejandro Jiménez. https://github.com/aljrico/harrypottercolorblindcheck: herramientas para detectar paletas de colores aptas daltónicos/. De Jakub Nowosad. https://github.com/Nowosad/colorblindcheckcolorblindcheck: herramientas para detectar paletas de colores aptas daltónicos/. De Jakub Nowosad. https://github.com/Nowosad/colorblindcheck","code":""},{"path":"recursos-de-aprendizaje.html","id":"análisis-exploratorio","chapter":"📚 Recursos de aprendizaje","heading":"Análisis exploratorio","text":"skimr: generación de resúmenes estadísticos. Paquete de ropensci. https://docs.ropensci.org/skimr/skimr: generación de resúmenes estadísticos. Paquete de ropensci. https://docs.ropensci.org/skimr/corrr: análisis y visualización de correlaciones. Entorno tidymodels. https://corrr.tidymodels.org/corrr: análisis y visualización de correlaciones. Entorno tidymodels. https://corrr.tidymodels.org/DataExplorer: análisis exploratorio automatizado. Paquete DataExplorer. https://boxuancui.github.io/DataExplorer/DataExplorer: análisis exploratorio automatizado. Paquete DataExplorer. https://boxuancui.github.io/DataExplorer/","code":""},{"path":"recursos-de-aprendizaje.html","id":"modelización-e-inferencia","chapter":"📚 Recursos de aprendizaje","heading":"Modelización e inferencia","text":"Modelos lineales: regresión y GLM. De Paul Roback y Julie Legler. https://bookdown.org/roback/bookdown-BeyondMLR/Modelos lineales: regresión y GLM. De Paul Roback y Julie Legler. https://bookdown.org/roback/bookdown-BeyondMLR/performance: diagnosis y evaluación de modelos. https://easystats.github.io/performance/performance: diagnosis y evaluación de modelos. https://easystats.github.io/performance/Estadística espacial y geoestadística. De Robin Lovelace. https://geocompr.robinlovelace.net/Estadística espacial y geoestadística. De Robin Lovelace. https://geocompr.robinlovelace.net/entorno tidymodels: minería de datos y Machine Learning en R. De RStudio https://www.tidymodels.org/start/entorno tidymodels: minería de datos y Machine Learning en R. De RStudio https://www.tidymodels.org/start/Machine Learning en R. https://emilhvitfeldt.github.io/ISLR-tidymodels-labs/index.htmlMachine Learning en R. https://emilhvitfeldt.github.io/ISLR-tidymodels-labs/index.htmlvip: evaluar la importancia de las variables. https://github.com/koalaverse/vip/vip: evaluar la importancia de las variables. https://github.com/koalaverse/vip/infer: inferencia estadística. Entorno tidymodels. https://infer.tidymodels.org/infer: inferencia estadística. Entorno tidymodels. https://infer.tidymodels.org/Inferencia estadística en ciencia de datos. De Chester Ismay y Albert Y. Kim. https://moderndive.com/Inferencia estadística en ciencia de datos. De Chester Ismay y Albert Y. Kim. https://moderndive.com/goffda: inferencia de datos funcionales (FDA). De Eduardo García Portugués y Javier Álvarez Liébana. https://github.com/egarpor/goffdagoffda: inferencia de datos funcionales (FDA). De Eduardo García Portugués y Javier Álvarez Liébana. https://github.com/egarpor/goffda","code":""},{"path":"recursos-de-aprendizaje.html","id":"estadística-bayesiana","chapter":"📚 Recursos de aprendizaje","heading":"Estadística Bayesiana","text":"Inferencia Bayesiana (y espacial). De Virgilio Gómez Rubio. https://becarioprecario.bitbucket.io/inla-gitbook/Inferencia Bayesiana (y espacial). De Virgilio Gómez Rubio. https://becarioprecario.bitbucket.io/inla-gitbook/tidybayes: estadística bayesiana y visualización. De Matthew Kay. http://mjskay.github.io/tidybayes/tidybayes: estadística bayesiana y visualización. De Matthew Kay. http://mjskay.github.io/tidybayes/tidyposterior: estadística bayesiana. Paquete del entorno tidymodels. https://tidyposterior.tidymodels.org/index.htmltidyposterior: estadística bayesiana. Paquete del entorno tidymodels. https://tidyposterior.tidymodels.org/index.html","code":""},{"path":"recursos-de-aprendizaje.html","id":"informes-tablas-webs-libros-y-diapositivas","chapter":"📚 Recursos de aprendizaje","heading":"Informes, tablas, webs, libros y diapositivas","text":"rmarkdown: creación de informes en R. De Yihui Xie, J. J. Allaire y Garrett Grolemund https://bookdown.org/yihui/rmarkdown/rmarkdown: creación de informes en R. De Yihui Xie, J. J. Allaire y Garrett Grolemund https://bookdown.org/yihui/rmarkdown/bookdown: creación de libros y manuales en R. De Yihui Xie. https://bookdown.org/yihui/bookdown/bookdown: creación de libros y manuales en R. De Yihui Xie. https://bookdown.org/yihui/bookdown/blogdown: creación de webs en R. De Yihui Xie, Amber Thomas y Alison Presmanes Hill. https://bookdown.org/yihui/blogdown/blogdown: creación de webs en R. De Yihui Xie, Amber Thomas y Alison Presmanes Hill. https://bookdown.org/yihui/blogdown/shiny: webs interactivas con R. https://shiny.rstudio.com/tutorial/written-tutorial/lesson1/shiny: webs interactivas con R. https://shiny.rstudio.com/tutorial/written-tutorial/lesson1/gt: tablas en R. De RStudio https://gt.rstudio.com/gt: tablas en R. De RStudio https://gt.rstudio.com/gtExtras: visualización de datos en tablas. De Thomas Mock. https://jthomasmock.github.io/gtExtras/index.htmlgtExtras: visualización de datos en tablas. De Thomas Mock. https://jthomasmock.github.io/gtExtras/index.htmltablas visualmente atractivas en R con gt y gtextras. De Benjamin Nowak https://bjnnowak.netlify.app/2021/10/04/r-beautiful-tables--gt--gtextras/tablas visualmente atractivas en R con gt y gtextras. De Benjamin Nowak https://bjnnowak.netlify.app/2021/10/04/r-beautiful-tables--gt--gtextras/","code":""},{"path":"recursos-de-aprendizaje.html","id":"paquetesrecursos-curiosos","chapter":"📚 Recursos de aprendizaje","heading":"Paquetes/recursos curiosos","text":"wordle. De coolbutuseless https://coolbutuseless.github.io/2022/01/04/wordle-v0.1.5--package--playing--helping-solve-wordle-puzzles/wordle. De coolbutuseless https://coolbutuseless.github.io/2022/01/04/wordle-v0.1.5--package--playing--helping-solve-wordle-puzzles/Canciones de Taylor Swift. De W. Jake Thompson https://taylor.wjakethompson.com/Canciones de Taylor Swift. De W. Jake Thompson https://taylor.wjakethompson.com/Datos de partidas de ajedrez. De Jason Zivkovic https://github.com/JaseZiv/chessRDatos de partidas de ajedrez. De Jason Zivkovic https://github.com/JaseZiv/chessRVisualizar el ciclo día/noche en el mundo. De Dominic Royé https://dominicroye.github.io/en/2021/visualize--day-night-cycle---world-map/Visualizar el ciclo día/noche en el mundo. De Dominic Royé https://dominicroye.github.io/en/2021/visualize--day-night-cycle---world-map/Visualización de la cuenca hídrica de Francia. De Etienne Bacher https://www.etiennebacher.com/posts/2021-12-27-mapping-french-rivers-network/Visualización de la cuenca hídrica de Francia. De Etienne Bacher https://www.etiennebacher.com/posts/2021-12-27-mapping-french-rivers-network/ggpattern: rellenos con patrones geométricos en ggplot2. De coolbutuseless y Trevor L. Davis. https://github.com/coolbutuseless/ggpatternggpattern: rellenos con patrones geométricos en ggplot2. De coolbutuseless y Trevor L. Davis. https://github.com/coolbutuseless/ggpatternRecreando en R la famosa espiral del NYT. De Ansgar Wolsing https://bydata.github.io/nyt-corona-spiral-chart/Recreando en R la famosa espiral del NYT. De Ansgar Wolsing https://bydata.github.io/nyt-corona-spiral-chart/","code":""},{"path":"requisitos.html","id":"requisitos","chapter":"Capítulo 1 Requisitos","heading":"Capítulo 1 Requisitos","text":"Conexión internet (para la descarga de algunos datos y paquetes).Conexión internet (para la descarga de algunos datos y paquetes).Instalar R (ver 2). R será nuestro lenguaje, nuestro diccionario, nuestro castellano, nuestra ortografía para poder «comunicarnos» con el ordenador. https://cran.r-project.org/Instalar R (ver 2). R será nuestro lenguaje, nuestro diccionario, nuestro castellano, nuestra ortografía para poder «comunicarnos» con el ordenador. https://cran.r-project.org/Instalar R Studio (ver 2.3). De la misma manera que podemos escribir el mismo texto en castellano en una tablet, en un ordenador, en un Word, en un papel o en un tuit, en programación podemos usar distintos IDE (entornos de desarrollo integrados, nuestro Office), para que el trabajo sea más cómodo. Nosotros trabajaremos con RStudio.Instalar R Studio (ver 2.3). De la misma manera que podemos escribir el mismo texto en castellano en una tablet, en un ordenador, en un Word, en un papel o en un tuit, en programación podemos usar distintos IDE (entornos de desarrollo integrados, nuestro Office), para que el trabajo sea más cómodo. Nosotros trabajaremos con RStudio.Todo lo necesario para seguir este curso es de descarga gratuita: viva el software libre.","code":""},{"path":"instalacionR.html","id":"instalacionR","chapter":"Capítulo 2 Instalación","heading":"Capítulo 2 Instalación","text":"Scripts usados (códigos con los ejercicios):script02.R. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script02.REn breve daremos nuestros primeros pasos pero antes necesitamos instalar algunas cosas. serán tantas. Para entender lo que instalamos pensaremos que vamos escribir un libro. ¿Qué necesitamos?Gramática/ortografía: en nuestro caso será R, el lenguaje de programación que usaremos.Word: al igual que podemos escribir en castellano de distintas maneras (en un Word, un post-, un cuaderno, etc), cuando programamos podemos trabajar en distintos entornos de desarrollo (IDE). En nuestro caso escribiremos y programaremos en RStudio, nuestro Word para escribir en lenguaje R.","code":""},{"path":"instalacionR.html","id":"instalación-de-r","chapter":"Capítulo 2 Instalación","heading":"2.1 Instalación de R","text":"Al contrario que otros lenguajes de programación, la instalación será bastante sencilla gracias su modularidad, ya que solo vamos necesitar 3 pasos (y conexión internet).","code":""},{"path":"instalacionR.html","id":"paso-1","chapter":"Capítulo 2 Instalación","heading":"2.1.1 Paso 1","text":"Entra en la web https://cran.r-project.org/ y en la pantalla de inicio selecciona la instalación acorde tu sistema operativo (ver imagen 2.1)\nImagen/gráfica 2.1: Pantalla inicial de la plataforma CRAN de R.\n","code":""},{"path":"instalacionR.html","id":"paso-2","chapter":"Capítulo 2 Instalación","heading":"2.1.2 Paso 2","text":"Para sistemas operativos Mac basta con que hacer click en el archivo .pkg, y abrirlo una vez descargado (ver imagen 2.2)\nImagen/gráfica 2.2: Pantalla de instalación de R en Mac OS.\nPara sistemas operativos Windows, debemos clickar en install R first time (ver imagen 2.3) y en la siguiente pantalla hacer click en Download R Windows (ver imagen 2.4). Una vez descargado, abrirlo como cualquier archivo.\nImagen/gráfica 2.3: Pantalla previa de instalación de R en Windows.\n\nImagen/gráfica 2.4: Pantalla final de instalación de R en Windows.\n","code":""},{"path":"instalacionR.html","id":"paso-3","chapter":"Capítulo 2 Instalación","heading":"2.1.3 Paso 3","text":"Tras su instalación tendrás en tu escritorio (Windows) o en tu Launchpad (Mac Os) un ejecutable de R para abrir. En Windows puede que tengas dos ejecutables i386 y x64 (como todo programa en Windows está la versión de 32 y de 64 bits, haz click preferiblemente - si lo tienes - en el de x64). Te saldrá algo parecido lo que observas en la imagen 2.5, lo que se conoce como CONSOLA\nImagen/gráfica 2.5: Primera pantalla al abrir el ejecutable de R.\n","code":""},{"path":"instalacionR.html","id":"primera-operación-en-consola-sumar-dos-números","chapter":"Capítulo 2 Instalación","heading":"2.2 Primera operación en consola: sumar dos números","text":"Para comprobar que R está correctamente instalado, abre R y prueba escribir en la pantalla blanca inferior las siguientes órdenes (recuerda: los códigos/órdenes de este manual puedes copiarlos directamente de la cajita haciendo click en el botón de la esquina superior derecha de la misma)\nImagen/gráfica 2.6: Primera suma en la consola de R.\n¡Enhorabuena!¿Dónde hemos escrito ese código? Esa pantalla blanca donde hemos escrito el código se llama CONSOLA, y será donde ejecutaremos las órdenes.¿Dónde hemos escrito ese código? Esa pantalla blanca donde hemos escrito el código se llama CONSOLA, y será donde ejecutaremos las órdenes.¿Qué hemos hecho? Hemos hecho más de lo que parece. Primero, hemos definido dos variables y b asignándole un valor numérico cada una de ellas. Imagina que el símbolo <- es visto en nuestra cabeza como una flecha: una variable que llamamos le asignamos el valor 1 (y se queda guardada en nuestro ordenador), y una variable que llamamos b le asignamos el valor 2. Podemos verlo como \\(= 1,~b = 2\\). Y tras definir ambas variables, las hemos usado en una operación aritméticaa + b. Ya sabemos usar R como calculadora.¿Qué hemos hecho? Hemos hecho más de lo que parece. Primero, hemos definido dos variables y b asignándole un valor numérico cada una de ellas. Imagina que el símbolo <- es visto en nuestra cabeza como una flecha: una variable que llamamos le asignamos el valor 1 (y se queda guardada en nuestro ordenador), y una variable que llamamos b le asignamos el valor 2. Podemos verlo como \\(= 1,~b = 2\\). Y tras definir ambas variables, las hemos usado en una operación aritméticaa + b. Ya sabemos usar R como calculadora.¿Cómo nos devuelve R el resultado de la operación? Si te ha devuelto el resultado correcta, en la consola debe aparecer [1] 3. El valor [1] aparecerá siempre ya que simplemente nos numera las líneas de la consola usadas; lo que viene detrás es realmente el resultado, es decir, \\(+ b = 3\\).¿Cómo nos devuelve R el resultado de la operación? Si te ha devuelto el resultado correcta, en la consola debe aparecer [1] 3. El valor [1] aparecerá siempre ya que simplemente nos numera las líneas de la consola usadas; lo que viene detrás es realmente el resultado, es decir, \\(+ b = 3\\).¿Por qué hemos escrito + b al final? Un mantra de R, que veremos lo largo de todo el curso, es que R intenta molestarte lo menos posible (eso es bueno cuando ya sabes usarlo, tan bueno cuando empezamos aprenderlo). Cuando asignamos los valores <- 1 y b <- 2, R nos muestra nada: si guardamos un resultado en una variable, nos muestra nada por consola, simplemente lo guarda. Para obtener el resultado en la consola necesitamos escribir el nombre de las variables (u operaciones entre ellas, como + b).¿Por qué hemos escrito + b al final? Un mantra de R, que veremos lo largo de todo el curso, es que R intenta molestarte lo menos posible (eso es bueno cuando ya sabes usarlo, tan bueno cuando empezamos aprenderlo). Cuando asignamos los valores <- 1 y b <- 2, R nos muestra nada: si guardamos un resultado en una variable, nos muestra nada por consola, simplemente lo guarda. Para obtener el resultado en la consola necesitamos escribir el nombre de las variables (u operaciones entre ellas, como + b). WARNING: Como habrás advertido, en R usaremos <- para asignar valores en lugar de =, como una flecha. Usaremos = para indicarle el valor los argumentos que usemos en funciones y == como operador de comparación: si escribimos 2 == 3, le estamos preguntando si 2 es igual 3. Bonita esta interfaz es, así que la cerraremos y la abriremos más. Tenemos nuestro lenguaje instalado, vamos instalar nuestro Word para poder programar de forma cómoda.","code":"\na <- 1\nb <- 2\na + b## [1] 3\n2 == 3## [1] FALSE"},{"path":"instalacionR.html","id":"instalacionRStudio","chapter":"Capítulo 2 Instalación","heading":"2.3 Instalación de RStudio","text":"Para instalar RStudio deberemos ir la web https://www.rstudio.com/products/rstudio/download/#download y seleccionar el ejecutable que te aperezca acorde tu sistema operativo (ver imagen 2.7). Tras descargar el ejecutable, hay que abrirlo como otro cualquier otro ejecutable y dejar que termine la instalación.\nImagen/gráfica 2.7: Descargar el ejecutable de RStudio para su posterior instalación.\nTras instalar tendremos en el escritorio o Launchpad un ejecutable de RStudio que abriremos. Se nos aparecerá una pantalla similar esta:\nImagen/gráfica 2.8: Primer recibimiento de nuestro mejor amigo RStudio.\nListo, tienes instalado (casi) todo correctamente.","code":""},{"path":"instalacionR.html","id":"instalacionpaquetes","chapter":"Capítulo 2 Instalación","heading":"2.4 Instalación de paquetes","text":"El lenguaje R tiene 3 ventajas principales:Es un lenguaje creado por y para estadísticos/.Es un lenguaje creado por y para estadísticos/.Es software libre (como C, C++, Python, Fortran, y otros tantos lenguajes). El software libre solo tiene una ventaja evidente (es gratis, ok) sino que permite acceder código ajeno.Es software libre (como C, C++, Python, Fortran, y otros tantos lenguajes). El software libre solo tiene una ventaja evidente (es gratis, ok) sino que permite acceder código ajeno.Es un lenguaje modular: en la instalación se instalan todas las funcionalidades salvo un mínimo para poder funcionar, de forma que se ahorra espacio en disco y en memoria. Al ser software libre, existen trozos de código hechos por otras personas llamados paquetes, que podemos ir instalando nuestro gusto según los vayamos necesitando. Esto es una ventaja enorme ya que R tiene una comunidad de usuarios gigante, con más de 17 000 paquetes: ¡hay más de 17 000 trozos de código validados por la comunidad y la plataforma, de forma gratuita!Es un lenguaje modular: en la instalación se instalan todas las funcionalidades salvo un mínimo para poder funcionar, de forma que se ahorra espacio en disco y en memoria. Al ser software libre, existen trozos de código hechos por otras personas llamados paquetes, que podemos ir instalando nuestro gusto según los vayamos necesitando. Esto es una ventaja enorme ya que R tiene una comunidad de usuarios gigante, con más de 17 000 paquetes: ¡hay más de 17 000 trozos de código validados por la comunidad y la plataforma, de forma gratuita!\nImagen/gráfica 2.9: Paquetes disponibles en R.\nDichos paquetes son trozos de código realizadas por otros usuarios de la comunidad (y validados por el equipo de CRAN si la descarga es mediante install.packages()), listos para ser usados. Una vez instalados (descargados) los trozos de código, basta con «acudir» ellos con library().Haciendo una metáfora con la colección de libros que tengas en casa: con la instalación hemos comprado el libro (por ejemplo, install.packages(\"ggplot2\")) y lo tenemos en nuestra estantería (para siempre), con la llamada al paquete, por ejemplo library(ggplot2), lo que hacemos es decidir, de entre todos los libros de la estantería, cuales queremos llevarnos de viaje (en cada maleta que hagamos).","code":""},{"path":"instalacionR.html","id":"glosario","chapter":"Capítulo 2 Instalación","heading":"2.5 Glosario","text":"GLOSARIOConsola: es el nombre para llamar esa ventana grande que te ocupa buena parte de tu pantalla. Prueba escribir el mismo código que antes en ella (es el equivalente la consola de R que hemos abierto al principio).\nImagen/gráfica 2.10: Lanzando consola nuestras primeras órdenes en RStudio.\nLa consola será donde ejecutaremos órdenes y mostraremos resultadosEnvironment (entorno): la pantalla pequeña (puedes ajustar los márgenes con el ratón tu gusto) que tenemos en la parte superior derecha se denomina environment o entorno de variables, donde como puedes ver, tras ejecutar el pequeño código en la consola, nos informa de que tenemos dos variables numéricas y su valor asignado. Nos mostrará las variables que tenemos definidas, el tipo y su valor.\nImagen/gráfica 2.11: Environment de variables.\nPanel multiusos: la ventana que tenemos en la parte inferior derecha servirá para buscar ayuda de comandos y órdenes, además de para visualizar gráficos. Lo veremos cuando sea necesario.\nImagen/gráfica 2.12: Panel multiusos.\nLos paquetes usados los verás denotados como {nombre_paquete} lo largo del manual.","code":"\na <- 1\nb <- 2\na + b"},{"path":"instalacionR.html","id":"consejos","chapter":"Capítulo 2 Instalación","heading":"2.6 Consejos","text":"CONSEJOS¿Cómo saber cuando la orden lanzada en consola ha terminado?veces R y RStudio son tan silenciosos que sabemos si ha acabado la orden que acabamos de lanzar en la consola o . Siempre que veas el símbolo > como última línea en la consola significa que está listo para que le escribamos otra orden (es la forma cariñosa de decirte que ya ha acabado, ver imagen 2.13)\nImagen/gráfica 2.13: Ejemplo de que la orden lanzada ha acabado.\n ¿Cómo prevenir la fatiga programando?Estando delante de una pantalla de ordenador, con la vista muy fija mientras se programa, puede que acabes teniendo cierta fatiga visual en el trabajo. Te aconsejo que cambies en tu RStudio la tonalidad del fondo de tu programa, en tonos oscuros y blancos (¿te fijado que mis capturas tienen un azul cobalto oscuro de fondo mientras el tuyo es un blanco nuclear? Echa un vistazo las imágenes 2.14 y 2.15)\nImagen/gráfica 2.14: Menú de opciones de nuestro editor\n\nImagen/gráfica 2.15: Personalizar el color de fondo de nuestro editor, la letra y el tamaño de fuente\n","code":""},{"path":"instalacionR.html","id":"ejercicios","chapter":"Capítulo 2 Instalación","heading":"2.7 📝 Ejercicios","text":"(haz click en las flechas para ver soluciones)📝Ejercicio 1: abre R Studio y en tu consola (parte inferior de tu pantalla) asigna los valores 2 y 5 dos variables y b. Tras asignarles valores, multiplica los números en consola (haz click en la flecha para la solución propuesta). Solución:\nImagen/gráfica 2.16: Multiplicación de y b.\n 📝Ejercicio 2: modifica el código inferior para definir dos variables c y d, con valores 3 y -1, y calcular la división c/d (haz click en la flecha para la solución propuesta).Solución: 📝Ejercicio 3: repite el ejercicio 1 pero ahora guarda el resultado de la multiplicación final en una variable c. Para ver el resultado guardado en c escribe dicha variable en consola (haz click en la flecha para la solución propuesta). Solución:\nImagen/gráfica 2.17: Multiplicación de y b guardando el resultado.\n WARNING:hace falta gastar una línea por cada orden que quieras ejecutar. Tampoco necesitas guardar cada paso intermedio que realices. Cuidado con la memoria: cada asignación que hagas es una variable guardada que consume recursos en tu ordenador.","code":"\n# Para poner comentarios en el código se usa #\n\n# Definición de variables\na <- 2\nb <- 5\n\n# Multiplicación\na * b## [1] 10\n# Definición de variables\nc <- \nd <-\n\n# Operación (división)\nc ? d\n# Definición de variables\nc <- 3\nd <- -1\n\n# División\nc / d## [1] -3\n# Variables\na <- 2\nb <- 5\n\n# Resultado\nc <- a * b\n\n# Muestro en consola\nc## [1] 10"},{"path":"que-es-R.html","id":"que-es-R","chapter":"Capítulo 3 ¿Qué es R?","heading":"Capítulo 3 ¿Qué es R?","text":"Una vez que tenemos todo instalado vamos dar nuestros primeros pasos en R, pero antes veamos un poco de su historia y de una particularidad: R es un lenguaje modular (¿modu…qué?)","code":""},{"path":"que-es-R.html","id":"historia-de-r","chapter":"Capítulo 3 ¿Qué es R?","heading":"3.1 Historia de R","text":"Veamos antes un poco de la historia de nuestra deidad.Allá por 1975, los laboratorios Bell (los que inventaron la radio moderna tal y como la conocemos), necesitaban una alternativa los lenguajes más «rudos» y antiguos como C++ o Fortran, lenguajes rápidos en la ejecución pero complejos en su uso, con una gran curva de aprendizaje y con muy poca capacidad en la visualización de datos que se empezaba necesitar.Así que en 1976 sacaron la primera versión del lenguaje conocido S (hasta entonces estaba de moda lo de llamar los lenguajes con una sola inicial). En 1980 se empezó distribuir la primera versión pública de S, más allá de los laboratorios Bell, y en 1988 se añadieron bastantes funcionalidades nuevas como poder aplicar funciones otras funciones (los famosos apply() que ya veremos). Años más tarde, en 1991, dicho lenguaje se simplificó, reescribiendo muchas subrutinas de otros lenguajes más primitivos, para tener una versión muy parecida al actual R, permitiendo el usod de operadores, data.frames (que veremos) y otro tipo de objetos, sencillos en la programación pero muy versatiles.Sin embargo, salvo uso docente, S tenía licencia así que en 1992 Ross Ihaka y Robert Gentleman se lanzaron crear una versión de S libre y gratuita, un trabajo de casi 8 años hasta que en el año 2000, ambos investigadores de la Universidad de Auckland en Nueva Zelanda lanzaron la primera versión estable del lenguaje.Tras dicho lanzamiento, se creó un equipo de expertos en estadística computacional (el conocido como R Development Core Team) que es el que se encarga de mantener toda la aerquitectura de R y los que se encargar de actualizar y mejorar el paquete {base}, una librería motor sobre la que se construye el resto de funciones.Y es precisamente ese hecho una de las principales diferencias entre Python y R: R fue creado por y para estadísticos. Te dejo esta entrada en el blog por si quieres curiosear las diferencias (aunque ambos pueden ser útiles para trabajos estadísticos muy generales).","code":""},{"path":"que-es-R.html","id":"comunidadpaquetes","chapter":"Capítulo 3 ¿Qué es R?","heading":"3.2 Comunidad de usuarios: paquetes","text":"La pregunta del millón suele ser siempre la misma: ¿qué lenguaje elegir? Podríamos hacer una comparativa técnico de distintos lenguajes pero vamos quedarnos con dos consejos fundamentales: prioriza el software libre y aquellos lenguajes que tienen una comunidad muy grande de usuarios trabajando en los problemas o campo para el que vas usar dicho lenguaje.El lenguaje R (también Python) tiene 3 ventajas principales:Es un lenguaje creado por y para estadísticos/.Es un lenguaje creado por y para estadísticos/.Es software libre (como C++, Python, Fortran, y otros tantos lenguajes). El software libre solo tiene una ventaja evidente (es gratis, ok) sino que permite acceder libremente código ajeno.Es software libre (como C++, Python, Fortran, y otros tantos lenguajes). El software libre solo tiene una ventaja evidente (es gratis, ok) sino que permite acceder libremente código ajeno.Es un lenguaje modular: en la instalación que hemos realizado se han instalado todas las funcionalidades, solo el mínimo para poder funcionar, de forma que se ahorra espacio en disco y en memoria. Al ser software libre, existen trozos de código hechos por otras personas llamados paquetes, que podemos ir instalando nuestro gusto según los vayamos necesitando. Esto es una ventaja enorme ya que R tiene una comunidad de usuarios gigante para hacer estadística (Python tiene una enorme comunidad pero más enfocada al Machine Learning), con más de 17 000 paquetes: ¡hay más de 17 000 trozos de código, muchos de ellos programados por expertos/en R, validados por la comunidad y la plataforma, y de forma gratuita!Es un lenguaje modular: en la instalación que hemos realizado se han instalado todas las funcionalidades, solo el mínimo para poder funcionar, de forma que se ahorra espacio en disco y en memoria. Al ser software libre, existen trozos de código hechos por otras personas llamados paquetes, que podemos ir instalando nuestro gusto según los vayamos necesitando. Esto es una ventaja enorme ya que R tiene una comunidad de usuarios gigante para hacer estadística (Python tiene una enorme comunidad pero más enfocada al Machine Learning), con más de 17 000 paquetes: ¡hay más de 17 000 trozos de código, muchos de ellos programados por expertos/en R, validados por la comunidad y la plataforma, y de forma gratuita!\nImagen/gráfica 3.1: Paquetes disponibles en R.\nEsto nos ahorra muchísimo tiempo en nuestro día día ya que casi todo lo que querramos hacer ya lo habrá querido hacer otra persona (y seguramente mejor que nosotros/). Vamos instalar, por ejemplo, un paquete gráfico (ggplot2) que necesitaremos en el futuro. Para ello, escribe en tu consola el siguiente código y pulsa enter.Dicha orden (puede tardar un poco la primera vez, depende de tu conexión internet) lo que hará será acceder la web de R, bajarse tu ordenador los trozos de código incluidos en el paquete llamado ggplot2, y dejarlos para siempre en él. WARNING:La instalación de paquetes SOLO ES NECESARIA la primera vez que se usa dicho paquete en la vida del ordenador, hace falta hacerlo cada vez que lo usas. Una vez que tenemos los trozos de código (el paquete) en nuestro ordenador, en cada sesión de R que abramos (cada vez que cierres y abras RStudio) deberemos (si queremos) llamar ese paquete que tenemos instalado, escribiendo el siguiente comando en consolaWelcome software libre","code":"\ninstall.packages(\"ggplot2\")\nlibrary(ggplot2)"},{"path":"que-es-R.html","id":"por-qué-excel-no-es-tu-amigo","chapter":"Capítulo 3 ¿Qué es R?","heading":"3.3 ¿Por qué Excel no es tu amigo?","text":"R es un lenguaje de programación, de alto nivel para el usuario y modular. Los lenguajes de alto nivel como R, Python (curso interactivo de Python en https://checkio.org/) o Matlab, facilitan la programación al usuario, teniendo que preocuparte solo de la tarea de programar. Son lenguajes con una menor curva de aprendizaje aunque suelen ser más lentos en su ejecución en comparación con lenguajes de bajo nivel (C, C++ o Fortran), lenguajes muy rápidos en su ejecución pero cuya programación requiere un mayor tiempo y formación, teniendo que además estar pendiente del tipo de variables, espacio en memoria, etc.Por su arquitectura, R es un lenguaje que puede ser usado para un propósito general pero que está especialmente diseñado para el análisis estadístico de datos. Su modularidad nos da la ventaja de que podemos instalar las funcionalidades que vayamos necesitando de forma progresiva.¿Por qué es recomendable usar Excel como base de datos ni para realizar análisis estadísticos complejos? Software de pago: Excel, al igual que el resto de programas de Microsoft o SPSS (por desgracia programa estrella de nuestro sistema sanitario), es un programa de pago. nivel individual, todos hemos tenido una versión que hemos pagado, pero dicha evasión se la puede permitir una empresa o administración, que debe de pagar altas cantidades de dinero anuales por las licencias, dinero que sería necesario si los investigadores y trabajadores tuvieran formación (remunerada) en otras herramientas de software libre.Software de pago: Excel, al igual que el resto de programas de Microsoft o SPSS (por desgracia programa estrella de nuestro sistema sanitario), es un programa de pago. nivel individual, todos hemos tenido una versión que hemos pagado, pero dicha evasión se la puede permitir una empresa o administración, que debe de pagar altas cantidades de dinero anuales por las licencias, dinero que sería necesario si los investigadores y trabajadores tuvieran formación (remunerada) en otras herramientas de software libre.Software cerrado: solo es de pago sino que es cerrado, así que solo podemos hacer lo que Excel ha creído que interesante que podamos hacer. Incluso con la programación de MACROS, las funcionalidades de Excel siguen siendo mucho más limitadas ya que viene «programadas» de antemanoSoftware cerrado: solo es de pago sino que es cerrado, así que solo podemos hacer lo que Excel ha creído que interesante que podamos hacer. Incluso con la programación de MACROS, las funcionalidades de Excel siguen siendo mucho más limitadas ya que viene «programadas» de antemanoAlto consumo de memoria: dicha programación predeterminada hace que Excel ocupe muchísimo espacio en el disco duro y tenga un alto consumo de memoria (la memoria es lo que te permite hacer varias tareas la vez en tu ordenador).Alto consumo de memoria: dicha programación predeterminada hace que Excel ocupe muchísimo espacio en el disco duro y tenga un alto consumo de memoria (la memoria es lo que te permite hacer varias tareas la vez en tu ordenador).es universal: solo es de pago sino que además, dependiendo de la versión que tengas de Excel, tendrá un formato distinto para datos como fechas, teniendo incluso extensiones distintas, de forma que un archivo .xls abierto por un Excel moderno puede provocar errores en la carga.es universal: solo es de pago sino que además, dependiendo de la versión que tengas de Excel, tendrá un formato distinto para datos como fechas, teniendo incluso extensiones distintas, de forma que un archivo .xls abierto por un Excel moderno puede provocar errores en la carga.¡ES SOLO UNA HOJA DE CÁLCULO!: el propio Microsoft desaconseja el uso de Excel para el análisis de grandes volúmenes de datos. El Excel es una herramienta maravillosa para ser usada como una sencilla hoja de cálculo: llevar las cuentas de tu familia, de tu pequeño negocio, una declaración de la Renta sencilla, planificar viajes, etc. Pero el programa ESTÁ DISEÑADO para ser una base de datos ni para análisis detallado, y muchos menos pensado para generar un entorno flexible para el análisis estadístico y la visualización de datos.¡ES SOLO UNA HOJA DE CÁLCULO!: el propio Microsoft desaconseja el uso de Excel para el análisis de grandes volúmenes de datos. El Excel es una herramienta maravillosa para ser usada como una sencilla hoja de cálculo: llevar las cuentas de tu familia, de tu pequeño negocio, una declaración de la Renta sencilla, planificar viajes, etc. Pero el programa ESTÁ DISEÑADO para ser una base de datos ni para análisis detallado, y muchos menos pensado para generar un entorno flexible para el análisis estadístico y la visualización de datos. ¿Puedes ser el mejor partiendo un filete con una cuchara? Seguramente puedas (en Excel puedes hasta programar con macros), y si siempre lo hiciste así, acabarás normalizándolo, pero seguirás siendo una persona comiendo filete con cuchara.¿Qué sucede si usamos la herramienta equivocada? Tres ejemplos:Problemas para codificar fechas: en 2016 se publicó una revisión de artículos en genética, descubriendo que 1 de cada 5 artículos contenían errores debido una mala codificación de las fechas, conviertiendo por ejemplo los genes Septin-2 (conocido como SEPT2) en fechas, y al revés (Ziemann, Eren, El-Osta 2016).\nImagen/gráfica 3.2: Excel en una noche loca.\nProblemas de memoria: un Excel permite por defecto una cantidad máxima de filas. Aunque dicha cantidad se puede ampliar, sigue siendo finita, por lo que cuando superas el umbral de filas, al añadir filas Excel te borra registros sin avisarte de que lo está haciendo. Esto es lo que sucedió con los registros de casos covid en Reino Unido.\nImagen/gráfica 3.3: Cuando Excel dice basta.\nProblemas para codificar edades: una variable de tipo fecha, aunque nosotros la veamos con letras, en realidad es una variable numérica que representa los días que han pasado desde una fecha origen. En función de las distintas versiones de Excel, dicha fecha origen cambia. Además, si se codifica mal la fecha en formato dd-mm-YY, dicho formato cuando se exporta otro excel en texto, permite distinguir un nacido en 1918 y un nacido en 2018, así que podemos estar confundiendo personas de 103 años con niños de 3 años (y es lo que sucedió en España, observando unas tasas de mortalidad en niños muy pequeños equivalentes personas mayores).\nImagen/gráfica 3.4: Los centenarios con biberón.\n","code":""},{"path":"que-es-R.html","id":"glosario-1","chapter":"Capítulo 3 ¿Qué es R?","heading":"3.4 Glosario","text":"GLOSARIOPaquete: trozos de código realizadas por otros usuarios de la comunidad (y validades por el equipo de CRAN si la descarga es mediante install.packages()) para ser usados. Una vez instalados (descargados) los trozos de código nuestro ordenador, basta con «acudir» ellos con library().Haciendo una metáfora con la colección de libros que tengas en casa: con la instalación hemos comprado el libro y lo tenemos en nuestra estantería (para siempre), con la llamada al paquete, por ejemplo library(ggplot2), lo que hacemos es decidir, de entre todos los libros de la estantería, cuales queremos llevarnos de viaje (en cada maleta que hagamos).Los paquetes usados los verás denotados como {nombre_paquete} lo largo del manual.","code":""},{"path":"primeros-pasos.html","id":"primeros-pasos","chapter":"Capítulo 4 Primeros pasos","heading":"Capítulo 4 Primeros pasos","text":"Scripts usados:script04.R. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script04.R Ya hemos instalado lo necesario así que vamos empezar por lo sencillo y recordando parte de lo que ya hemos realizado: ¿cómo usar R como una calculadora?","code":""},{"path":"primeros-pasos.html","id":"primeros-pasos-en-r-calculadora","chapter":"Capítulo 4 Primeros pasos","heading":"4.1 Primeros pasos en R: calculadora","text":"¿Te acuerdas de lo que era la CONSOLA? En el caso de RStudio, la consola será esa pequeña pantalla que tenemos en la parte inferior (la pestaña Console). Vamos trabajar de momento solo en esa ventana inferior.\nImagen/gráfica 4.1: Lanzando consola nuestras primeras órdenes en RStudio.\nLo que ya hemos descubierto en los pasos de la instalación (ver imagen 4.1) es que la consola de R tiene una función muy básica y evidente: nos sirve de calculadora. Un ejemplo muy simple: si escribimos 3 en la consola y pulsamos ENTER, la consola nos mostrará el resultado de la suma Pero entonces…¿cuál es la diferencia entre una calculadora y un lenguaje de programación? Imagina que dicha suma 3 la quisiéramos utilizar para un segundo cálculo: ¿y si en lugar de lanzarlo la consola sin más lo almacenamos en alguna variable?Como hemos visto en la instalación de RStudio, para asignar valores variables lo haremos con <-, por ejemplo con la orden x <- 1 + 2: una variable de nombre x va tener asignada/guardada lo que valga la operación 1 + 2Como puedes comprobar, en tu parte superior derecha (nuestro entorno de variables), podrás ver como una nueva variable x es ahora visualizada, con su valor asignado (se mostrará en consola salvo que escribas 3 en ella: R asume que querías visualizarla en consola sino solo guardarla).\nImagen/gráfica 4.2: Environment.\nDicha variable x además podemos reciclarla para definir, por ejemplo, una nueva variable y, restándole una constante. De la misma manera que hemos hecho restas, sumas y multiplicaciones, R tiene todas las operaciones clásicas que podrías tener en una calculadora. Prueba ejecutar en la consola las órdenes x^2, sqrt(x) o abs(y): R calculará las operaciones elevar al cuadrado, raíz cuadrada y valor absoluto (respectivaemnte) de la variable que tengan entre paréntesis. CONSEJO:Las órdenes sqrt() y abs() se llaman funciones, y la variable que tienen entre paréntesis se llama argumento de la función: una variable que toma de entrada la función y con la que opera internamente. ","code":"\n1 + 2## [1] 3\nx <- 1 + 2\ny <- x - 3\nx## [1] 3\ny## [1] 0\nx * y## [1] 0\nx^2## [1] 9\nsqrt(x)## [1] 1.732051\ny <- x - 5\nabs(y)## [1] 2"},{"path":"primeros-pasos.html","id":"y-dónde-programamos","chapter":"Capítulo 4 Primeros pasos","heading":"4.2 ¿Y dónde programamos?","text":"¿Estás emocionado/? Vamos abrir nuestro primer script. Un script será el documento en el que programamos, nuestro .doc, pero aquí será un archivo con extensión .R, donde escribiremos las órdenes, que nos evitará estar lanzando todo consola. ¿Por qué abusar de la consola? Una máxima para olvidar: TODO lo que escribas en un script, cuando cierres RStudio, lo habrás perdido (cómo si en lugar de escribir en un Word y guardarlo, nunca guardases el documento).Para abrir nuestro primero script, haz click en el menú superior en File << New File << R Script como se muestra en la imagen 4.3\nImagen/gráfica 4.3: Abriendo nuestro primer script de R.\nTras abrirlo tendremos una cuarta ventana: esta será la ventana de nuestros códigos, la ventana más importante ya que es donde escribiremos lo que queremos ejecutar. Escribe el código de la suma de arriba en ese script y guarda el archivo haciendo click en el botón Save current document\nImagen/gráfica 4.4: Escribiendo y guardando nuestro primer script.\nEse código se ejecuta salvo que se lo digamos. Tenemos tres opciones para ejecutar código:Copiar y pegar el trozo de código en la consola (como hemos hecho al principio).Copiar y pegar el trozo de código en la consola (como hemos hecho al principio).Seleccionar líneas de código y clickar en Run (o con su atajo de teclado), lo que hará que se ejecute solo las líneas seleccionadas.Seleccionar líneas de código y clickar en Run (o con su atajo de teclado), lo que hará que se ejecute solo las líneas seleccionadas.Activar el cuadrado Source save la derecha del botón de guardar y volvemos hacer click en el botón de guardar: siempre que esa opción esté activada, al guardar solo es nos guarda el archivo .R sino que además se ejecuta el código completo que tengas en el script.Activar el cuadrado Source save la derecha del botón de guardar y volvemos hacer click en el botón de guardar: siempre que esa opción esté activada, al guardar solo es nos guarda el archivo .R sino que además se ejecuta el código completo que tengas en el script.","code":"\na <- 1\nb <-2\na + b## [1] 3"},{"path":"primeros-pasos.html","id":"tipos_errores","chapter":"Capítulo 4 Primeros pasos","heading":"4.3 Tipos de errores","text":"Durante tu aprendizaje en R va ser muy habitual que las cosas salgan la primera, apareciendo en consola mensajes en un color rojo. Un miedo muy habitual cuando se empieza programar es pensar que si haces algo mal o aparece algún mensaje de error, el ordenador puede explotar en cualquier momento. programar se aprende programando, así que haz las pruebas que quieras, lo peor que puede pasar es que necesites cerrar sesión en R Studio y abrirlo de nuevo, o en el peor de los casos, desintalarlo y volverlo iinstalar.Dado que el \\(99.9\\%\\) de las veces tu código tendrá errores que deberás ir solventando, está de más conocer los tipos de mensajes que R puede sacarte por consola.Los mensajes de ERROR irán precedidos de la frase «Error …», dándote veces incluso el tipo de error y la línea de código en la que se ha producido. Veamos un ejemplo intentando sumar un número una cadena de texto.Los errores son aquellos fallos que seguramente impidan la ejecución del código. Un error muy habitual es intentar acceder alguna función de algún paquete que, o bien tenemos instalado, o bien hemos llamado haciendo uso del library(): estás intentando leerte un libro de tu biblioteca pero ni siquiera ido la tienda «comprarlo». Los mensajes de WARNING irán precedidos de la frase «Warning …», y son los fallos más delicados ya que son posibles errores o incoherencias que R detecta en tu código pero que van hacer que tu código deje de ejecutarse, aunque probablemente lo haga como ti te gustaría. Un ejemplo es cuando tratamos de hacer la raiz cuadrada de un número negativo.¿Ha ejecutado la orden? Sí, pero te advierte de que el resultado de la operación es un NaN, un valor que existe (al menos dentro de los números reales), un Number (ver Sección ??). Los mensajes de CONTROL serán aquellos que aparecerán por consola sin empezar por «Error …» ni «Warning:…». Dichos mensajes, que puedes incluir tú mismo en tu código con funciones como cat() para monitorizar la ejecución de códigos largos, son errores ni problemas, son simplemente información que R considera útil aportarte. ","code":"\n\"a\" + 1## Error in \"a\" + 1: argumento no-numérico para operador binario\nsqrt(-1)## Warning in sqrt(-1): Se han producido NaNs## [1] NaN"},{"path":"primeros-pasos.html","id":"glosario-2","chapter":"Capítulo 4 Primeros pasos","heading":"4.4 Glosario","text":"GLOSARIOPaquete: trozos de código realizadas por otros usuarios de la comunidad (y validades por el equipo de CRAN si la descarga es mediante install.packages()) para ser usados. Una vez instalados (descargados) los trozos de código nuestro ordenador, basta con «acudir» ellos con library().Haciendo una metáfora con la colección de libros que tengas en casa: con la instalación hemos comprado el libro y lo tenemos en nuestra estantería (para siempre), con la llamada al paquete, por ejemplo library(ggplot2), lo que hacemos es decidir, de entre todos los libros de la estantería, cuales queremos llevarnos de viaje (en cada maleta que hagamos).Los paquetes usados los verás denotados como {nombre_paquete} lo largo del manual.","code":""},{"path":"primeros-pasos.html","id":"consejos-1","chapter":"Capítulo 4 Primeros pasos","heading":"4.5 Consejos","text":"CONSEJOS Panel de ayudaSi escribes en la consola ? nombre_funcion (por ejemplo, escribe en la consola ? sqrt), en el panel inferior derecho te aparecerá una documentación de ayuda de la función para saber que argumentos necesita, como puedes usar la función, qué es lo que te devuelve, ejemplos de uso, etc.\nImagen/gráfica 4.5: Panel de ayuda.\n ¿Cómo comentar el código?Probablemente lo más importante al programar es que te acostumbres comentar lo máximo posible tu código. ¿Qué es un comentario? Es un texto que escribes entre el código precedido de #: todo lo que venga detrás será interpretado por R como código. Es vital cuando programamos que nos acostumbremos comentar lo que hacemos, tanto para nosotros como para otras personas que puedan leer nuestro código. Índice en el códigoPuedes escribir comentarios en el código para que automáticamente se organice tu código en epígrafes, mostrándote un índice en el panel lateral (haz click en el icono de la esquina superior derecha del editor) y permitiendo minimizar partes del código. Para ello puedes comentar por ejemplo con # ----- título -----.\nImagen/gráfica 4.6: Comentando el código para generar un índice.\n ","code":"\n? sqrt"},{"path":"primeros-pasos.html","id":"ejercicios-1","chapter":"Capítulo 4 Primeros pasos","heading":"4.6 📝 Ejercicios","text":"(haz click en las flechas para ver soluciones)📝Ejercicio 1: asigna ahora los valores 1, -2, 3 tres variables , b y c distintas, y calcula la raíz cuadrada de cada uno (haz click en la flecha para la solución propuesta). Solución: 📝Ejercicio 2: calcula en consola la suma de 3 más 4, y todo ello multiplicado por 10, y asígnalo una variable x (haz click en la flecha para la solución propuesta). Imprime el valor por consolaSolución: 📝Ejercicio 3: asigna un valor positivo x y calcula su raíz cuadrada; asigna otro negativo y calcula su valor absoluto con la función abs() (haz click en la flecha para la solución propuesta).Solución: 📝Ejercicio 4: usando la variable x ya definida, completa/modifica el código inferior para guardar en una nueva variable z el resultado guardado en x menos 5 (haz click en la flecha para la solución propuesta).Solución: 📝Ejercicio 5: usando las variables x e y ya definidas, calcula el máximo de ambas (función max()), y guárdalo en una nueva variable t. (haz click en la flecha para la solución propuesta).Solución: WARNING:hace falta gastar una línea por cada orden que quieras ejecutar. Tampoco necesitas guardar cada paso intermedio que realices. Cuidado con la memoria: cada asignación que hagas es una variable guardada que consume recursos en tu ordenador.","code":"\n# Variables\na <- 1\nb <- -2\nc <- 3\n\n# Resultado\nsqrt(a)## [1] 1\nsqrt(b)## [1] NaN\nsqrt(c)## [1] 1.732051\n# Asignamos\nx <- (3 + 4) * 10\n\n# Imprimimos\nx## [1] 70\n# Raíz cuadrada\nx <- 73 # por ejemplo\nsqrt(x)## [1] 8.544004\n# Valor absoluto\ny <- -19 # por ejemplo\nabs(y)## [1] 19\nz <- x - 5\nz## [1] 68\nz <- ? - ?\nz\nt <- max(x, y)\nt## [1] 73"},{"path":"var-num.html","id":"var-num","chapter":"Capítulo 5 Variables individuales: números y caracteres","heading":"Capítulo 5 Variables individuales: números y caracteres","text":"Scripts usados:script05.R. Ver en https://github.com/dadosdelaplace/courses-ECI-2022/blob/main/scripts/script05.R Tras los primeros ejercicios planteados deberíamos saber más o menos usar R como una calculadora, definiendo variables que nos guardan números, como <- 1. Vamos ir más allá: ¿existen variables más allá de los números? En este capítulo vamos empezar familiarizarnos con los tipos de datos que podemos necesitar. Piensa por ejemplo en los datos guardados de una persona en cualquier registro:La edad será un número (sin decimales)Su peso o estatura será otro número (ahora con decimales).Su nombre será una cadena de texto.Su fecha de nacimiento será precisamente eso, un dato de tipo fecha.la pregunta «¿está usted soltero/?» la respuesta será lo que llamamos una variable binaria o lógica: una variable que solo puede valer TRUE (si está soltero/) y FALSE (en otro caso), guarada internamente como un 1 o 0.Existen más tipos de datos (por ejemplo, números complejos, listas, etc) pero con estos nos valdrá de momento.","code":""},{"path":"var-num.html","id":"numericas","chapter":"Capítulo 5 Variables individuales: números y caracteres","heading":"5.1 Variables numéricas (individuales)","text":"Probablemente el dato más sencillo y obvio de entender sean los datos numéricos, datos que ya hemos usado en nuestros primeros pasos como calculadora.En el código anterior, tanto como b, como la suma + b, son de tipo numérico, algo que podemos comprobar con la función class() (nos devuelve numeric).También podemos comprobar su naturaleza con typeof(), que nos devuelve la naturaleza del dato tal cual es guardada en R.Aunque es especialmente relevante profundizar en ello de momento, fíjate que ambas órdenes combinadas nos dicen que las variables son de tipo numérico pero concretamente de tipo double: dichas variables son entendidas internamente como números con decimales (aunque los veamos), lo que en matemáticas se llaman números reales (por curiosidad: el término double viene de lenguajes de programación antiguos como C, que significa «doble precisión», para indicarle que reserve 8 bytes - 64 bits - de memoria). Durante el curso distinguiremos entre distintos tipos de números, para nosotros serán siempre de clase numeric y de tipo double, pero podríamos definir números enteros o integer (sin decimales, ahorrando huecos en memoria).Con los datos numéricos podemos realizar todas las operaciones que se nos ocurriría hacer en una calculadora, como sumar (+), restar (-), multiplicar (*), dividir (/), raíz cuadrada (sqrt()), valor absoluto (abs()), elevar al cuadrado (^2), elevar al cubo (^3), etc.","code":"\na <- 1\nb <- 2\na + b## [1] 3\n# Clase de las variables\nclass(a)## [1] \"numeric\"\nclass(b)## [1] \"numeric\"\nclass(a + b)## [1] \"numeric\"\n# Tipología interna\ntypeof(a)## [1] \"double\"\ntypeof(b)## [1] \"double\"\ntypeof(a + b)## [1] \"double\"\n# Dato numérico (entero)\na <- 1L\nclass(a)## [1] \"integer\"\ntypeof(a)## [1] \"integer\"\n# Definimos dos variables numéricas\na <- 1\nb <- -2\n\n# Suma y resta\na + b## [1] -1\na - b## [1] 3\n# Multiplicación y división\na * b## [1] -2\na / b## [1] -0.5\n# Raíz cuadrada\nsqrt(a)## [1] 1\n# Potencias\na^2## [1] 1\nb^3## [1] -8"},{"path":"var-num.html","id":"caracter","chapter":"Capítulo 5 Variables individuales: números y caracteres","heading":"5.2 Variables de tipo caracter (texto)","text":"Pero solo de números viven los datos: imagina que además de la edad de una persona queremos guardar su nombre.Fíjate que ahora tenemos guardado en la variable nombre una variable de tipo character, es decir, una cadena de texto (conocido en otros lenguajes como string o char): caracteres entre comillas.Es importante el concepto de las comillas, ya que todo lo que vaya entre comillas será un texto: \"1\" representa un número, representa un texto (igual que \"hola\" o \"adios\")","code":"\nedad <- 32\nnombre <- \"Javier\"\n\nclass(nombre)## [1] \"character\"\ntypeof(nombre)## [1] \"character\""},{"path":"var-num.html","id":"nuestra-primera-función-paste","chapter":"Capítulo 5 Variables individuales: números y caracteres","heading":"5.3 Nuestra primera función: paste","text":"Las cadenas de texto son un tipo especial de dato, con los que obviamente podremos hacer operaciones aritméticas, pero si podemos hacer operaciones propias de cadenas de texto como puede ser la función paste(). Dicha función nos permite pegar dos cadenas de caracteres.Si queremos pegar cadenas de texto sin ningún tipo de caracter en medio (ahora tenemos un espacio), existe una forma más abreviada y limpia de ejecutar la orden, usando la función paste0()Cuando hemos ejecutado paste() y paste0() estamos ejecutando lo que se conoce como una función: una palabra reservada que representa un conjunto de órdenes encapsuladas, y que se ejecuta partir de unos argumentos de entrada. En este caso, solo hemos introducido como argumentos las cadenas de texto.¿Qué sucededería si queremos pegar cadenas de texto usando el punto o la coma o cualquier otro caracter En el caso de la función paste(), podremos hacer uso de lo que se conoce como argumento opcional llamado sep, que podemos darle un valor en concreto o dejarlo sin especificar. Lo que hará R será tomar su valor por defecto igual sep = \" \" (por defecto, la función paste() pega cadenas de texto con un espacio entre ellas porque en realidad ejecuta por defecto paste(..., sep = \" \")).Prueba ejecutar ? paste en consola para ver las opciones de la función en el panel de ayuda.","code":"\nnombre <- \"Javier\"\napellido <- \"Álvarez\"\npaste(nombre)## [1] \"Javier\"\npaste0(nombre, apellido) # todo junto sin espacio## [1] \"JavierÁlvarez\"\npaste(nombre, apellido, sep = \"\") # todo junto## [1] \"JavierÁlvarez\"\npaste(nombre, apellido, sep = \" \") # separados por un espacio## [1] \"Javier Álvarez\"\npaste(nombre, apellido, sep = \".\") # separados por un punto .## [1] \"Javier.Álvarez\"\npaste(nombre, apellido, sep = \",,\") # separados por dos comas.## [1] \"Javier,,Álvarez\""},{"path":"var-num.html","id":"nuestro-primer-paquete-glue","chapter":"Capítulo 5 Variables individuales: números y caracteres","heading":"5.4 Nuestro primer paquete: glue","text":"Otra forma más intuitiva de trabajar con textos y variables numéricas es usar el paquete glue, que nos permite pegar cadenas de texto variables numéricas de forma simbólica.Recuerda que install.packages() es solo necesario la primera que «compramos el libro»: nos bajamos una serie de archivos nuestro ordenador. Una vez que hemos comprado el libro, cada vez que queramos usarlo bastará con indicarle que nos traiga ese libro concreto con library().El paquete glue nos permite pegar de una forma mucho más legible cadenas de texto. Por ejemplo, supongamos que queremos construir la frase \"La edad es de X años\", donde X será la edad guardada e una variable.Con paste() podemos mezclar texto y números pero de una forma un poco aparatosa ya que debemos de ir cerrando la frase con comillas. Para evitarlo, glue() nos proporciona una forma más cómoda, sin salirnos de la cadena de texto, encapsulando las variables en llaves.También podemos hacer uso de dicha función sin tener los valores numéricos previamente guardados en variables.","code":"\ninstall.packages(\"glue\") # solo la primera vez\nlibrary(glue)\nedad <- 32\npaste(\"La edad es de\", edad, \"años\")## [1] \"La edad es de 32 años\"\nglue(\"La edad es de {edad} años\")## La edad es de 32 años\nunidades <- \"años\"\nglue(\"La edad es de {edad} {unidades}\")## La edad es de 32 años\n# Otra forma sin definir variables a priori\nglue(\"La edad es de {32} años\")## La edad es de 32 años"},{"path":"var-num.html","id":"manejando-textos-paquete-stringr","chapter":"Capítulo 5 Variables individuales: números y caracteres","heading":"5.5 Manejando textos: paquete stringr","text":"\nImagen/gráfica 5.1: Paquete stringr https://github.com/rstudio/cheatsheets/blob/main/strings.pdf\nEl paquete stringr nos proporciona un abanico de funciones y utilidades para poder trabajar con variables de tipo texto, permitiendo desde la búsqueda hasta la extracción de cadenas de texto dentro de la variable.Aunque es el objetivo de este manual introductorio adentrarnos en lo que se conoce como text mining o minería de textos, aquí una lista de funciones útiles que podemos encontrar en dicho paqueteLa función str_length() nos proporciona la longitud de una cadena de caracteres (reminder: un espacio cuenta como caracter).La función str_sub() nos permite extraer subcadenas de caracteres, indicándole solo la cadena sino las posiciones iniciales y finales.Dicha función se puede usar incluso para modificar subcadenasLa función str_dup() nos permite duplicar cadenas de caracteresLa función str_remove() nos permite eliminar subcadenas de caracteres (reminder: el espacio porque cuenta como caracter)La función str_trim() nos permite eliminar espacios en blanco que nos hayan quedado en el texto, algo bastante habitual cuando lees cadenas de caracteres de archivos o de internet.La función str_pad() nos permite añadir espacios en blancoLa función str_to_upper() nos permite convertir un texto mayúscula y str_to_title() pone en mayúscula solo la primera letra de cada palabra. La función str_to_lower() nos permite convertir un texto minúsculaLa función str_detect() nos permite detectar subcadenas de caracteresHaciendo además uso de expresiones regulares podemos afinar nuestra búsquedaLa función str_locate() nos permite localizar inicio y final donde se sitúan cadenas de caracteresLa función str_replace() nos permite reemplazar subcadenas en base un patrón pero solo lo hace con la primera que detecta. Con str_replace_all() podemos reemplazar todos","code":"\n# install.packages(\"stringr\") # solo la primera vez\nlibrary(stringr)\nstr_length(\"hola\")## [1] 4\nstr_length(\"espejo\")## [1] 6\nx <- \"ornitorrinco\"\nstr_sub(x, 3, 3) # tercer caracter## [1] \"n\"\nstr_sub(x, 3, 5) # del tercero al quinto (ambos inclusive)## [1] \"nit\"\nstr_sub(x, 2, -3) # del segundo al antepenúltimo caracter## [1] \"rnitorrin\"\nstr_sub(x, 3, 6) <- \"jeje\" # del tercero al sexto colamos un \"jeje\"\nx## [1] \"orjejerrinco\"\nstr_sub(\"ja\", 2) # duplicamos 2 veces \"ja\"## [1] \"a\"\nstr_sub(\"ja\", 5) # duplicamos 5 veces \"ja\"## [1] \"\"\n# eliminamos de la variable la subcadena o patrón \"DNI:\"\nstr_remove(\"DNI: 41378292\", \"DNI:\") # nos deja ese espacio## [1] \" 41378292\"\n# eliminamos de la variable la subcadena o patrón \"DNI:\"\nx <- str_remove(\"DNI: 41378292\", \"DNI:\") # nos deja ese espacio\nstr_trim(x) # eliminamos ese espacio## [1] \"41378292\"\nstr_trim(\"  calle mayor \", side = \"left\") # solo los de la izquierda## [1] \"calle mayor \"\nstr_trim(\"  calle mayor \", side = \"right\") # solo los de la derecha## [1] \"  calle mayor\"\nstr_trim(\"  calle mayor \", side = \"both\") # ambos (pro defecto)## [1] \"calle mayor\"\nx <- \"mochila\"\n# un espacio en la izquierda (cadena resultante de longitud dada)\nstr_pad(x, 8) # longitud 8 ==> mochila tiene 7, así que añade un espacio## [1] \" mochila\"\nstr_pad(x, 15) # longitud 15 ==> mochila tiene 7, así que añade 8 espacios## [1] \"        mochila\"\nstr_pad(x, 12, \"right\") # a la derecha## [1] \"mochila     \"\nstr_pad(x, 13, \"both\") # a ambos lados## [1] \"   mochila   \"\nx <- \"Hola, me llamo Javi\"\nstr_to_upper(x)## [1] \"HOLA, ME LLAMO JAVI\"\nstr_to_title(x)## [1] \"Hola, Me Llamo Javi\"\nstr_to_lower(\"¡PARA! No puedes pasar\")## [1] \"¡para! no puedes pasar\"\nsubcadena <- \"ministerio\"\nx <- \"En un documento del Ministerio del Interior...\"\nstr_detect(x, subcadena) # no lo detecta porque se sensitive a mayúsculas## [1] FALSE\nstr_detect(str_to_lower(x), subcadena)## [1] TRUE\ntelefono <- \"([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})\"\nx <- \"mi telefono es 219 733 8965\"\ny <- \"mi telefono es 329-293-8753\"\nz <- \"mi telefono es 32-293-87\"\nstr_detect(x, telefono)## [1] TRUE\nstr_detect(y, telefono)## [1] TRUE\nstr_detect(z, telefono)## [1] FALSE\nstr_locate(\"hola me llamo Javi\", \"Javi\")##      start end\n## [1,]    15  18\nstr_replace(\"la vida del oso panda\", \"panda\", \"pardo\") # reemplazamos panda por pardo## [1] \"la vida del oso pardo\"\nstr_replace(\"la vida del oso pardo y el oso polar\", \"oso\", \"delfín\")## [1] \"la vida del delfín pardo y el oso polar\"\nstr_replace_all(\"la vida del oso pardo y el oso polar\", \"oso\", \"delfín\")## [1] \"la vida del delfín pardo y el delfín polar\""},{"path":"var-num.html","id":"consejos-2","chapter":"Capítulo 5 Variables individuales: números y caracteres","heading":"5.6 Consejos","text":"CONSEJOS Recuperar un comando y autocompletarSi haces click con el ratón en la consola y pulsas la flecha «arriba» del teclado, te irá apareciendo todo el historial de órdenes ejecutadas. Es una manera de ahorrar tiempo para ejecutar órdenes similares las ya ejecutadas. Si empiezas escribir el nombre de una variable pero te acuerdas exactamente de su nombre, pulsando tabulador te autocompletará solo. Convertir tipos de datosA veces la lectura de variables numéricas de nuestros archivos puede hacer que un número, por ejemplo 1, sea leído como la cadena de texto \"1\", con la que podemos operar como un número. Las funciones .numeric(), o .character() nos permiten convertir una variable en tipo numérico, caracter o lógico, respectivamente. ","code":"\n\"1\" + 1## Error in \"1\" + 1: argumento no-numérico para operador binario\nas.numeric(\"1\") + 1## [1] 2\nas.character(1)## [1] \"1\""},{"path":"var-num.html","id":"ejercicios-2","chapter":"Capítulo 5 Variables individuales: números y caracteres","heading":"5.7 📝 Ejercicios","text":"(haz click en las flechas para ver soluciones)📝Ejercicio 1: define una variable edad que guarde tu edad y otra nombre con tu nombre. Solución: 📝Ejercicio 2: define otra variable con tus apellidos y junta las variables nombre y apellidos en una sola cadena de texto que guardes en nombre_completo. Solución: 📝Ejercicio 3: define dos variables numéricas y realiza la suma de ambas. Obtén con class() la clase de dicha variable suma Solución: 📝Ejercicio 4: construye una frase que diga «Hola, llamo … y tengo … años». Solución: 📝Ejercicio 5: define una cadena de texto con \"mi código postal es 28045\". Calcula la longitud de la cadena y extrae la subcadena del lugar 3 al 17 con str_sub() (guarda dicha subcadena en una variable y) Solución: 📝Ejercicio 6: con la subcadena y del ejercicio anterior, elimina los espacios solo de la izquierda y convierte mayúsculas Solución: 📝Ejercicio 7: con la cadena x original, sustituye la subcadena “código postal” por “cp”.Solución: ","code":"\nedad <- 32 # tipo numeric\nnombre <- \"Javier\" # tipo caracter\n\nedad## [1] 32\nnombre## [1] \"Javier\"\n# Apellidos\napellidos <- \"Álvarez Liébana\"\n\n# Pegamos\nnombre_completo <- glue(\"{nombre} {apellidos}\")\nnombre_completo## Javier Álvarez Liébana\n# Otra forma\nnombre_completo <- paste(nombre, apellidos)\nnombre_completo## [1] \"Javier Álvarez Liébana\"\n# Definimos dos variables numéricas\na <- 1\nb <- -2\n\na + b## [1] -1\nclass(a + b)## [1] \"numeric\"\nedad <- 32\nglue(\"Hola, me llamo {nombre_completo} y tengo {edad} años\")## Hola, me llamo Javier Álvarez Liébana y tengo 32 años\nx <- \"mi código postal es 28045\"\ny <- str_sub(x, 3, 17)\ny## [1] \" código postal \"\n# Todo en una línea\nstr_to_upper(str_trim(y, side = \"left\"))## [1] \"CÓDIGO POSTAL \"\n# Paso a paso\nz <- str_trim(y, side = \"left\")\nstr_to_upper(z)## [1] \"CÓDIGO POSTAL \"\nstr_sub(x, 4, 16) <- \"cp\""},{"path":"vectores.html","id":"vectores","chapter":"Capítulo 6 Vectores","heading":"Capítulo 6 Vectores","text":"Scripts usados:script06.R. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script06.RHemos visto ya como poder almacenar elementos individuales como la edad de una persona (edad <- 32) o su nombre (nombre <- \"Javi\"). ¿Y si en lugar de querer almacenar un solo elemento, por ejemplo , tenemos una colección de elementos (las edades de toda nuestra familia, por ejemplo)?En este capítulo vamos ver un clásico de cualquier lenguaje de programación: los vectores o arrays, que son más que una concatenación de elementos del mismo tipo. De hecho un número individual (por ejemplo, x <- 1) es en realidad un vector de longitud uno (un solo elemento). Es el tipo de dato que más vas usar ya que las columnas de cualquier tabla funcionarán como una concatenación de valores.Un vector es lo que solemos representar como \\(\\overrightarrow{x} = \\left[1, 2, 3 \\right]\\) en matemáticas, pero te preocupes si nunca visto esta forma de representarlos. Vamos empezar de cero.","code":""},{"path":"vectores.html","id":"vectores-numéricos","chapter":"Capítulo 6 Vectores","heading":"6.1 Vectores numéricos","text":"La forma más sencilla de crear un vector en R es con el comando c() (para acordarte: letra c de Concatenar), y basta con introducir sus elementos entre paréntesis, y separados por comas. Por ejemplo, supongamos que queremos guardar la edad de 4 personas (como si tuvieramos una columna edad en una tabla de 4 filas).Como ves ahora en el environment (el entorno, arriba la derecha) tenemos una colección de elementos guardada, con cuatro elementos en concreto, almacenados en una misma variable edades.\nImagen/gráfica 6.1: Vector en el enviroment\nLa longitud de un vector se puede calcular con el comando length() (nos devolverá el número de elementos de la variable que le pasemos como argumento).Además podemos concatenar su vez vectores (uno tras otro): vamos concatenar el vector edades consigo mismo, y añadiéndole al final un 8.Esta última concatenación lo que nos ha dado son, primero, los cuatro elementos que ya teníamos en edades, después de nuevo los cuatro elementos, y por último un 8.","code":"\nedades <- c(32, 27, 60, 61)\nedades## [1] 32 27 60 61\nlength(edades)## [1] 4\nc(edades, edades, 8)## [1] 32 27 60 61 32 27 60 61  8"},{"path":"vectores.html","id":"secuencias-numéricas-con-un-patrón","chapter":"Capítulo 6 Vectores","heading":"6.2 Secuencias numéricas con un patrón","text":"En muchas ocasiones querremos crear vectores numéricos de una forma mucho más rápida. Supongamos que queremos un vector que nos almacene el número del mes, desde el 1 hasta el 31. Si construyéramos el vector como antes, tendríamos que ejecutar el comando c(1, 2, 3, 4, 5, ...) hasta llegar al número 31. ¿Un poco largo, ?Hay un atajo: el comando seq() nos permite crear una secuencia desde un elemento inicial hasta un elemento final, avanzando de uno en uno.Es importante que perdamos el foco: programar es similar escribir en un idioma, por lo que si hay algo que se puede decir de una forma más limpia y que se entienda mejor, ¿por qué usarlo? Siempre que queramos definir secuencias entre dos números naturales (por ejemplo, entre 1 y un valor n), cuya distancia entre elementos consecutivos sea uno, el comando 1:n nos devuelve lo mismo que la orden seq(1, n). Además, si el elemento inicial es mayor que el final, R entenderá solo que la secuencia la queremos decreciente. También podemos definir otro tipo de distancia entre dos elementos consecutivos (distancia conocida como paso de discretización), por ejemplo de 0.5 en 0.5, o de 1.7 en 1.7Otras veces nos interesará definir una secuencia entre un valor inicial y un valor final, pero nos dará igual la distancia entre cada elemento: solo nos importa que tenga un número concreto de elementos (y que sea R el que decida la distancia entre elementos consecutivos para conseguirlo). Otro atajo que podemos usar para definir secuencias de números con un patrón es definir vectores de elementos repetidos, por ejemplo un vector lleno de ceros. La función rep() nos permite repetir un elemento un número fijado de veces.solo podemos repetir un número sino que podemos repetir vectores enteros.Esa repetición además podemos definirla también de forma intercalada: en lugar de repetir c(0, 1, 2) cuatro veces seguidas, queremos cuatro 0, después cuatro 1, y después cuatro 2.","code":"\nseq(1, 31) # secuencia desde 1 hasta 31 de uno en uno##  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n## [26] 26 27 28 29 30 31\nn <- 31\n1:n # secuencia desde 1 hasta n (31) de uno en uno##  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n## [26] 26 27 28 29 30 31\nn:1 # secuencia decreciente##  [1] 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10  9  8  7\n## [26]  6  5  4  3  2  1\nseq(1, 10, by = 0.5) # secuencia desde 1 a 10 de 0.5 en 0.5##  [1]  1.0  1.5  2.0  2.5  3.0  3.5  4.0  4.5  5.0  5.5  6.0  6.5  7.0  7.5  8.0\n## [16]  8.5  9.0  9.5 10.0\nseq(1, 21, by = 1.7) # secuencia desde 1 a 21 de 1.7 en 1.7##  [1]  1.0  2.7  4.4  6.1  7.8  9.5 11.2 12.9 14.6 16.3 18.0 19.7\nseq(1, 50, l = 11) # secuencia desde 1 a 50 de longitud 11##  [1]  1.0  5.9 10.8 15.7 20.6 25.5 30.4 35.3 40.2 45.1 50.0\nseq(1, 50, l = 8) # secuencia desde 1 a 50 de longitud 8## [1]  1  8 15 22 29 36 43 50\nrep(0, 7) # vector de 7 ceros## [1] 0 0 0 0 0 0 0\nrep(c(0, 1, 2), 4) # repetimos el vector c(0, 1, 2) 4 veces##  [1] 0 1 2 0 1 2 0 1 2 0 1 2\nrep(c(0, 1, 2), each = 4) # cuatro 0, luego cuatro 1, luego cuatro 2##  [1] 0 0 0 0 1 1 1 1 2 2 2 2"},{"path":"vectores.html","id":"vectores-de-caracteres-texto","chapter":"Capítulo 6 Vectores","heading":"6.3 Vectores de caracteres (texto)","text":"Un error común es asociar el concepto de vectores solo números: un vector es una colección o concatenación de elementos del mismo tipo, pero tienen porque ser necesariamente números. Vamos crear una frase de ejemplo, un vector de 4 elementos de tipo texto (en R se llaman char): \"Mi\", \"nombre\", \"es\" \"Javier\".Como antes, las variables de tipo char o character van entre comillas dobles, ya que es un cadena de texto.Fíjate la diferencia entre tenerlo guardado en un vector o tenerlo como una cadena unidaCuando aplicamos la función str_length() un vector de caracteres, del paquete stringr que hemos visto en el tema anterior, la función se aplica CADA ELEMENTO del vector (dándonos un vector de longitudes, de cada cadena que tenemos concatenada en el vector). Lo veremos con más detalle en el próximo tema. Ya tenemos nuestro primer vector de texto de longitud 4, y en cada elemento tenemos un texto. Cuando usamos la función paste() con variables diferentes, usábamos sep = ... para decidir el caracter con el que pegamos dichas cadenas texto. Cuando la función paste() la aplicamos un vector de caracteres, decidiremos que caracter queremos que vaya entre palabra con el argumento collapse =.Ahora que sabemos lo que es un vector de números, por ejemplo el vector 1:7 (el conjunto de naturales desde el 1 hasta el 7), podemos definir cadenas de texto que compartan por ejemplo un prefijo (persona_1, persona_2, …)De igual manera podemos hacer uso del ya conocido paquete glue, combinando cadenas de texto y vectores numéricos, obteniendo vectores de frases.","code":"\nmi_nombre <- c(\"Mi\", \"nombre\", \"es\", \"Javier\")\nmi_nombre## [1] \"Mi\"     \"nombre\" \"es\"     \"Javier\"\nvariable <- \"Mi nombre es Javier\"\nclass(variable)## [1] \"character\"\nstr_length(variable)## [1] 19\nvector <- c(\"Mi\", \"nombre\", \"es\", \"Javier\")\nclass(vector)## [1] \"character\"\nstr_length(vector)## [1] 2 6 2 6\nstr_to_lower(vector)## [1] \"mi\"     \"nombre\" \"es\"     \"javier\"\nstr_detect(vector, \"i\") # TRUE --> si tiene letra i## [1]  TRUE FALSE FALSE  TRUE\npaste(mi_nombre, collapse = \"\") # todo junto## [1] \"MinombreesJavier\"\npaste(mi_nombre, collapse = \" \") # separados por un espacio## [1] \"Mi nombre es Javier\"\npaste(mi_nombre, collapse = \".\") # separados por un punto .## [1] \"Mi.nombre.es.Javier\"\npaste0(mi_nombre) # todo junto sin nada separando## [1] \"Mi\"     \"nombre\" \"es\"     \"Javier\"\npaste0(\"persona\", 1:7) # a la palabra «persona» le pegamos los números del 1 al 7## [1] \"persona1\" \"persona2\" \"persona3\" \"persona4\" \"persona5\" \"persona6\" \"persona7\"\npaste(\"persona\", 1:7, sep = \"_\") # separado por una barra baja## [1] \"persona_1\" \"persona_2\" \"persona_3\" \"persona_4\" \"persona_5\" \"persona_6\"\n## [7] \"persona_7\"\nlibrary(glue)\nedad <- 10:13 # edades\nglue(\"La edad es de {edad} años\")## La edad es de 10 años\n## La edad es de 11 años\n## La edad es de 12 años\n## La edad es de 13 años\n# Otra forma sin definir variables a priori\nglue(\"La edad es de {10:13} años\")## La edad es de 10 años\n## La edad es de 11 años\n## La edad es de 12 años\n## La edad es de 13 años"},{"path":"vectores.html","id":"vectores-lógicos-truefalse","chapter":"Capítulo 6 Vectores","heading":"6.4 Vectores lógicos (TRUE/FALSE)","text":"[X] Variables numéricas (individuales)\n[X] Vectores de números\n[X] Vectores de caracteres\n[ ] Vectores lógicosVeamos un último tipo de vectores muy importante en todo lenguaje de programación: los vectores de valores lógicos. Un valor lógico puede tomar tres valores:TRUE (guardado internamente como un 1).FALSE (guardado internamente como un 0).NA (dato ausente, son las siglas de available, cuando pretendemos aplicar una comparación un dato ya de por si ausente).Los valores lógicos suelen ser resultado de evaluar condiciones lógicas, de hacerle preguntas los datos. Por ejemplo, imaginemos que definimos un vector de temperaturas x <- c(15, 20, 23, 31, 27, 7, 29, 10). ¿Qué días hizo menos de 22 grados? Basta con que ejecutemos la orden x < 22, que nos devolverá TRUE o FALSE en cada hueco, en función de si cumple (TRUE) o (FALSE) la condición pedida.El primer, segundo, sexto y octavo día, la temperatura fue inferior (estrictamente) 22, de ahí que en el primer, segundo, sexto y octavo día elemento aparezca un TRUE y en el resto un FALSE. Es importante recordar que al evaluar una condición lógica sobre un vector, la salida sigue siendo un vector de la misma longitud pero con valores lógicos.Dicha condición lógica puede hacerse con otros operadores como <= (menor o igual), > (mayor) o >= (mayor igual).También podemos comparar si es igual otro elemento, para lo que usaremos el operador ==, pudiendo usar también su opuesto != («distinto de»).Si tuviéramos un dato ausente (por error del aparato ese día), la condición evaluada también sería ausenteLas condiciones pueden ser combinadas, principalmente de dos maneras:Intersección: todas las condiciones concatenadas se deben cumplir (conjunción y, operador &) para devolver un TRUE.Intersección: todas las condiciones concatenadas se deben cumplir (conjunción y, operador &) para devolver un TRUE.Unión: basta con que una de las condiciones concatenadas se cumpla (conjunción o, operador |) para devolver un TRUE.Unión: basta con que una de las condiciones concatenadas se cumpla (conjunción o, operador |) para devolver un TRUE.Por ejemplo, vamos calcular qué elementos del vector de temperaturas sean menores que 30 pero (y) mayores que 15Fíjate lo que sucede si lo pedimos como intersección (ambas deben cumplirse) sino como unión (basta con que alguna se cumple)","code":"\nx <- c(15, 20, 23, 31, 27, 7, 29, 10)\nx < 22## [1]  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE\nx <= 22## [1]  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE\nx > 30## [1] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\nx >= 15## [1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE\nx == 15## [1]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\nx != 15## [1] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\ny <- c(15, 20, NA, 31, 27, 7, 29, 10)\ny < 22## [1]  TRUE  TRUE    NA FALSE FALSE  TRUE FALSE  TRUE\nx < 30 & x > 15## [1] FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE FALSE\nx < 30 | x > 15## [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"},{"path":"vectores.html","id":"consejos-3","chapter":"Capítulo 6 Vectores","heading":"6.5 Consejos","text":"CONSEJOS Expresiones regularesDentro del entorno de paquetes tidyverse, el paquete stringr permite un manejo más complejo de cadenas de texo (como el uso de expresiones regulares).\nImagen/gráfica 6.2: Paquete stringr para manejar cadenas de texto más complejas\n ","code":""},{"path":"vectores.html","id":"ejercicios-3","chapter":"Capítulo 6 Vectores","heading":"6.6 📝 Ejercicios","text":"(haz click en las flechas para ver soluciones)📝Ejercicio 1: modifica el código inferior para crear un vector de nombre vector_num que contenga los números 1, 5 y -7.Solución: 📝Ejercicio 2: define un vector que contenga los números 1, 10, -1 y 2, y guárdalo en una variable llamada vector_num. Solución: 📝Ejercicio 3: obtén la longitud del vector anterior vector_num. Solución: 📝Ejercicio 4: crea un vector con las palabras “Hola”, “”, “llamo” (y tu nombre y apellidos), y pega luego sus elementos de forma que la frase esté correctamente escrita en castellano. Tras hacerlo, añade “y tengo 30 años”. Solución: 📝Ejercicio 5: el código inferior crea una secuencia de números, que empieza en -1, que acaba en 32, y que va saltando de 2 en 2. Modíficalo para que haga el salto de 3 en 3 y guárdalo en una variable llamada secuenciaSolución: 📝Ejercicio 6: crea una secuencia de números, que empiece en -1, que acabe en 32, y que tenga longitud 12. Solución: 📝Ejercicio 7: crea una secuencia que empiece en 1 y recorra todos los naturales hasta el 10. Después crea otra secuencia de longitud 7 que todos los números sean 3. Solución: 📝Ejercicio 8: crea una secuencia que repita 5 veces el patrón 1, 2, 3. Después crea otra que repita dicho patrón pero de forma intercalada, con 5 veces 1, después 5 veces 2 y después 5 veces 3.Solución: 📝Ejercicio 9: crea una variable x <- c(\"oso pardo\", \"oso polar\", \"ballena\", \"grillo\", \"oso panda\", \"perro\"). Haciendo uso de str_length() calcula la longitud de cada cadena de texto. Haciendo uso de str_detect() detecta los animales que son un oso.Solución:","code":"\n# Vector de números\nvector_num <- c(1, 5, -7)\nvector_num## [1]  1  5 -7\n# Vector de números\nvector_num <- c(1)\nvector_num\n# Vector de números\nvector_num <- c(1, 10, -1, 2)\nvector_num## [1]  1 10 -1  2\n# Longitud del vector\nlength(vector_num)## [1] 4\n# Definiendo el vector\nvector_char <- c(\"Hola\", \"me\", \"llamo\", \"Javier\",\n                 \"Álvarez\", \"Liébana\")\n\n# Pegamos\nfrase <- paste(vector_char, collapse = \" \")\nfrase## [1] \"Hola me llamo Javier Álvarez Liébana\"\n# Añadimos frase\nglue(\"{frase} y tengo 30 años.\")## Hola me llamo Javier Álvarez Liébana y tengo 30 años.\n# Otra forma\npaste0(frase, \" y tengo 30 años.\")## [1] \"Hola me llamo Javier Álvarez Liébana y tengo 30 años.\"\n# Otra forma\npaste(frase, \"y tengo 30 años.\")## [1] \"Hola me llamo Javier Álvarez Liébana y tengo 30 años.\"\nsecuencia <- seq(-1, 32, by = 3)\nsecuencia##  [1] -1  2  5  8 11 14 17 20 23 26 29 32\nlength(secuencia) # longitud de la secuencia## [1] 12\nseq(-1, 32, by = 2)\nsecuencia <- seq(-1, 32, l = 12)\nsecuencia##  [1] -1  2  5  8 11 14 17 20 23 26 29 32\nlength(secuencia) # longitud de la secuencia## [1] 12\n1:10##  [1]  1  2  3  4  5  6  7  8  9 10\nrep(3, 7) # secuencia repetida## [1] 3 3 3 3 3 3 3\nrep(c(1, 2, 3), 5) # repetimos patrón (1, 2, 3) 5 veces##  [1] 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\nrep(c(1, 2, 3), each = 5) # repetimos patrón alternado##  [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3\nx <- c(\"oso pardo\", \"Oso polar\", \"ballena\", \"grillo\", \"OSO panda\", \"perro\")\nstr_length(x) # longitud## [1] 9 9 7 6 9 5\n# OJO! antes hay que pasar todo a mayúscula o minúscula, nos da igual que sea oso, OSO, Oso, etc\nstr_detect(str_to_lower(x), \"oso\") ## [1]  TRUE  TRUE FALSE FALSE  TRUE FALSE"},{"path":"operacionesvectores.html","id":"operacionesvectores","chapter":"Capítulo 7 Operaciones con vectores","heading":"Capítulo 7 Operaciones con vectores","text":"Scripts usados:script07.R. Ver en https://github.com/dadosdelaplace/courses-ECI-2022/blob/main/scripts/script07.R","code":""},{"path":"operacionesvectores.html","id":"vectores-numéricos-1","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.1 Vectores numéricos","text":"","code":""},{"path":"operacionesvectores.html","id":"operaciones-aritméticas","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.1.1 Operaciones aritméticas","text":"Hemos dicho ya que un número es un vector de longitud 1, así que toda operación aritmética (suma, resta, multiplicación, etc) que podamos hacer con un número la vamos poder hacer con un vector de números. Si hacemos por ejemplo la operación 2 * x, siendo x un vector, lo que sucederá es que la operación se realizará en CADA ELEMENTO del vector. Esto es una ventaja enorme ya podremos escribir una sola línea de código pero realizar operaciones en 10, 20, 1000 o 100000 elementos (tantos como tenga el vector).El resultado es por tanto otro vector. De la misma manera sucede si sumamos o restamos una constante.Los vectores también pueden interactuar entre ellos, así que podemos definir sumas de vectores, como x + y, con y <- c(1, 3, 5) (por ejemplo), raíces cuadradas sqrt(x) o elevar cada elemento al cuadrado x^2. En R, salvo que especifiquemos lo contrario, toda operación ARITMÉTICA que hagas un vector será elemento elemento. Esto último es bastante importante que se te olvide ya que en otros lenguajes siempre es así. Dado que la operación (por ejemplo, una suma) se realiza elemento elemento, ¿qué sucederá si sumamos dos vectores de distinta longitud? Prueba definir un vector z con los 4 primeros impares, e intentar hacer la suma x + z (un vector de longitud 3 más un vector de longitud 4).R intenta molestarte lo menos posible, así que lo que hace es reciclar elementos: si tiene un vector de 4 elementos y le intentas sumar uno de 3 elementos, lo que hará será reciclar elementos del vector con menor longitud: hará 1 + 2, 3 + 4, 5 + 6 pero… 7 + 2 (vuelve al primero). Como hemos comentado anteriormente, los valores lógicosTRUE/FALSE son guardados internamente como 0/1 por lo que podemos usar operaciones aritméticas con ellos. Por ejemplo, si queremos averiguar el número de elementos de un vector que cumplen una condición lógica (por ejemplo, < 3), los que lo hagan tendrán asignado un 1 y los que un 0, por lo que basta con sumar dicho vector lógico para obtener el número de elementos que cumplen dicha condición (elementos que son TRUE).","code":"\n# Multiplicamos por 2 a CADA ELEMENTO del vector\nx <- c(2, 4, 6)\n2 * x## [1]  4  8 12\n# Sumamos 3 a CADA ELEMENTO DEL VECTOR\nx + 3## [1] 5 7 9\n# Restamos 5 a CADA ELEMENTO DEL VECTOR\nx - 5## [1] -3 -1  1\ny <- c(1, 3, 5)\nx + y # suma de vectores ## [1]  3  7 11\nsqrt(x) # Hacemos la raíz cuadrada de CADA ELEMENTO DEL VECTOR## [1] 1.414214 2.000000 2.449490\nx^2 # Elevamos al cuadrado CADA ELEMENTO DEL VECTOR## [1]  4 16 36\nz <- c(1, 3, 5, 7)\nx + z## [1]  3  7 11  9\nsum(x < 3) # sumamos el vector de TRUE/FALSE --> número de valores TRUE## [1] 1"},{"path":"operacionesvectores.html","id":"operaciones-estadísticas","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.1.2 Operaciones estadísticas","text":"Al igual que podemos ejecutar operaciones aritméticas, podemos realizar también operaciones estadísticas con los vectores, como calcular su suma (sum()), su media (mean()), su mediana (median()) o su suma acumulada (cumsum() cada elemento lo acumula al anterior).Hagamos antes un breve repaso de algunos términos estadísticos:Media: medida de centralización que consiste en sumar todos los elementos y dividirlos entre la cantidad de elementos sumados. pesar de ser la más conocida, la media es muy poco robusta: dado un conjunto, si se introducen valores atípicos o outliers (valores muy grandes o muy pequeños), la media se perturbar con mucha facilidad (por ejemplo, el salario medio en un país con mucha desigualdad tiene valor estadístico ya que está perturbado por las altas fortunas). Dado un vector de valores \\(x = (x_1, \\ldots, x_n)\\), se denota como \\(\\overline{x}\\).\\[\\overline{x} = \\frac{\\displaystyle \\sum_{=1}^{n}x_i}{n}\\]Mediana: medida de centralización que consiste en, tras ordenar los datos de menor mayor, quedarnos con el valor que ocupa el medio (deja tantos números por debajo como por encima). Más robusta que la media aunque menos que la moda. Dado un vector de valores \\(x = (x_1, \\ldots, x_n)\\), se denota como \\(Me_x\\).\\[Me_x = \\displaystyle \\arg \\min_{x_i} \\left\\lbrace F_i > 0.5 \\right\\rbrace, \\quad F_i = \\frac{\\#\\left\\lbrace x_j \\leq x_i \\right\\rbrace}{n}\\]Moda: medida de centralización que consiste en encontrar el valor más repetido (el valor trending). Es la medida de centralización más robusta. Dado un vector de valores \\(x = (x_1, \\ldots, x_n)\\), se denota como \\(Mo_x\\).\\[Mo_x = \\displaystyle \\arg \\max_{x_i} f_i  , \\quad f_i = \\frac{\\#\\left\\lbrace x_j = x_i \\right\\rbrace}{n}\\] aquí un ejemplo de algunas funciones estadísticas útilesOtra operación útil en estadística es calcular los percentiles con la función quantiles().Recuerda que en R algunas funciones tienen argumentos por defecto, argumentos que necesitan ser asignados un valor priori. En el ejemplo de calcular los percentiles con quantile(), hay un argumento por defecto (con un valor ya asignado sino se especifica lo contrario) que es probs = c(0, 0.25, 0.5, 0.75, 1). Pero dicho argumento por defecto puede ser cambiado, por ejemplo, para sacar los percentiles 15%-30%-70%-90%.","code":"\nsum(y) # suma## [1] 9\nmean(y) # media## [1] 3\nmedian(y) # mediana## [1] 3\ncumsum(y) # suma acumulada## [1] 1 4 9\ny <- c(1, 2, 5, 5, 8, 9, 10, 10, 10, 11, 13, 15, 20, 23, 24, 29)\nquantile(y) # Percentiles por defecto: cuartiles (0%-25%-50%-75%-100%)##    0%   25%   50%   75%  100% \n##  1.00  7.25 10.00 16.25 29.00\ny <- c(1, 2, 5, 5, 8, 9, 10, 10, 10, 11, 13, 15, 20, 23, 24, 29)\nquantile(y, probs = c(0.15, 0.3, 0.7, 0.9)) # Percentiles p15, p30, p70 y p90##  15%  30%  70%  90% \n##  5.0  8.5 14.0 23.5"},{"path":"operacionesvectores.html","id":"operacionesausentes","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.1.3 Operaciones con ausentes","text":"Imagina que tenemos un vector de temperaturas pero varios de los días el aparato de medición funcionaba, por lo que tenemos un ausente NA.Dado que hay días que tenemos disponibles, la suma de todos los días tampoco la podemos conocer (salvo que obviemos los días donde tenemos dato). Para evitar que un dato ausente en nuestros datos nos impida hacer ciertas operaciones, en muchas funciones de R podemos añadir el argumento na.rm = TRUE: primero elimina los datos ausentes, y luego ejecuta la función.","code":"\nx <- c(21, NA, 13, NA, NA, 25, 36, 17, 19, 5)\nsum(x)## [1] NA\n# eliminando datos ausentes antes de aplicar la función\nsum(x, na.rm = TRUE) ## [1] 136\nmean(x, na.rm = TRUE)## [1] 19.42857"},{"path":"operacionesvectores.html","id":"seleccionar-elementos","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.2 Seleccionar elementos","text":"Ya sabemos definir variables que sean vectores (recuerda: colección de valores del mismo tipo). ¿Y si del vector original queremos EXTRAER UN SUBCONJUNTO del mismo, por ejemplo, los primeros 10 elementos?R tiene varias formas de hacer esto pero la más sencilla es entendiendo que si yo quiero acceder al elemento -ésimo de un vector, deberé usar el operador de selección []. Veamos un ejemplo: definimos las edades de cinco personas y queremos saber la edad de la persona que ocupa el tercer lugar.Un número es más que un vector de longitud uno, así que esta operación también la podemos aplicar usando un vector de índices seleccionar, de forma que le podemos indicar simultaneamente que valores que queremos (por ejemplo, al tercer y cuarto elemento de nuestras edades).Esta lógica para acceder elementos de vectores también sirve para nuestros vectores de caracteres.Para acceder al último elemento de un vector podemos pasarle como índice la longitud de dicho vector (si el vector tiene longitud 6, el último elemento ocupará el lugar 6).Otras veces querremos seleccionar un elemento en concreto sino filtrar algunos elementos en concreto y extraerlos, eliminarlos, para lo cual deberemos repetir la misma operación pero con el signo - delante: el operador [-] selecciona el elemento -ésimo del vector sino que lo elimina en nuestro filtro. Sin embargo, lo habitual es que dicho filtro lo hagamos en base una condición lógica. Supongamos que edades_1 <- c(7, 20, 18, 3, 19, 9, 13, 3, 45) e edades_2 <- c(17, 21, 58, 33, 15, 59, 13, 1, 45) son las edades de dos grupos de personas y que queremos quedarnos solo con los mayores edad. ¿Tenemos que andar averiguando en que posición se encuentran para luego seleccionarlos? , vamos seleccionar los elementos que cumplen una condición dada.Lo que hemos hecho ha sido pasar como índices seleccionar un vector lógico TRUE/FALSE: solo filtrará los lugares donde se guarde un TRUE, aquellos que cumplen la condición lógica introducida.Esto también nos puede servir para limpiar de datos ausentes, combinando la función .na(), que nos localiza el lugar que ocupan los ausentes, con el operador !, que lo que hace es negar el valor lógico que venga detrás.También podemos probar combinar condiciones lógicas para nuestra selección.Como ves, si un valor está ausente (NA), la evaluación de una condición lógica sobre él (mayor o menor de 18 años) nos seguirá devolviendo NA en dicho lugar ","code":"\nedades <- c(20, 30, 32, NA, 61)\nedades[3] # accedemos a la edad de la tercera persona en la lista## [1] 32\nedades[4] # accedemos a la edad de la cuarta persona (que no la tenemos guardada)## [1] NA\nedades[c(3, 4)] # queremos acceder a la vez al tercer y cuarto elemento## [1] 32 NA\ny <- c(\"hola\", \"qué\", \"tal\", \"todo\", \"ok\", \"?\")\ny[1:2] # Solo queremos acceder a los elementos en la posición 1 y 2## [1] \"hola\" \"qué\"\n# Accedemos a los elementos en la posición 1, 2 y además el\n# que ocupa la última posición\ny[c(1:2, length(y))] ## [1] \"hola\" \"qué\"  \"?\"\ny## [1] \"hola\" \"qué\"  \"tal\"  \"todo\" \"ok\"   \"?\"\ny[-2] # Nos muestra todo y salvo el elemento que ocupa la segunda posición## [1] \"hola\" \"tal\"  \"todo\" \"ok\"   \"?\"\nedades_1 <- c(7, 20, 18, 3, 19, 9, 13, 3, 45)\nedades_2 <- c(17, 21, 58, 33, 15, 59, 13, 1, 45)\nedades_1[edades_1 >= 18] # mayores de 18 años del conjunto x## [1] 20 18 19 45\nedades_2[edades_2 >= 18] # mayores de 18 años del conjunto y## [1] 21 58 33 59 45\nedades_1 >= 18 # donde haya TRUE, lo seleccionará## [1] FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE\nedades_1[edades_1 >= 18] # mayores de 18 años del conjunto x## [1] 20 18 19 45\nx <- c(7, NA, 20, 3, 19, 21, 25, 80, NA)\nx[is.na(x)] # solo valores ausentes## [1] NA NA\nx[!is.na(x)] # sin valores ausentes: ! es el símbolo de la negación## [1]  7 20  3 19 21 25 80\nx[x >= 18 & x <= 25] # los valores que cumplen ambas (&): entre 18 y 25 años## [1] NA 20 19 21 25 NA"},{"path":"operacionesvectores.html","id":"which","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.2.1 which","text":"Hemos visto como seleccionar elementos de un vector que cumplen una condición, para veces queremos el elemento en sí, sino el lugar que ocupa: ¿qué valores de un vector cumplen una condición lógica, qué lugar ocupan? Para obtener dicho índice tenemos nuestro disposición la función (), que nos devuelve el elemento en sí sino su lugar.Esta función es muy útil especialmente cuando queremos averiguar el valor que ocupa el máximo/mínimo de una colección de valores, con las funciones .max() y .min().","code":"\nx <- c(7, NA, 20, 3, 19, 21, 25, 80, NA)\nx[x >= 18] # Accedemos a los elementos que cumplen la condición## [1] NA 20 19 21 25 80 NA\nwhich(x >= 18) # Obtenemos los lugares que ocupan los elementos que cumplen la condición## [1] 3 5 6 7 8\nx## [1]  7 NA 20  3 19 21 25 80 NA\nmax(x, na.rm = TRUE) # máximo de x (si no eliminamos NA, nos devolverá NA)## [1] 80\nmin(x, na.rm = TRUE) # mínimo de x (si no eliminamos NA, nos devolverá NA)## [1] 3\nwhich.max(x) # Lugar que ocupa el máximo## [1] 8\nwhich.min(x) # Lugar que ocupa el mínimo## [1] 4"},{"path":"operacionesvectores.html","id":"null","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.2.2 NULL","text":"veces además de NA y NaN, R nos muestra un dato llamado NULL. Cuando tenemos NA en alguna variable, el registro existe, pero está relleno. Sin embargo, cuando tenemos un NULL significa que ese valor ni siquiera existe: es un dato guardado pero cuyo valor desconocemos, es un dato que ni siquiera existe (por ejemplo, si guardamos datos de 7 personas, el dato de la octava persona es NA, es que hay octava persona directamente).","code":"\nx <- c(1, NA, 3, NA, NA, 5, 6)\nx[2] # NA: el registro existe pero sin dato## [1] NA\nnames(x) # No hemos definido el nombre de las variables, así que devuelve NULL## NULL"},{"path":"operacionesvectores.html","id":"nombrando-vectores-añadiendo-metainformación","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.3 Nombrando vectores: añadiendo metainformación","text":"Además R nos permite dar significado léxico nuestros valores (significan algo, solo números), pudiendo poner nombres los elementos de un vector.Esto es una ventaja ya que nos permite su selección usando dichos nombres: ya elegimos el tercer número o el primero, sino el número que representa el teléfono y el código postal de una persona.Con la función names() podemos, solo consultar los nombres de una variable, sino cambiarlos nuestro gusto.Más adelante dejaremos introducidos un tipo de dato más apropiado para guardar datos en «formato tabla», que se compondrá de una concetenación de concatenaciones, una concatenación de columnas (de vectores).","code":"\nx <- c(\"edad\" = 31, \"tlf\" = 613910687, \"cp\" = 33007) # cada número tiene un significado distinto\nx##      edad       tlf        cp \n##        31 613910687     33007\nx[c(\"edad\", \"cp\")] # seleccionamos los elementos que tienen ese nombre asignado##  edad    cp \n##    31 33007\nnames(x) # Consultamos nombres## [1] \"edad\" \"tlf\"  \"cp\"\nnames(x) <- c(\"años\", \"móvil\", \"dirección\") # Cambiamos nombres\nnames(x) # Consultamos nuevos nombres## [1] \"años\"      \"móvil\"     \"dirección\"\nx##      años     móvil dirección \n##        31 613910687     33007"},{"path":"operacionesvectores.html","id":"ordenar","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.4 Ordenar","text":"Una acción habitual al trabajar con datos es saber ordenarlos: de menor mayor edad, datos más recientes vs antiguos, etc. Para ello tenemos la función sort(), que podemos usar directamente para ordenar de menor mayor. Vamos ordenar, por ejemplo, una colección de edades de diferentes personas.Por defecto, sort() ordena de menor mayor. Con el argumento opcional decreasing = TRUE podemos ordenar de mayor menor.Otra forma de ordenar un vector es que R nos devuelva los índices de los elementos ordenados, y luego usar dichos índices para reorganizar los elementos, con la función order().","code":"\nedades <- c(81, 7, 25, 41, 65, 20, 32, 23, 77)\nsort(edades) # orden de joven a mayor## [1]  7 20 23 25 32 41 65 77 81\nsort(edades, decreasing = FALSE) # orden de mayor a joven## [1]  7 20 23 25 32 41 65 77 81\norder(x) ## [1] 1 3 2\nx[order(x)] # accedemos a los índices ordenados##      años dirección     móvil \n##        31     33007 613910687"},{"path":"operacionesvectores.html","id":"consejos-4","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.5 Consejos","text":"CONSEJOS Operaciones estadísticasComo podido comprobar, las operaciones ESTADÍSTICAS se realizan elemento elemento: la media o la suma las realiza tomando todos los elementos del vector. , anyExisten dos funciones muy útiles en R para saber si TODOS o ALGUNO de los elementos de un vector cumple una condición. Las funciones () y () nos devolverá un único valor lógico. Estas funciones son muy útiles al final de los códigos para comprobar que las condiciones que tienen que verificar los datos se cumplen, y asegurarnos que el proceso se ha ejecutado correctamente (por ejemplo, que todos los datos sean positivos o haya datos ausentes). Argumentos por defectoLa función sort() es un buen ejemplo de que las funciones traen definidos argumentos por defecto (aunque los veamos priori). La orden sort(x) en realidad está ejecutando sort(x, decreasing = TRUE), pero como es su valor por defecto, nos podemos ahorrar incluirlo. Escribe ? help sort() en la consola y verás como en la cabecera de la función ya hay preasignado un decreasing = TRUE. Diferencia de conjuntosUna función muy útil para ver las diferencias entre dos conjuntos es setdiff(), una función que nos devuelve los elementos distintos entre dos conjuntos. Optimiza tu códigoAunque parezca un tema menor, si tu código tarda 1 milisegundo más de lo que podría tardar de otra forma, si esa orden se repite muchas veces, ese milisegundo extra puede ser 5, 10 o 20 minutos más que tu código tardará en ejecutarse. Hay un paquete muy útil en R para medir tiempos de distintas órdenes que hacen lo mismo (el paquete microbenchmark), vamos instalarlo.Este paquete contiene una orden para comparar el tiempo de dos órdenes: necesita como primeros argumentos las dos órdenes cuyos tiempos vamos comparar, y un argumento times en el que le indicamos el número de veces que ejecutará cada orden para realizar los tiempos medios. Vamos comparar los comandos de ordenación order() y sort().Aunque priori parezca contraintuitivo, es más corto obtener los índices ordenados de un vector, y luego reordenarlo en base esos índices, que la ordenación directa través del comando sort() (ya que usan algoritmos de ordenación distintos).","code":"\nx <- c(1, 2, 3, 4, 5, NA, 7)\nall(x < 3)## [1] FALSE\nany(x < 3)## [1] TRUE\nall(x > 0)## [1] NA\nall(na.omit(x) > 0)## [1] TRUE\nall(is.na(x))## [1] FALSE\nany(is.na(x))## [1] TRUE\ny <- 1:10\nz <- c(1, 3, 7, 10)\nsetdiff(y, z) # Elementos en y que no están en z ## [1] 2 4 5 6 8 9\ninstall.packages(\"microbenchmark\")\nlibrary(microbenchmark)\nx <- rnorm(1e3) # 1000 elementos aleatorias de una normal N(0, 1)\nmicrobenchmark(sort(x), # primera forma\n               x[order(x)], # segunda forma\n               times = 1e3) # se repetirá 1000 veces## Unit: microseconds\n##         expr    min     lq     mean  median      uq     max neval cld\n##      sort(x) 43.557 50.932 62.48739 57.6465 63.8420 191.095  1000   b\n##  x[order(x)] 30.299 36.562 44.23345 40.2080 44.9195 144.061  1000  a"},{"path":"operacionesvectores.html","id":"ejercicios-4","chapter":"Capítulo 7 Operaciones con vectores","heading":"7.6 📝 Ejercicios","text":"(haz click en las flechas para ver soluciones)📝Ejercicio 1: define el vector x como la concatenación de los números 1, 10, -1 y 2, y calcula su suma.Solución: 📝Ejercicio 2: define otro vector y que contenga los números 5, -7, 8, -3, y haz la suma de x e y. Solución: 📝Ejercicio 3: calcula el número de elementos mayores que 0 del resultado de la suma de x + y. Solución: 📝Ejercicio 4: calcula la versión ordenada del vector x. Solución: 📝Ejercicio 5: encuentra del vector x original el lugar (el índice) que ocupa su mínimo y su máximo. Solución: 📝Ejercicio 6: encuentra del vector x los elementos mayores que 1 y menores que 7. Encuentra una forma de averiguar si todos los elementos son o positivos. Solución: 📝Ejercicio 7: define el vector c(-1, 0, 4, 5, -2), calcula la raíz cuadrada del vector y determina que lugares son ausente de tipo NaN. Solución: 📝Ejercicio 8: define el vector de los primeros números impares (hasta el 21) y extrae los elementos que ocupan los lugares 1, 4, 5, 8. Elimina del vector el segundo elementoSolución: 📝Ejercicio 9: define una cadena de caracteres texto <- c(\"oso polar\", \"oso pardo\", \"salamandra\", \"buho\", \"lechuza\", \"oso malayo\"). Usa str_count() para contabilizar el número de osos. Usa str_starts() para saber que elemento del vector es un oso o . Obten la longitud de cada cadena. Sustituye en todas las cadenas la o por *Solución:","code":"\n# Vector de números\nx <- c(1, 10, -1, 2)\n\n# Suma\nsum(x)## [1] 12\n# Vector de números\ny <- c(5, -7, 8, -3)\n\n# Suma\nx + y## [1]  6  3  7 -1\nsum((x + y) > 0)## [1] 3\n# Otra forma\nsuma <- x + y\nsum(suma > 0)## [1] 3\n# Ordenamos el vector (con sort)\nsort(x)## [1] -1  1  2 10\n# Ordenamos el vector  (con order)\nx[order(x)]## [1] -1  1  2 10\nx<- c(1, 10, -1, 2)\n\n# Encontrando el lugar que ocupa el máximo y mínimo\nwhich.max(x)## [1] 2\nwhich.min(x)## [1] 3\n# Vector lógico: mayores que 1 y menores que 7\nx > 1 & x < 7## [1] FALSE FALSE FALSE  TRUE\n# ¿Son todos positivos? Mira también any()\nall(x > 0)## [1] FALSE\n# Vector\nz <- c(-1, 0, 4, 5, -2)\n\n# ¿Cuáles son ausentes tras aplicar la raíz cuadrada?\nis.nan(sqrt(z))## [1]  TRUE FALSE FALSE FALSE  TRUE\n# Vector de impares (de 1 a 21 saltando de dos en dos)\nx <- seq(1, 21, by = 2)\n\n# Seleccionamos elementos\nx[c(1, 4, 5, 8)]## [1]  1  7  9 15\n# Eliminamos elementos\ny <- x[-2]\ny##  [1]  1  5  7  9 11 13 15 17 19 21\ntexto <- c(\"oso polar\", \"oso pardo\", \"salamandra\", \"buho\", \"lechuza\", \"oso malayo\")\n\n# Cuenta el número de cadenas que contienen la palabra \"oso\"\nstr_count(texto, \"oso\")## [1] 1 1 0 0 0 1\n# Nos devuelve TRUE en las cadenas que empiecen por \"oso\"\nstr_starts(texto, \"oso\")## [1]  TRUE  TRUE FALSE FALSE FALSE  TRUE\nstr_ends(texto, \"oso\") # devuelve todo FALSE## [1] FALSE FALSE FALSE FALSE FALSE FALSE\n# Longitud de cada cadena\nstr_length(texto)## [1]  9  9 10  4  7 10\n# Sustituimos en todas las oes por *\nstr_replace_all(texto, \"o\", \"*\")## [1] \"*s* p*lar\"  \"*s* pard*\"  \"salamandra\" \"buh*\"       \"lechuza\"   \n## [6] \"*s* malay*\""},{"path":"fechas.html","id":"fechas","chapter":"Capítulo 8 Fechas","heading":"Capítulo 8 Fechas","text":"Scripts usados:script08.R. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script08.R[X] Variables numéricas (individuales)[X] Variables de caracteres[X] Variables lógicas[X] Variables de tipo fechaDado que el objetivo final es trabajar con datos, vamos ver un tipo de datos muy especial: los datos de tipo fecha. Una fecha podríamos que tiene nada de especial ya que una simple cadena de texto \"2021-04-21\". Sin embargo, representa un instante en el tiempo, que deberíamos poder operar como tal. ¿Qué sucedería si sumamos un 1 (un día) una fecha definida como una cadena de texto?Como ves, da error, ya que un texto le podemos sumar un número (distingue entre dicha cadena de texto y, por ejemplo, \"oso panda\"). Por suerte contamos con el paquete lubridate, con diferentes funcionalidades para trabajar con fechas. Empecemos con la función as_date(), que nos convierte una cadena de texto en un dato de tipo fecha.Fíjate en la diferencia.En el momento en que convertimos la cadena de texto fecha, aunque se visualice como un texto, internamente es un número, por lo que podemos restar fechas (días entre ambas), podemos sumar números fechas (fecha días después), etc. Como ya hemos dicho, las fechas y momentos temporales serán meras cadenas de caracteres sino que tienen clases especiales asociadas. Las fechas serán guardadas internamente como el número de días transcurridos desde el 1 de enero de 1970, y las horas como número de segundos desde el 1 de enero de 1970 (para la clase POSIXct) o una lista de segundos, minutos y horas (para la clase POSIXlt). La función as_date() tiene un argumento opcional, el formato en la que le estamos la fecha, que por defecto será \"yyyy-mm-dd\" (año en 4 cifras, guión, mes en dos cifras, guión, día en dos cifras. Si introducimos otro tipo de formato de fecha, debemos especificárselo en un segundo argumento format = ..., para R sepa el formato de fecha que le estamos pasando ERROR: sin pasar fecha se puede operarSi tenemos una fecha como caracter, nunca podremos hacer operaciones (por ejemplo, restarle una unidad temporal, en este caso un día).Fíjate la diferencia cuando lo convertimos en fecha ","code":"\n# Cadena de texto\nfecha_char <- \"2021-04-21\"\nclass(fecha_char)## [1] \"character\"\nfecha_char + 1## Error in fecha_char + 1: argumento no-numérico para operador binario\n# install.packages(\"lubridate\")\nlibrary(lubridate)\n# Fecha, mostrada como un texto pero guardada internamente como un número\nfecha_date <- as_date(fecha_char)\nclass(fecha_date)## [1] \"Date\"\nfecha_date + 1 # día siguiente## [1] \"2021-04-22\"\nfecha_date - 3 # 3 días antes## [1] \"2021-04-18\"\nas_date(\"10-03-2020\", format = \"%d-%m-%Y\") # con día-mes-año (4 cifras)## [1] \"2020-03-10\"\nas_date(\"10-03-20\", format = \"%d-%m-%y\")  # con día-mes-año (2 cifras)## [1] \"2020-03-10\"\nas_date(\"03-10-2020\", format = \"%m-%d-%Y\") # con mes-día-año (4 cifras)## [1] \"2020-03-10\"\nas_date(\"Octubre 21, 1995 21:24\", format = \"%B %d, %Y %H:%M\") # fecha escrita## [1] NA\n\"2021-03-10\" - 1 # error## Error in \"2021-03-10\" - 1: argumento no-numérico para operador binario\nfecha <- as_date(\"2021-03-10\") - 1 # día previo\nfecha## [1] \"2021-03-09\""},{"path":"fechas.html","id":"funciones-de-lubridate","chapter":"Capítulo 8 Fechas","heading":"8.1 Funciones de lubridate","text":"solo podemos convertir la fecha con as_date(), indicándole el formato. Para facilitar conversiones de formatos habituales, el paquete lubridate tiene nuestra disposición diferentes funciones preparadas para directamente convertir fechas en distintos formatos, como la función ymd_hms() o ydm_hms()De la misma manera tenemos la función dmy_hms()También podemos hacerlo de forma muy simplifica con mdy() y ymd() Otra de las funcionalidades que nos proporciona dicho paquetees obtener automáticamente la fecha de hoy, haciendo uso de la función today()También podemos obtener el «hoy y ahora» con la función now(), obteniendo solo la fecha sino la hora. También tenemos disponibles en dicho paquete funciones para extraer facilmente algunas variables temporales como el día de la semana, el mes o el cuatrimestre, con las funciones year(), months(), day(), hour(), week(), etc.También disponemos de la función wday(), que nos devuelve el día de la semana en el que estamos (por defecto, la semana empieza el domingo, pero podemos cambiarlo con el argumento opcional week_start = ...)Además si usamos otro argumento opcional label = TRUE (por defecto está en FALSE), nos convertirá dichos días de la semana en los nombres (en lugar de números) Las funciones de month(), year(), day(), etc, pueden ser usadas tanto para extraer el valor como para cambiarlo, asignándole uno distinto Al igual que podemos realizar operaciones aritméticas sencillas con las fechas, también podemos realizar comparaciones, por ejemplo, si el día actual es menor o mayor que otra fecha dada. Con la función leap_year() podremos saber si la fecha corresponde un año bisiestoTambién podemos hacer uso de diferentes funciones para añadir intervalos de tiempo una fecha dada (que sean solo días).","code":"\nymd_hms(\"2017-11-28 14:02:00\") # convertir a fecha una cadena año-mes-día + hora## [1] \"2017-11-28 14:02:00 UTC\"\nydm_hms(\"2017-22-12 10:00:00\") # convertir a fecha una cadena año-día-mes + hora## [1] \"2017-12-22 10:00:00 UTC\"\ndmy_hms(\"1 Jan 2017 23:59:59\") # convertir a fecha una cadena textual de fecha + hora## [1] \"2017-01-01 23:59:59 UTC\"\nmdy(\"July 4th, 2000\") # convertir a fecha una cadena textual de fecha## [1] \"2000-07-04\"\nymd(20170131)## [1] \"2017-01-31\"\nhoy <- today()\nclass(hoy) # de clase fecha## [1] \"Date\"\nhoy + 7 # dentro de una semana## [1] \"2022-09-19\"\nnow()## [1] \"2022-09-12 13:04:13 CEST\"\nfecha <- now()\nyear(fecha)## [1] 2022\nmonth(fecha)## [1] 9\nday(fecha)## [1] 12\nhour(fecha)## [1] 13\nminute(fecha)## [1] 4\nsecond(fecha)## [1] 13.51122\nweek(fecha) # Número de semana (del año)## [1] 37\nwday(fecha)## [1] 2\nwday(fecha, week_start = 1) # Día de la semana (empezando por el lunes)## [1] 1\nwday(fecha, week_start = 1, label = TRUE)## [1] Mon\n## Levels: Mon < Tue < Wed < Thu < Fri < Sat < Sun\n# Mantenemos la misma fecha que la actual pero solo cambiando el año\nyear(fecha) <- 1891\nfecha_actual <- now()\nfecha_actual > ymd(20170131) # Actual vs 2017-01-31## [1] TRUE\nfecha_actual > ymd(21000131) # Actual vs 2100-01-31## [1] FALSE\nleap_year(as_date(ymd(20190131)))## [1] FALSE\nleap_year(as_date(ymd(20160131)))## [1] TRUE\nfecha <- now()\nfecha + weeks(0:3)## [1] \"2022-09-12 13:04:13 CEST\" \"2022-09-19 13:04:13 CEST\"\n## [3] \"2022-09-26 13:04:13 CEST\" \"2022-10-03 13:04:13 CEST\"\nfecha + seconds(0:3)## [1] \"2022-09-12 13:04:13 CEST\" \"2022-09-12 13:04:14 CEST\"\n## [3] \"2022-09-12 13:04:15 CEST\" \"2022-09-12 13:04:16 CEST\""},{"path":"fechas.html","id":"consejos-5","chapter":"Capítulo 8 Fechas","heading":"8.2 Consejos","text":"CONSEJOS Recuperar un comando y autocompletarSi haces click con el ratón en la consola y pulsas la flecha «arriba» del teclado, te irá apareciendo todo el historial de órdenes ejecutadas. Es una manera de ahorrar tiempo para ejecutar órdenes similares las ya ejecutadas. Si empiezas escribir el nombre de una variable pero te acuerdas exactamente de su nombre, pulsando tabulador te autocompletará solo. Convertir tipos de datosA veces la lectura de variables numéricas de nuestros archivos puede hacer que un número, por ejemplo 1, sea leído como la cadena de texto \"1\", con la que podemos operar como un número. Las funciones .numeric(), .character() y .logical() nos permiten convertir una variable en tipo numérico, caracter o lógico, respectivamente. ","code":"\n\"1\" + 1## Error in \"1\" + 1: argumento no-numérico para operador binario\nas.numeric(\"1\") + 1## [1] 2\nas.character(1)## [1] \"1\"\nas.logical(c(0, 1))## [1] FALSE  TRUE"},{"path":"fechas.html","id":"ejercicios-5","chapter":"Capítulo 8 Fechas","heading":"8.3 📝 Ejercicios","text":"(haz click en las flechas para ver soluciones)📝Ejercicio 1: obten la fecha de hoy, define la fecha de tu cumpleaños, y calcula la diferencia de días. Solución: 📝Ejercicio 2: define la fecha de tu cumpleaños y determina si fue año bisiesto. Súmale 1-2-3-4-5 semanas. Solución: 📝Ejercicio 3: extrae el mes, año y día de la semana de tu cumpleaños Solución: 📝Ejercicio 4: calcula los días que han pasado desde la fecha de tu nacimiento Solución: ","code":"\n# Hoy\nhoy <- today()\n\n# Cumple (diferentes formatos de entrada)\ncumple <- as_date(\"1989-09-10\") # por defecto\ncumple <- as_date(\"10-09-1989\", format = \"%d-%m-%Y\")\n\n# Diferencia\nhoy - cumple## Time difference of 12055 days\ncumple <- as_date(\"1989-09-10\") # por defecto\n\n# Bisiesto\nleap_year(cumple)## [1] FALSE\n# Sumamos semanaes\ncumple + weeks(1:5)## [1] \"1989-09-17\" \"1989-09-24\" \"1989-10-01\" \"1989-10-08\" \"1989-10-15\"\n# Mes\nmonth(cumple)## [1] 9\n# Año \nyear(cumple)## [1] 1989\n# wday\nwday(cumple, week_start = 1)## [1] 7\nwday(cumple, week_start = 1, label = TRUE)## [1] Sun\n## Levels: Mon < Tue < Wed < Thu < Fri < Sat < Sun\nseconds(today() - cumple)## [1] \"12055S\""},{"path":"datos.html","id":"datos","chapter":"Capítulo 9 Datos estructurados","heading":"Capítulo 9 Datos estructurados","text":"Scripts usados:script09.R. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script09.RYa sabemos un poco la gramática y ortografía de nuestro lenguaje, y algunas de las funcionalidades básicas de nuestro «Word». Vamos introducir cómo escribir la mejor trama para la novela: hablemos por fin de datos (introducción muy reducida).","code":""},{"path":"datos.html","id":"matrices","chapter":"Capítulo 9 Datos estructurados","heading":"9.1 Matrices","text":"Hasta ahora, si quisiéramos trabajar con los datos de una persona y lo imaginamos en un Excel, hemos aprendido algunos tipos básicos que pueden tomar las celdas, y hemos aprendido formar columnas (vectores, colecciones de elementos del mismo tipo).Pero hasta ahora cada columna la hemos tratado por separado: una colección de números, otra de caracteres, fechas, etc. Pero de momento solo hemos visto solo datos en una dimensión: una sola variable de \\(n\\) elementos.Pero cuando analizamos datos solemos tener varias variables distintas de cada individuo, por ejemplo, la estatura y el peso de una persona. Necesitamos una «tabla», una manera de unir distintas variables numéricas, todas de IGUAL longitud. Y ese conjunto de variables (del mismo tipo e igual longitud), dispuestas en columnas, es lo que conocemos como matrices: una «tabla» de valores del mismo tipo, con filas y columnas.Vamos empezar definiendo una matriz sencilla: imagina que tenemos las estaturas y pesos de 5 personas.¿Cómo juntar las dos variables creando nuestro primer conjunto de datos? Vamos crear una matriz, un conjunto de números organizado en 2 columnas (una por variable) y 5 filas o registros (una por persona). Para ello usaremos la función cbind(), que nos concatena vectores de igual longitud en columnas.Nuestro primer conjunto de datos :) Podemos visualizar la matriz en un formato «excelizado» con la función View()\nImagen/gráfica 9.1: Nuestra primera matriz de datos\nTambién podemos construir la matriz por filas con el comando rbind(), que nos permite añadir filas una matriz o construirla desde cero (aunque lo habitual y recomendable es tener cada variable en una columna y cada individuo en una fila).Para practicar vamos definir otro ejemplo, con las edades, teléfonos y códigos postales de una serie de individuos (fíjate que hay adrede datos ausentes, ya que veces tendremos datos de algunas personas de algunas variables).De nuevo tenemos una tabla de números: una columna por variable y una fila por registro. Los comandos cbind() y rbind() solo nos permiten crear matrices desde cero sino también añadir filas o columnas matrices existentes.Como ves, ahora nuestros datos están tabulados, tienen dos dimensiones. ¿Cómo saber las dimensiones que tiene una matriz? Prueba ejecutar la función dim().Fíjate que dim() devuelve un vector de 2 elementos (las dos dimensiones), por lo que para acceder al número de filas deberemos ejecutar dim(x)[1] (y dim(x)[2] para el número de columnas).También tenemos nuestra disposición las funciones nrow() y ncol(), que nos devuelven directamente el número de filas y columnas.Igual que veces es útil generar un vector de elementos repetidos, también podemos definir una matriz de números repetidos (por ejemplo, de ceros), con la función matrix(), indicándole el número de filas y columnas.También podemos definir una matriz partir de un vector numérico, reorganizando los valores en forma de matriz (con una dimensión tal que filas * columnas = longitud del vector), sabiendo que los elementos se van colocando por columnas (primeros valores en la primera columna, de arriba abajo). Dada una matriz también podemos «darle vuelta» (lo que se conoce como matriz transpuesta, donde filas pasan ser columnas y viceversa) con la función t().Con las matrices sucede como con los vectores: cuando aplicamos una operación aritmética, se la estamos aplicando elemento elemento, por ejemplo, dividir entre 5 o sumar una constanteTambién podemos crear matrices de otros tipos de datos, siempre y cuando las columnas sean del mismo tipo e igual longitud, por ejemplo una matriz de caracteres o una matriz de valores lógicos","code":"\n# Ejemplos de variables unidimensionales (vectores)\nc(1, 4, NA, -2, 0)## [1]  1  4 NA -2  0\nc(\"a\", NA, \"b\", \"c\")## [1] \"a\" NA  \"b\" \"c\"\nc(TRUE, TRUE, FALSE, TRUE)## [1]  TRUE  TRUE FALSE  TRUE\nc(today() - 1, today(), today() + 1)## [1] \"2022-09-11\" \"2022-09-12\" \"2022-09-13\"\nestaturas <- c(150, 160, 170, 180, 190)\npesos <- c(60, 70, 80, 90, 100)\ndatos_matriz <- cbind(estaturas, pesos) # Construimos la matriz por columnas\ndatos_matriz # nuestra primera matriz##      estaturas pesos\n## [1,]       150    60\n## [2,]       160    70\n## [3,]       170    80\n## [4,]       180    90\n## [5,]       190   100\nView(datos_matriz)\nrbind(estaturas, pesos) # Construimos la matriz por filas##           [,1] [,2] [,3] [,4] [,5]\n## estaturas  150  160  170  180  190\n## pesos       60   70   80   90  100\nedades <- c(14, 24, 56, 31, 20, 87, 73) # vector numérico de longitud 7\ntlf <- c(NA, 683839390, 621539732, 618211286, NA, 914727164, NA)\ncp <- c(33007, 28019, 37005, 18003, 33091, 25073, 17140)\n\n# Construimos la matriz por columnas\ndatos_matriz <- cbind(edades, tlf, cp) \ndatos_matriz##      edades       tlf    cp\n## [1,]     14        NA 33007\n## [2,]     24 683839390 28019\n## [3,]     56 621539732 37005\n## [4,]     31 618211286 18003\n## [5,]     20        NA 33091\n## [6,]     87 914727164 25073\n## [7,]     73        NA 17140\n# Añadimos una fila\nrbind(datos_matriz, c(27, 620125780, 28051))##      edades       tlf    cp\n## [1,]     14        NA 33007\n## [2,]     24 683839390 28019\n## [3,]     56 621539732 37005\n## [4,]     31 618211286 18003\n## [5,]     20        NA 33091\n## [6,]     87 914727164 25073\n## [7,]     73        NA 17140\n## [8,]     27 620125780 28051\n# Añadimos una columna\ncbind(datos_matriz, \"estaturas\" = c(160, 155, 170, 181, 174, NA, 165))##      edades       tlf    cp estaturas\n## [1,]     14        NA 33007       160\n## [2,]     24 683839390 28019       155\n## [3,]     56 621539732 37005       170\n## [4,]     31 618211286 18003       181\n## [5,]     20        NA 33091       174\n## [6,]     87 914727164 25073        NA\n## [7,]     73        NA 17140       165\ndim(datos_matriz)## [1] 7 3\ndim(datos_matriz)[1]## [1] 7\ndim(datos_matriz)[2]## [1] 3\nnrow(datos_matriz)## [1] 7\nncol(datos_matriz)## [1] 3\nmatrix(0, nrow = 5, ncol = 3) # 5 filas, 3 columnas, todo 0's##      [,1] [,2] [,3]\n## [1,]    0    0    0\n## [2,]    0    0    0\n## [3,]    0    0    0\n## [4,]    0    0    0\n## [5,]    0    0    0\nz <- matrix(1:15, ncol = 5) # Matriz con el vector 1:5 con 5 columnas (ergo 3 filas)\nz##      [,1] [,2] [,3] [,4] [,5]\n## [1,]    1    4    7   10   13\n## [2,]    2    5    8   11   14\n## [3,]    3    6    9   12   15\ndatos_matriz##      edades       tlf    cp\n## [1,]     14        NA 33007\n## [2,]     24 683839390 28019\n## [3,]     56 621539732 37005\n## [4,]     31 618211286 18003\n## [5,]     20        NA 33091\n## [6,]     87 914727164 25073\n## [7,]     73        NA 17140\nt(datos_matriz) # Matriz transpuesta##         [,1]      [,2]      [,3]      [,4]  [,5]      [,6]  [,7]\n## edades    14        24        56        31    20        87    73\n## tlf       NA 683839390 621539732 618211286    NA 914727164    NA\n## cp     33007     28019     37005     18003 33091     25073 17140\ndatos_matriz / 5##      edades       tlf     cp\n## [1,]    2.8        NA 6601.4\n## [2,]    4.8 136767878 5603.8\n## [3,]   11.2 124307946 7401.0\n## [4,]    6.2 123642257 3600.6\n## [5,]    4.0        NA 6618.2\n## [6,]   17.4 182945433 5014.6\n## [7,]   14.6        NA 3428.0\ndatos_matriz + 3##      edades       tlf    cp\n## [1,]     17        NA 33010\n## [2,]     27 683839393 28022\n## [3,]     59 621539735 37008\n## [4,]     34 618211289 18006\n## [5,]     23        NA 33094\n## [6,]     90 914727167 25076\n## [7,]     76        NA 17143\n# matriz de caracteres\nnombres <- c(\"Javier\", \"Carlos\", \"María\", \"Paloma\")\napellidos <- c(\"Álvarez\", \"García\", \"Pérez\", \"Liébana\")\ncbind(nombres, apellidos)##      nombres  apellidos\n## [1,] \"Javier\" \"Álvarez\"\n## [2,] \"Carlos\" \"García\" \n## [3,] \"María\"  \"Pérez\"  \n## [4,] \"Paloma\" \"Liébana\"\n# matriz de valores lógicos\nvar1 <- c(TRUE, TRUE, FALSE, FALSE, TRUE)\nvar2 <- c(TRUE, FALSE, FALSE, TRUE, TRUE)\ncbind(var1, var2)##       var1  var2\n## [1,]  TRUE  TRUE\n## [2,]  TRUE FALSE\n## [3,] FALSE FALSE\n## [4,] FALSE  TRUE\n## [5,]  TRUE  TRUE\ncbind(var1, var2) + 1##      var1 var2\n## [1,]    2    2\n## [2,]    2    1\n## [3,]    1    1\n## [4,]    1    2\n## [5,]    2    2"},{"path":"datos.html","id":"acceder-a-elementos","chapter":"Capítulo 9 Datos estructurados","heading":"9.1.1 Acceder a elementos","text":"Si recuerdas para los vectores, usábamos el operador [] para acceder al elemento -ésimo.En el caso de las matrices la lógica será la misma: para acceder la fila -ésima de la matriz se usa el operador [, ] (dejando libre el índice de la columna), mientras que para acceder la columna j-ésima de la matriz se usaría el operador [, j] (dejando libre el índice de la fila). Para acceder conjuntamente al elemento (, j) (fila , columna j) se usa el operador [, j].Si las columnas tienen nombres también podemos hacer uso de ellos para acceder las columnasIncluso podemos asignar nombres las filas de una matriz con row.names() y acceder filas y columnas por nombres.","code":"\nx <- c(1, 2, 10, 67, -1, 0)\nx[3] # accedemos al tercer elemento ## [1] 10\nx[c(3, 5)] # accedemos al tercer y quinto elemento## [1] 10 -1\nx[1:4] # accedemos al primero, segundo, tercero, cuarto elemento## [1]  1  2 10 67\ndatos_matriz##      edades       tlf    cp\n## [1,]     14        NA 33007\n## [2,]     24 683839390 28019\n## [3,]     56 621539732 37005\n## [4,]     31 618211286 18003\n## [5,]     20        NA 33091\n## [6,]     87 914727164 25073\n## [7,]     73        NA 17140\ndatos_matriz[1, 3] # elemento (1, 3)##    cp \n## 33007\ndatos_matriz[2, 2] # elemento (1, 3)##       tlf \n## 683839390\ndatos_matriz[1, ] # fila 1## edades    tlf     cp \n##     14     NA  33007\ndatos_matriz[, 3] # columna 3## [1] 33007 28019 37005 18003 33091 25073 17140\ndatos_matriz[, c(\"edades\", \"tlf\")]##      edades       tlf\n## [1,]     14        NA\n## [2,]     24 683839390\n## [3,]     56 621539732\n## [4,]     31 618211286\n## [5,]     20        NA\n## [6,]     87 914727164\n## [7,]     73        NA\nrow.names(datos_matriz) <- c(\"Javi\", \"Laura\", \"Patricia\", \"Carlos\",\n                             \"Juan\", \"Luis\", \"Carla\")\ndatos_matriz[\"Javi\", \"edades\"]## [1] 14"},{"path":"datos.html","id":"operaciones-por-filas-y-columnas-apply","chapter":"Capítulo 9 Datos estructurados","heading":"9.1.2 Operaciones por filas y columnas (apply)","text":"Normalmente, para explicar las operaciones con matrices en un lenguaje de programación al uso, necesitaríamos hablar de una herramienta llamada bucles. Lo mencionaremos más adelante pero los vamos necesitar de momento (y cuántos menos los usemos en R, mejor)Imagina que tuviésemos nuestra matriz de estaturas y pesos.¿Cómo podemos aplicar una operación para cada una de las filas o columnas de una matriz? Imagina que queremos obtener la media de cada columna (media de las estaturas y media de los pesos).Lo haremos con la función apply(), y le indicaremos como argumentosla matrizel sentido de la operación (MARGIN = 1 hará la opearción por filas, MARGIN = 2 hará la opearción por columnas)la función aplicar por filas (o por columnas)El resultado es un vector de longitud 2 (la media de las estaturas y la media del peso). La misma operación la podemos realizar por filas con MARGIN = 1 (aunque en este caso tiene mucho sentido hacer la media de variables con magnitudes distintas)Si la función aplicar requiere de argumentos extras, por ejemplo indicarle que ignore los datos ausentes con na.rm = TRUE, se lo podemos indicar al final como argumento extra.","code":"\ndatos_matriz <- cbind(estaturas, pesos)\ndatos_matriz##      estaturas pesos\n## [1,]       150    60\n## [2,]       160    70\n## [3,]       170    80\n## [4,]       180    90\n## [5,]       190   100\n# Media (mean) por columnas (MARGIN = 2)\napply(datos_matriz, MARGIN = 2, FUN = \"mean\")## estaturas     pesos \n##       170        80\n# Media por filas (MARGIN = 1)\napply(datos_matriz, MARGIN = 1, FUN = \"mean\")## [1] 105 115 125 135 145\nestaturas_bis <- c(150, NA, 170, 180, 190)\npesos_bis <- c(60, 70, 80, NA, 100)\ndatos_matriz_bis <- cbind(estaturas_bis, pesos_bis) \n\n# Nos devolverá ausente porque en ambas columnas tenemos\napply(datos_matriz_bis, MARGIN = 2, FUN = \"mean\")## estaturas_bis     pesos_bis \n##            NA            NA\n# Media por columnas (MARGIN = 2) ignorando los ausentes\napply(datos_matriz_bis, MARGIN = 2, FUN = \"mean\", na.rm = TRUE)## estaturas_bis     pesos_bis \n##         172.5          77.5"},{"path":"datos.html","id":"tablas-data.frames","chapter":"Capítulo 9 Datos estructurados","heading":"9.2 Tablas: data.frames","text":"Recapitulando:Hemos visto los tipos de datos que podemos tener en cada celda.Hemos aprendido recolectar datos de distintos individuos (vectores de edades, vectores de fechas, vectores de nombres).Siempre que sean del mismo tipo y longitud, hemos aprendido juntar en un mismo objeto (matrices) variables distintas (edades, estaturas, alturas, por ejemplo).Retomemos nuestra matriz de datos, en la que teníamos para cada individuo guardado las edades (edades), teléfonos (tlf) y códigos postales (cp), y probemos ver que pasa cuando seleccionamos la columna de edades y le sumamos un año todas las personas¿Qué sucede si ahora añadimos una columna con los nombres (tipo caracter) de cada persona?¿visto lo que ha sucedido?Como una matriz SOLO puede tener un tipo de dato (todo números, todo texto, todo lógicas, todo fechas, etc), al añadir una variable de tipo texto, R se ha visto obligado convertir los números en texto poniéndole comillas los datos que tenemos: hemos roto la integridad de los datos. De hecho, como ahora los números con caracteres, podremos sumar un año cada persona como antes. Las matrices nos permiten almacenar distintas variables SIEMPRE Y CUANDO tenganMisma longitud (todas las columnas deben tener la misma longitud).Mismo tipo de dato (o todo números o todo caracteres, pero sin mezclar).Esto es bastante limitante ya que en la vida real nuestros datos tendrán variables de todo tipo. Veamos un ejemplo real: supongamos que queremos guardar de 7 personas las variables de texto nombres y apellidos.Hasta aquí habría ningún problema ya que podemos crear una matriz de caracteres.De esas 7 personas también disponemos información de si están o casadas (representado en un valor lógico, casado) y algunos valores numéricos (edades, cp y tlf).Por último, vamos añadir cada persona una fecha de registro en el sistema (fecha_creacion, imagina que fuese la fecha de expedición del DNI).En cada variable tenemos 7 registros, uno por persona, pero ahora tenemos un popurrí de variables, de la misma longitud pero de tipos distintos:(edades, tlf, cp) son variables numéricas.(nombres, apellidos) son variables de texto.casado es una variable lógica.fecha_creacion de tipo fecha.¿Qué sucedería si intentamos mezclar todo en una matriz? Vamos unir las columnas con cbind().Dado que en una matriz solo podemos almacenar datos del mismo tipo, los números los convierte texto, las variables lógicas las convierte texto (TRUE ahora es un valor lógico, \"TRUE\" es un texto, como \"Pepito\", sin significado lógico de verdadero/falso) y las fechas las ha convertido texto (aunque las veas igual, ya son de tipo de fecha, son texto y podemos operar con ellas). Vamos aprender cómo juntar variables de distinto tipo, sin cambiar su naturaleza, como lo haríamos en una tabla de Excel.El formato de tabla de datos en R que vamos empezar usar desde ya se llama data.frame, y es más que una colección de variables de igual longitud pero cada una puede ser de un tipo distinto. Para crear un data.frame basta con usar la función data.frame(), pasándole como argumentos (separados por comas) las variables que queremos reunir.Al igual que con las matrices, podemos crearlas indicando además el nombre de las columnas.¡TENEMOS NUESTRO PRIMER CONJUNTO DE DATOS! Puedes visualizarlo de nuevo escribiendo su nombre en consola o con la función View()","code":"\ndatos_matriz##      estaturas pesos\n## [1,]       150    60\n## [2,]       160    70\n## [3,]       170    80\n## [4,]       180    90\n## [5,]       190   100\n# Sumamos un año a todas las personas\ndatos_matriz[, \"pesos\"] + 1## [1]  61  71  81  91 101\nnombres <- c(\"Sonia\", \"Carla\", \"Pepito\", \"Carlos\", \"Lara\", \"Sandra\", \"Javi\")\ndatos_matriz_nueva <- cbind(nombres, datos_matriz)\ndatos_matriz_nueva[, \"edades\"] + 1## Error in datos_matriz_nueva[, \"edades\"]: subíndice fuera de  los límites\n# Nombres\nnombres <- c(\"Sonia\", \"Carla\", \"Pepito\", \"Carlos\", \"Lara\", \"Sandra\", \"Javi\")\n\n# Apellidos\napellidos <- c(NA, \"González\", \"Fernández\", \"Martínez\", \"Liébana\", \"García\", \"Ortiz\")\nmatriz <- cbind(nombres, apellidos)\nmatriz##      nombres  apellidos  \n## [1,] \"Sonia\"  NA         \n## [2,] \"Carla\"  \"González\" \n## [3,] \"Pepito\" \"Fernández\"\n## [4,] \"Carlos\" \"Martínez\" \n## [5,] \"Lara\"   \"Liébana\"  \n## [6,] \"Sandra\" \"García\"   \n## [7,] \"Javi\"   \"Ortiz\"\n# Código postal\ncp <- c(28019, 28001, 34005, 18410, 33007, 34500, 28017)\n\n# Edades\nedades <- c(45, 67, NA, 31, 27, 19, 50)\n\n# Teléfono\ntlf <- c(618910564, 914718475, 934567891, 620176565, NA, NA, 688921344)\n\n# Estado civil (no lo sabemos de una persona)\ncasado <- c(TRUE, FALSE, FALSE, NA, TRUE, FALSE, FALSE)\n# Fecha de creación (fecha en el que esa persona entra en el sistema)\n# lo convertimos a tipo fecha\nfecha_creacion <-\n  as_date(c(\"2021-03-04\", \"2020-10-12\", \"1990-04-05\",\n            \"2019-09-10\", \"2017-03-21\", \"2020-07-07\",\n            \"2000-01-28\"))\n# Juntamos todo en una matriz (juntamos por columnas)\ndatos_matriz <-\n  cbind(nombres, apellidos, edades, tlf, cp, casado, fecha_creacion)\ndatos_matriz##      nombres  apellidos   edades tlf         cp      casado  fecha_creacion\n## [1,] \"Sonia\"  NA          \"45\"   \"618910564\" \"28019\" \"TRUE\"  \"18690\"       \n## [2,] \"Carla\"  \"González\"  \"67\"   \"914718475\" \"28001\" \"FALSE\" \"18547\"       \n## [3,] \"Pepito\" \"Fernández\" NA     \"934567891\" \"34005\" \"FALSE\" \"7399\"        \n## [4,] \"Carlos\" \"Martínez\"  \"31\"   \"620176565\" \"18410\" NA      \"18149\"       \n## [5,] \"Lara\"   \"Liébana\"   \"27\"   NA          \"33007\" \"TRUE\"  \"17246\"       \n## [6,] \"Sandra\" \"García\"    \"19\"   NA          \"34500\" \"FALSE\" \"18450\"       \n## [7,] \"Javi\"   \"Ortiz\"     \"50\"   \"688921344\" \"28017\" \"FALSE\" \"10984\"\n# Días entre la primera y el segundo elemento de fecha de creación\nfecha_creacion[1] - fecha_creacion[2]## Time difference of 143 days\ndatos_matriz[1, 7] - datos_matriz[2, 7]## Error in datos_matriz[1, 7] - datos_matriz[2, 7]: argumento no-numérico para operador binario\n# Creamos nuestro primer data.frame\ntabla <- data.frame(nombres, apellidos, edades, tlf, cp,\n                    casado, fecha_creacion)\ntabla##   nombres apellidos edades       tlf    cp casado fecha_creacion\n## 1   Sonia      <NA>     45 618910564 28019   TRUE     2021-03-04\n## 2   Carla  González     67 914718475 28001  FALSE     2020-10-12\n## 3  Pepito Fernández     NA 934567891 34005  FALSE     1990-04-05\n## 4  Carlos  Martínez     31 620176565 18410     NA     2019-09-10\n## 5    Lara   Liébana     27        NA 33007   TRUE     2017-03-21\n## 6  Sandra    García     19        NA 34500  FALSE     2020-07-07\n## 7    Javi     Ortiz     50 688921344 28017  FALSE     2000-01-28\nclass(tabla)## [1] \"data.frame\"\ntabla <- data.frame(\"nombre\" = nombres, \"apellido\" = apellidos, \n                    \"edad\" = edades, \"teléfono\" = tlf, \n                    \"cp\" = cp, \"casado\" = casado,\n                    \"fecha_registro\" = fecha_creacion)\ntabla##   nombre  apellido edad  teléfono    cp casado fecha_registro\n## 1  Sonia      <NA>   45 618910564 28019   TRUE     2021-03-04\n## 2  Carla  González   67 914718475 28001  FALSE     2020-10-12\n## 3 Pepito Fernández   NA 934567891 34005  FALSE     1990-04-05\n## 4 Carlos  Martínez   31 620176565 18410     NA     2019-09-10\n## 5   Lara   Liébana   27        NA 33007   TRUE     2017-03-21\n## 6 Sandra    García   19        NA 34500  FALSE     2020-07-07\n## 7   Javi     Ortiz   50 688921344 28017  FALSE     2000-01-28\nView(tabla)"},{"path":"datos.html","id":"selección-de-columnas-y-filas","chapter":"Capítulo 9 Datos estructurados","heading":"9.2.1 Selección de columnas y filas","text":"Si tenemos un data.frame ya creado y queremos añadir una columna es tan simple como usar la función data.frame() que ya hemos visto para concatenar la columna. Vamos añadir por ejemplo una nueva variable, el número de hermanos de cada individuo.Si queremos acceder una columna, fila o elemento en concreto, los data.frame tienen las mismas ventajas que una matriz, así que bastaría con usar los mismos operadores.Un data.frame solo tiene las ventajas de una matriz si que también tiene las ventajas de una «base» de datos. Por ejemplo, podemos aceder las variables por el índice de columna que ocupan pero también acceder las columnas por su nombre, poniendo el nombre de la tabla, el símbolo $ y, con el tabulador, nos aparecerá un menú de columnas elegir.\nImagen/gráfica 9.2: Menú desplegable de variables (columnas) de un data.frame.\n","code":"\n# Añadimos una nueva columna con nº de hermanos/as\nhermanos <- c(0, 0, 1, 5, 2, 3, 0)\ntabla <- data.frame(tabla, \"n_hermanos\" = hermanos)\ntabla##   nombre  apellido edad  teléfono    cp casado fecha_registro n_hermanos\n## 1  Sonia      <NA>   45 618910564 28019   TRUE     2021-03-04          0\n## 2  Carla  González   67 914718475 28001  FALSE     2020-10-12          0\n## 3 Pepito Fernández   NA 934567891 34005  FALSE     1990-04-05          1\n## 4 Carlos  Martínez   31 620176565 18410     NA     2019-09-10          5\n## 5   Lara   Liébana   27        NA 33007   TRUE     2017-03-21          2\n## 6 Sandra    García   19        NA 34500  FALSE     2020-07-07          3\n## 7   Javi     Ortiz   50 688921344 28017  FALSE     2000-01-28          0\ntabla[, 3] # Accedemos a la tercera columna## [1] 45 67 NA 31 27 19 50\ntabla[5, ] # Accedemos a la quinta fila##   nombre apellido edad teléfono    cp casado fecha_registro n_hermanos\n## 5   Lara  Liébana   27       NA 33007   TRUE     2017-03-21          2\ntabla[5, 3] # Accedemos a la tercera variable del quinto registro## [1] 27"},{"path":"datos.html","id":"primer-análisis-de-datos-arrestos-en-ee.-uu.","chapter":"Capítulo 9 Datos estructurados","heading":"9.2.2 Primer análisis de datos: arrestos en EE. UU.","text":"Además del conjunto de datos tabla que hemos construido artificialmente, vamos instalar (sino lo hemos hecho nunca en este ordenador) un paquete muy útil en R llamado {datasets}.Ahora si escribimos datasets:: y pulsamos tabulador, se nos abre un desplegable con distintos conjuntos de datos reales para ser usados: el paquete datasets nos proporciona data.frames de prueba para que podamos usarlos.Vamos jugar con el conjunto de datos datasets::USArrests, que contiene estadísticas de arrestos en 1973 (por cada 100 000 habitantes) por agresión, asesinato y violación, en cada uno de los 50 estados de Estaods Unidos.¿Cómo visualizar la cabecera de la tabla? Con la función head().¿Cómo obtener el nombre de las variables? Con la función names().El conjunto contiene los 3 tipos de delito mencionados (para cada estado), y además el porcentaje de población que vive en áreas urbanas. Esto lo podemos saber ejecutando la ayuda con ? datasets::USArrests.¿Cómo obtener el nombre de las filas (de los estados)? Con la función row.names().¿Cómo averiguar el número de registros y el número de variables? Con las funciones dim(), nrow() y ncol().¿Cómo seleccionar solo las columnas Murder y Assault para el segundo y el décimo estado? ¿Cómo cambiar el nombre de las variables? Con la función names(). ¿Cómo seleccionar y filtrar datos?En el caso de los data.frame tenemos además nuestro disposición una herramienta muy potente: la función subset(). Dicha función nos va permitir seleccionar filas y columnas la vez, tomando de entrada los siguientes argumentosx: una tabla de entrada, un data.frame de entrada.subset: la condición lógica que queramos usar para seleccionar registros (filas).select: un vector que contenga el nombre de las columnas que queremos seleccionar (lo mejor solo queremos filtrar por filas pero quizás también por columnas).Por ejemplo, vamos seleccionar solo los delitos de asesinato de aquellos estados cuyo porcentaje de población urbana sea superior al 70%.Como sucedía en otros contextos, podemos combinar condiciones lógicas, seleccionando por ejemplo aquellos estados cuyo porcentaje de población urbana sea inferior al 70% y donde las agresiones sean superiores 250 por cada 100 000 habitantes, pero luego seleccionando solo dos variables.","code":"\n# Paquetes necesarios\n# install.packages(\"datasets\") # Descomentar si nunca se ha instalado\nlibrary(datasets)\ndatasets::USArrests\nView(USArrests)\nhead(USArrests)##            Murder Assault UrbanPop Rape\n## Alabama      13.2     236       58 21.2\n## Alaska       10.0     263       48 44.5\n## Arizona       8.1     294       80 31.0\n## Arkansas      8.8     190       50 19.5\n## California    9.0     276       91 40.6\n## Colorado      7.9     204       78 38.7\nnames(USArrests)## [1] \"Murder\"   \"Assault\"  \"UrbanPop\" \"Rape\"\nrow.names(USArrests)##  [1] \"Alabama\"        \"Alaska\"         \"Arizona\"        \"Arkansas\"      \n##  [5] \"California\"     \"Colorado\"       \"Connecticut\"    \"Delaware\"      \n##  [9] \"Florida\"        \"Georgia\"        \"Hawaii\"         \"Idaho\"         \n## [13] \"Illinois\"       \"Indiana\"        \"Iowa\"           \"Kansas\"        \n## [17] \"Kentucky\"       \"Louisiana\"      \"Maine\"          \"Maryland\"      \n## [21] \"Massachusetts\"  \"Michigan\"       \"Minnesota\"      \"Mississippi\"   \n## [25] \"Missouri\"       \"Montana\"        \"Nebraska\"       \"Nevada\"        \n## [29] \"New Hampshire\"  \"New Jersey\"     \"New Mexico\"     \"New York\"      \n## [33] \"North Carolina\" \"North Dakota\"   \"Ohio\"           \"Oklahoma\"      \n## [37] \"Oregon\"         \"Pennsylvania\"   \"Rhode Island\"   \"South Carolina\"\n## [41] \"South Dakota\"   \"Tennessee\"      \"Texas\"          \"Utah\"          \n## [45] \"Vermont\"        \"Virginia\"       \"Washington\"     \"West Virginia\" \n## [49] \"Wisconsin\"      \"Wyoming\"\ndim(USArrests)## [1] 50  4\nnrow(USArrests)## [1] 50\nncol(USArrests)## [1] 4\nUSArrests[c(2, 10), c(\"Murder\", \"Assault\")]##         Murder Assault\n## Alaska    10.0     263\n## Georgia   17.4     211\nnames(USArrests) <- c(\"asesinato\", \"agresion\",\n                      \"pobl_urbana\", \"violacion\")\nsubset(USArrests, subset = pobl_urbana > 70,\n       select = c(\"asesinato\"))##               asesinato\n## Arizona             8.1\n## California          9.0\n## Colorado            7.9\n## Connecticut         3.3\n## Delaware            5.9\n## Florida            15.4\n## Hawaii              5.3\n## Illinois           10.4\n## Massachusetts       4.4\n## Michigan           12.1\n## Nevada             12.2\n## New Jersey          7.4\n## New York           11.1\n## Ohio                7.3\n## Pennsylvania        6.3\n## Rhode Island        3.4\n## Texas              12.7\n## Utah                3.2\n## Washington          4.0\nsubset(USArrests, subset = pobl_urbana < 70 & agresion > 250,\n       select = c(\"asesinato\", \"violacion\"))##                asesinato violacion\n## Alaska              10.0      44.5\n## Maryland            11.3      27.8\n## Mississippi         16.1      17.1\n## North Carolina      13.0      16.1\n## South Carolina      14.4      22.5"},{"path":"datos.html","id":"consejos-6","chapter":"Capítulo 9 Datos estructurados","heading":"9.3 Consejos","text":"CONSEJOS Acceder las funciones de los paquetesA veces puede que queramos cargar todo un paquete sino solo una función del mismo, para lo que es suficiente nombre_paquete::nombre_funcion. Recuerda que instalar un paquete es cómo comprar un libro, cargar el paquete con library() es cómo traer el libro comprado de la estantería tu mesa, y usar solo una función con nombre_paquete::nombre_funcion es cómo pedirle alguien que te arranque solo una página y te la traiga la mesa. ","code":""},{"path":"datos.html","id":"ejercicios-6","chapter":"Capítulo 9 Datos estructurados","heading":"9.4 📝 Ejercicios","text":"(haz click en las flechas para ver soluciones)Ejercicio 1: modifica el código para definir una matriz x de ceros de 3 filas y 7 columnas.Solución: Ejercicio 2: la matriz anterior, suma un 1 cada número de la matriz y divide el resultado entre 5.Solución: Ejercicio 3: tras definir la matriz x calcula su transpuesta y obtén sus dimensionesSolución: Ejercicio 4: el siguiente código define una matriz de dimensiones 4 x 3 y calcula la suma por columnas. Modifica el código para que realice la suma por filas.Solución: Ejercicio 5: con la matriz anterior definida como matrix(1:12, nrow = 4), calcula la media de todos los elementos, la media de cada fila y la media de cada columna.Solución: Ejercicio 6: el data.frame llamado airquality, del paquete {datasets}, contiene variables de la calidad del aire de la ciudad de Nueva York desde mayo hasta septiembre de 1973. Obtén el nombre de las variables.\nSolución: Ejercicio 7: obtén las dimensiones del conjunto de datos. ¿Cuántas variables hay? ¿Cuántos días se han medido?Solución: Ejercicio 8: modifica el código inferior para que nos filtre solo los datos del mes de julio.Solución: Ejercicio 9: del conjunto airquality selecciona aquellos datos que sean ni de julio ni de agosto.Solución: Ejercicio 10: modifica el siguiente código para quedarte solo con las variable Ozone y Temp.Solución: Ejercicio 11: del conjunto airquality selecciona los datos de temperatura y viento de agosto.Solución: Ejercicio 12: calcula el número de filas borradas del ejercicio anterior. Tras hacer todo ello, traduce castellano el nombre de las columnas del data.frame filtrado.Solución: Ejercicio 13: añade los datos originales una columna con la fecha completa (recuerda que es del año 1973 todas las observaciones.Solución: ","code":"\n# Matriz\nx <- matrix(0, nrow = 3, ncol = 7)\nx##      [,1] [,2] [,3] [,4] [,5] [,6] [,7]\n## [1,]    0    0    0    0    0    0    0\n## [2,]    0    0    0    0    0    0    0\n## [3,]    0    0    0    0    0    0    0\n# Matriz\nx <- matrix(0, nrow = 2, ncol = 3)\nx\n(x + 1) / 5##      [,1] [,2] [,3] [,4] [,5] [,6] [,7]\n## [1,]  0.2  0.2  0.2  0.2  0.2  0.2  0.2\n## [2,]  0.2  0.2  0.2  0.2  0.2  0.2  0.2\n## [3,]  0.2  0.2  0.2  0.2  0.2  0.2  0.2\n# Transpuesta\nt(x)##      [,1] [,2] [,3]\n## [1,]    0    0    0\n## [2,]    0    0    0\n## [3,]    0    0    0\n## [4,]    0    0    0\n## [5,]    0    0    0\n## [6,]    0    0    0\n## [7,]    0    0    0\n# Dimensiones transpuesta: pasa de ser 3x7 a 7x3\ndim(t(x))## [1] 7 3\nncol(t(x)) # número de columnas de la transpuesta## [1] 3\nnrow(t(x)) # número de filas de la transpuesta## [1] 7\n# Matriz\nmatriz <- matrix(1:12, nrow = 4)\n\n# Suma por filas\napply(matriz, MARGIN = 1, FUN = \"sum\")## [1] 15 18 21 24\n# Matriz\nmatriz <- matrix(1:12, nrow = 4)\n\n# Suma por columnas\napply(matriz, MARGIN = 2, FUN = \"sum\")## [1] 10 26 42\n# Matriz\nmatriz <- matrix(1:12, nrow = 4)\n\n#  media de todos\nmean(matriz)## [1] 6.5\n# Media por filas (MARGIN = 1 ya que es una operación por filas)\napply(matriz, MARGIN = 1, FUN = \"mean\")## [1] 5 6 7 8\n# Media por filas (MARGIN = 2 ya que es una operación por filas)\napply(matriz, MARGIN = 2, FUN = \"mean\")## [1]  2.5  6.5 10.5\nlibrary(datasets)\nnames(airquality)## [1] \"Ozone\"   \"Solar.R\" \"Wind\"    \"Temp\"    \"Month\"   \"Day\"\n# Dimensiones\ndim(airquality)## [1] 153   6\nnrow(airquality)## [1] 153\nncol(airquality)## [1] 6\n# Filtramos filas\nfiltro_fila <- subset(airquality, subset = Month == 7)\nfiltro_fila##    Ozone Solar.R Wind Temp Month Day\n## 62   135     269  4.1   84     7   1\n## 63    49     248  9.2   85     7   2\n## 64    32     236  9.2   81     7   3\n## 65    NA     101 10.9   84     7   4\n## 66    64     175  4.6   83     7   5\n## 67    40     314 10.9   83     7   6\n## 68    77     276  5.1   88     7   7\n## 69    97     267  6.3   92     7   8\n## 70    97     272  5.7   92     7   9\n## 71    85     175  7.4   89     7  10\n## 72    NA     139  8.6   82     7  11\n## 73    10     264 14.3   73     7  12\n## 74    27     175 14.9   81     7  13\n## 75    NA     291 14.9   91     7  14\n## 76     7      48 14.3   80     7  15\n## 77    48     260  6.9   81     7  16\n## 78    35     274 10.3   82     7  17\n## 79    61     285  6.3   84     7  18\n## 80    79     187  5.1   87     7  19\n## 81    63     220 11.5   85     7  20\n## 82    16       7  6.9   74     7  21\n## 83    NA     258  9.7   81     7  22\n## 84    NA     295 11.5   82     7  23\n## 85    80     294  8.6   86     7  24\n## 86   108     223  8.0   85     7  25\n## 87    20      81  8.6   82     7  26\n## 88    52      82 12.0   86     7  27\n## 89    82     213  7.4   88     7  28\n## 90    50     275  7.4   86     7  29\n## 91    64     253  7.4   83     7  30\n## 92    59     254  9.2   81     7  31\n# Filtramos filas\nfiltro_fila <- subset(., subset = Month < 6)\nfiltro_fila\n# Filtramos filas\nfiltro_fila <-\n  subset(airquality, subset = !(Month %in% c(7, 8)))\nfiltro_fila##     Ozone Solar.R Wind Temp Month Day\n## 1      41     190  7.4   67     5   1\n## 2      36     118  8.0   72     5   2\n## 3      12     149 12.6   74     5   3\n## 4      18     313 11.5   62     5   4\n## 5      NA      NA 14.3   56     5   5\n## 6      28      NA 14.9   66     5   6\n## 7      23     299  8.6   65     5   7\n## 8      19      99 13.8   59     5   8\n## 9       8      19 20.1   61     5   9\n## 10     NA     194  8.6   69     5  10\n## 11      7      NA  6.9   74     5  11\n## 12     16     256  9.7   69     5  12\n## 13     11     290  9.2   66     5  13\n## 14     14     274 10.9   68     5  14\n## 15     18      65 13.2   58     5  15\n## 16     14     334 11.5   64     5  16\n## 17     34     307 12.0   66     5  17\n## 18      6      78 18.4   57     5  18\n## 19     30     322 11.5   68     5  19\n## 20     11      44  9.7   62     5  20\n## 21      1       8  9.7   59     5  21\n## 22     11     320 16.6   73     5  22\n## 23      4      25  9.7   61     5  23\n## 24     32      92 12.0   61     5  24\n## 25     NA      66 16.6   57     5  25\n## 26     NA     266 14.9   58     5  26\n## 27     NA      NA  8.0   57     5  27\n## 28     23      13 12.0   67     5  28\n## 29     45     252 14.9   81     5  29\n## 30    115     223  5.7   79     5  30\n## 31     37     279  7.4   76     5  31\n## 32     NA     286  8.6   78     6   1\n## 33     NA     287  9.7   74     6   2\n## 34     NA     242 16.1   67     6   3\n## 35     NA     186  9.2   84     6   4\n## 36     NA     220  8.6   85     6   5\n## 37     NA     264 14.3   79     6   6\n## 38     29     127  9.7   82     6   7\n## 39     NA     273  6.9   87     6   8\n## 40     71     291 13.8   90     6   9\n## 41     39     323 11.5   87     6  10\n## 42     NA     259 10.9   93     6  11\n## 43     NA     250  9.2   92     6  12\n## 44     23     148  8.0   82     6  13\n## 45     NA     332 13.8   80     6  14\n## 46     NA     322 11.5   79     6  15\n## 47     21     191 14.9   77     6  16\n## 48     37     284 20.7   72     6  17\n## 49     20      37  9.2   65     6  18\n## 50     12     120 11.5   73     6  19\n## 51     13     137 10.3   76     6  20\n## 52     NA     150  6.3   77     6  21\n## 53     NA      59  1.7   76     6  22\n## 54     NA      91  4.6   76     6  23\n## 55     NA     250  6.3   76     6  24\n## 56     NA     135  8.0   75     6  25\n## 57     NA     127  8.0   78     6  26\n## 58     NA      47 10.3   73     6  27\n## 59     NA      98 11.5   80     6  28\n## 60     NA      31 14.9   77     6  29\n## 61     NA     138  8.0   83     6  30\n## 124    96     167  6.9   91     9   1\n## 125    78     197  5.1   92     9   2\n## 126    73     183  2.8   93     9   3\n## 127    91     189  4.6   93     9   4\n## 128    47      95  7.4   87     9   5\n## 129    32      92 15.5   84     9   6\n## 130    20     252 10.9   80     9   7\n## 131    23     220 10.3   78     9   8\n## 132    21     230 10.9   75     9   9\n## 133    24     259  9.7   73     9  10\n## 134    44     236 14.9   81     9  11\n## 135    21     259 15.5   76     9  12\n## 136    28     238  6.3   77     9  13\n## 137     9      24 10.9   71     9  14\n## 138    13     112 11.5   71     9  15\n## 139    46     237  6.9   78     9  16\n## 140    18     224 13.8   67     9  17\n## 141    13      27 10.3   76     9  18\n## 142    24     238 10.3   68     9  19\n## 143    16     201  8.0   82     9  20\n## 144    13     238 12.6   64     9  21\n## 145    23      14  9.2   71     9  22\n## 146    36     139 10.3   81     9  23\n## 147     7      49 10.3   69     9  24\n## 148    14      20 16.6   63     9  25\n## 149    30     193  6.9   70     9  26\n## 150    NA     145 13.2   77     9  27\n## 151    14     191 14.3   75     9  28\n## 152    18     131  8.0   76     9  29\n## 153    20     223 11.5   68     9  30\n# Filtramos columnas\nfiltro_col <- subset(airquality,  select = c(\"Ozone\", \"Temp\"))\nfiltro_col##     Ozone Temp\n## 1      41   67\n## 2      36   72\n## 3      12   74\n## 4      18   62\n## 5      NA   56\n## 6      28   66\n## 7      23   65\n## 8      19   59\n## 9       8   61\n## 10     NA   69\n## 11      7   74\n## 12     16   69\n## 13     11   66\n## 14     14   68\n## 15     18   58\n## 16     14   64\n## 17     34   66\n## 18      6   57\n## 19     30   68\n## 20     11   62\n## 21      1   59\n## 22     11   73\n## 23      4   61\n## 24     32   61\n## 25     NA   57\n## 26     NA   58\n## 27     NA   57\n## 28     23   67\n## 29     45   81\n## 30    115   79\n## 31     37   76\n## 32     NA   78\n## 33     NA   74\n## 34     NA   67\n## 35     NA   84\n## 36     NA   85\n## 37     NA   79\n## 38     29   82\n## 39     NA   87\n## 40     71   90\n## 41     39   87\n## 42     NA   93\n## 43     NA   92\n## 44     23   82\n## 45     NA   80\n## 46     NA   79\n## 47     21   77\n## 48     37   72\n## 49     20   65\n## 50     12   73\n## 51     13   76\n## 52     NA   77\n## 53     NA   76\n## 54     NA   76\n## 55     NA   76\n## 56     NA   75\n## 57     NA   78\n## 58     NA   73\n## 59     NA   80\n## 60     NA   77\n## 61     NA   83\n## 62    135   84\n## 63     49   85\n## 64     32   81\n## 65     NA   84\n## 66     64   83\n## 67     40   83\n## 68     77   88\n## 69     97   92\n## 70     97   92\n## 71     85   89\n## 72     NA   82\n## 73     10   73\n## 74     27   81\n## 75     NA   91\n## 76      7   80\n## 77     48   81\n## 78     35   82\n## 79     61   84\n## 80     79   87\n## 81     63   85\n## 82     16   74\n## 83     NA   81\n## 84     NA   82\n## 85     80   86\n## 86    108   85\n## 87     20   82\n## 88     52   86\n## 89     82   88\n## 90     50   86\n## 91     64   83\n## 92     59   81\n## 93     39   81\n## 94      9   81\n## 95     16   82\n## 96     78   86\n## 97     35   85\n## 98     66   87\n## 99    122   89\n## 100    89   90\n## 101   110   90\n## 102    NA   92\n## 103    NA   86\n## 104    44   86\n## 105    28   82\n## 106    65   80\n## 107    NA   79\n## 108    22   77\n## 109    59   79\n## 110    23   76\n## 111    31   78\n## 112    44   78\n## 113    21   77\n## 114     9   72\n## 115    NA   75\n## 116    45   79\n## 117   168   81\n## 118    73   86\n## 119    NA   88\n## 120    76   97\n## 121   118   94\n## 122    84   96\n## 123    85   94\n## 124    96   91\n## 125    78   92\n## 126    73   93\n## 127    91   93\n## 128    47   87\n## 129    32   84\n## 130    20   80\n## 131    23   78\n## 132    21   75\n## 133    24   73\n## 134    44   81\n## 135    21   76\n## 136    28   77\n## 137     9   71\n## 138    13   71\n## 139    46   78\n## 140    18   67\n## 141    13   76\n## 142    24   68\n## 143    16   82\n## 144    13   64\n## 145    23   71\n## 146    36   81\n## 147     7   69\n## 148    14   63\n## 149    30   70\n## 150    NA   77\n## 151    14   75\n## 152    18   76\n## 153    20   68\nfiltro_col <- subset(.,  select = c(\"Ozone\"))\nfiltro_col\n# Todo de una vez\nfiltro <- subset(airquality, subset = Month == 8,\n                 select = c(\"Temp\", \"Wind\"))\nfiltro##     Temp Wind\n## 93    81  6.9\n## 94    81 13.8\n## 95    82  7.4\n## 96    86  6.9\n## 97    85  7.4\n## 98    87  4.6\n## 99    89  4.0\n## 100   90 10.3\n## 101   90  8.0\n## 102   92  8.6\n## 103   86 11.5\n## 104   86 11.5\n## 105   82 11.5\n## 106   80  9.7\n## 107   79 11.5\n## 108   77 10.3\n## 109   79  6.3\n## 110   76  7.4\n## 111   78 10.9\n## 112   78 10.3\n## 113   77 15.5\n## 114   72 14.3\n## 115   75 12.6\n## 116   79  9.7\n## 117   81  3.4\n## 118   86  8.0\n## 119   88  5.7\n## 120   97  9.7\n## 121   94  2.3\n## 122   96  6.3\n## 123   94  6.3\n# Filas borradas\nnrow(airquality) - nrow(filtro)## [1] 122\n# Cambiamos nombres a castellano del conjunto filtrado\nnames(filtro) <- c(\"temperatura\", \"viento\")\n# Construimos las fechas (pegamos año-mes-día con \"-\")\nfechas <- \n  as_date(paste(\"1973\", airquality$Month, airquality$Day,\n                sep = \"-\"))\n\n# Añadimos\ndata.frame(airquality, fechas)##     Ozone Solar.R Wind Temp Month Day     fechas\n## 1      41     190  7.4   67     5   1 1973-05-01\n## 2      36     118  8.0   72     5   2 1973-05-02\n## 3      12     149 12.6   74     5   3 1973-05-03\n## 4      18     313 11.5   62     5   4 1973-05-04\n## 5      NA      NA 14.3   56     5   5 1973-05-05\n## 6      28      NA 14.9   66     5   6 1973-05-06\n## 7      23     299  8.6   65     5   7 1973-05-07\n## 8      19      99 13.8   59     5   8 1973-05-08\n## 9       8      19 20.1   61     5   9 1973-05-09\n## 10     NA     194  8.6   69     5  10 1973-05-10\n## 11      7      NA  6.9   74     5  11 1973-05-11\n## 12     16     256  9.7   69     5  12 1973-05-12\n## 13     11     290  9.2   66     5  13 1973-05-13\n## 14     14     274 10.9   68     5  14 1973-05-14\n## 15     18      65 13.2   58     5  15 1973-05-15\n## 16     14     334 11.5   64     5  16 1973-05-16\n## 17     34     307 12.0   66     5  17 1973-05-17\n## 18      6      78 18.4   57     5  18 1973-05-18\n## 19     30     322 11.5   68     5  19 1973-05-19\n## 20     11      44  9.7   62     5  20 1973-05-20\n## 21      1       8  9.7   59     5  21 1973-05-21\n## 22     11     320 16.6   73     5  22 1973-05-22\n## 23      4      25  9.7   61     5  23 1973-05-23\n## 24     32      92 12.0   61     5  24 1973-05-24\n## 25     NA      66 16.6   57     5  25 1973-05-25\n## 26     NA     266 14.9   58     5  26 1973-05-26\n## 27     NA      NA  8.0   57     5  27 1973-05-27\n## 28     23      13 12.0   67     5  28 1973-05-28\n## 29     45     252 14.9   81     5  29 1973-05-29\n## 30    115     223  5.7   79     5  30 1973-05-30\n## 31     37     279  7.4   76     5  31 1973-05-31\n## 32     NA     286  8.6   78     6   1 1973-06-01\n## 33     NA     287  9.7   74     6   2 1973-06-02\n## 34     NA     242 16.1   67     6   3 1973-06-03\n## 35     NA     186  9.2   84     6   4 1973-06-04\n## 36     NA     220  8.6   85     6   5 1973-06-05\n## 37     NA     264 14.3   79     6   6 1973-06-06\n## 38     29     127  9.7   82     6   7 1973-06-07\n## 39     NA     273  6.9   87     6   8 1973-06-08\n## 40     71     291 13.8   90     6   9 1973-06-09\n## 41     39     323 11.5   87     6  10 1973-06-10\n## 42     NA     259 10.9   93     6  11 1973-06-11\n## 43     NA     250  9.2   92     6  12 1973-06-12\n## 44     23     148  8.0   82     6  13 1973-06-13\n## 45     NA     332 13.8   80     6  14 1973-06-14\n## 46     NA     322 11.5   79     6  15 1973-06-15\n## 47     21     191 14.9   77     6  16 1973-06-16\n## 48     37     284 20.7   72     6  17 1973-06-17\n## 49     20      37  9.2   65     6  18 1973-06-18\n## 50     12     120 11.5   73     6  19 1973-06-19\n## 51     13     137 10.3   76     6  20 1973-06-20\n## 52     NA     150  6.3   77     6  21 1973-06-21\n## 53     NA      59  1.7   76     6  22 1973-06-22\n## 54     NA      91  4.6   76     6  23 1973-06-23\n## 55     NA     250  6.3   76     6  24 1973-06-24\n## 56     NA     135  8.0   75     6  25 1973-06-25\n## 57     NA     127  8.0   78     6  26 1973-06-26\n## 58     NA      47 10.3   73     6  27 1973-06-27\n## 59     NA      98 11.5   80     6  28 1973-06-28\n## 60     NA      31 14.9   77     6  29 1973-06-29\n## 61     NA     138  8.0   83     6  30 1973-06-30\n## 62    135     269  4.1   84     7   1 1973-07-01\n## 63     49     248  9.2   85     7   2 1973-07-02\n## 64     32     236  9.2   81     7   3 1973-07-03\n## 65     NA     101 10.9   84     7   4 1973-07-04\n## 66     64     175  4.6   83     7   5 1973-07-05\n## 67     40     314 10.9   83     7   6 1973-07-06\n## 68     77     276  5.1   88     7   7 1973-07-07\n## 69     97     267  6.3   92     7   8 1973-07-08\n## 70     97     272  5.7   92     7   9 1973-07-09\n## 71     85     175  7.4   89     7  10 1973-07-10\n## 72     NA     139  8.6   82     7  11 1973-07-11\n## 73     10     264 14.3   73     7  12 1973-07-12\n## 74     27     175 14.9   81     7  13 1973-07-13\n## 75     NA     291 14.9   91     7  14 1973-07-14\n## 76      7      48 14.3   80     7  15 1973-07-15\n## 77     48     260  6.9   81     7  16 1973-07-16\n## 78     35     274 10.3   82     7  17 1973-07-17\n## 79     61     285  6.3   84     7  18 1973-07-18\n## 80     79     187  5.1   87     7  19 1973-07-19\n## 81     63     220 11.5   85     7  20 1973-07-20\n## 82     16       7  6.9   74     7  21 1973-07-21\n## 83     NA     258  9.7   81     7  22 1973-07-22\n## 84     NA     295 11.5   82     7  23 1973-07-23\n## 85     80     294  8.6   86     7  24 1973-07-24\n## 86    108     223  8.0   85     7  25 1973-07-25\n## 87     20      81  8.6   82     7  26 1973-07-26\n## 88     52      82 12.0   86     7  27 1973-07-27\n## 89     82     213  7.4   88     7  28 1973-07-28\n## 90     50     275  7.4   86     7  29 1973-07-29\n## 91     64     253  7.4   83     7  30 1973-07-30\n## 92     59     254  9.2   81     7  31 1973-07-31\n## 93     39      83  6.9   81     8   1 1973-08-01\n## 94      9      24 13.8   81     8   2 1973-08-02\n## 95     16      77  7.4   82     8   3 1973-08-03\n## 96     78      NA  6.9   86     8   4 1973-08-04\n## 97     35      NA  7.4   85     8   5 1973-08-05\n## 98     66      NA  4.6   87     8   6 1973-08-06\n## 99    122     255  4.0   89     8   7 1973-08-07\n## 100    89     229 10.3   90     8   8 1973-08-08\n## 101   110     207  8.0   90     8   9 1973-08-09\n## 102    NA     222  8.6   92     8  10 1973-08-10\n## 103    NA     137 11.5   86     8  11 1973-08-11\n## 104    44     192 11.5   86     8  12 1973-08-12\n## 105    28     273 11.5   82     8  13 1973-08-13\n## 106    65     157  9.7   80     8  14 1973-08-14\n## 107    NA      64 11.5   79     8  15 1973-08-15\n## 108    22      71 10.3   77     8  16 1973-08-16\n## 109    59      51  6.3   79     8  17 1973-08-17\n## 110    23     115  7.4   76     8  18 1973-08-18\n## 111    31     244 10.9   78     8  19 1973-08-19\n## 112    44     190 10.3   78     8  20 1973-08-20\n## 113    21     259 15.5   77     8  21 1973-08-21\n## 114     9      36 14.3   72     8  22 1973-08-22\n## 115    NA     255 12.6   75     8  23 1973-08-23\n## 116    45     212  9.7   79     8  24 1973-08-24\n## 117   168     238  3.4   81     8  25 1973-08-25\n## 118    73     215  8.0   86     8  26 1973-08-26\n## 119    NA     153  5.7   88     8  27 1973-08-27\n## 120    76     203  9.7   97     8  28 1973-08-28\n## 121   118     225  2.3   94     8  29 1973-08-29\n## 122    84     237  6.3   96     8  30 1973-08-30\n## 123    85     188  6.3   94     8  31 1973-08-31\n## 124    96     167  6.9   91     9   1 1973-09-01\n## 125    78     197  5.1   92     9   2 1973-09-02\n## 126    73     183  2.8   93     9   3 1973-09-03\n## 127    91     189  4.6   93     9   4 1973-09-04\n## 128    47      95  7.4   87     9   5 1973-09-05\n## 129    32      92 15.5   84     9   6 1973-09-06\n## 130    20     252 10.9   80     9   7 1973-09-07\n## 131    23     220 10.3   78     9   8 1973-09-08\n## 132    21     230 10.9   75     9   9 1973-09-09\n## 133    24     259  9.7   73     9  10 1973-09-10\n## 134    44     236 14.9   81     9  11 1973-09-11\n## 135    21     259 15.5   76     9  12 1973-09-12\n## 136    28     238  6.3   77     9  13 1973-09-13\n## 137     9      24 10.9   71     9  14 1973-09-14\n## 138    13     112 11.5   71     9  15 1973-09-15\n## 139    46     237  6.9   78     9  16 1973-09-16\n## 140    18     224 13.8   67     9  17 1973-09-17\n## 141    13      27 10.3   76     9  18 1973-09-18\n## 142    24     238 10.3   68     9  19 1973-09-19\n## 143    16     201  8.0   82     9  20 1973-09-20\n## 144    13     238 12.6   64     9  21 1973-09-21\n## 145    23      14  9.2   71     9  22 1973-09-22\n## 146    36     139 10.3   81     9  23 1973-09-23\n## 147     7      49 10.3   69     9  24 1973-09-24\n## 148    14      20 16.6   63     9  25 1973-09-25\n## 149    30     193  6.9   70     9  26 1973-09-26\n## 150    NA     145 13.2   77     9  27 1973-09-27\n## 151    14     191 14.3   75     9  28 1973-09-28\n## 152    18     131  8.0   76     9  29 1973-09-29\n## 153    20     223 11.5   68     9  30 1973-09-30"},{"path":"listas.html","id":"listas","chapter":"Capítulo 10 Listas","heading":"Capítulo 10 Listas","text":"Scripts usados:script10.R. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script10.RVeamos un pequeño resumen de los datos que conocemos:vectores: colección de elementos de igual tipo. Pueden ser números, caracteres o valores lógicos, entre otros.vectores: colección de elementos de igual tipo. Pueden ser números, caracteres o valores lógicos, entre otros.matrices: colección BIDIMENSIONAL de elementos de igual tipo e igual longitud.matrices: colección BIDIMENSIONAL de elementos de igual tipo e igual longitud.data.frame: colección BIDIMENSIONAL de elementos de igual longitud pero de cualquier tipo, lo más parecido lo que conocemos como una tabla en Excel.data.frame: colección BIDIMENSIONAL de elementos de igual longitud pero de cualquier tipo, lo más parecido lo que conocemos como una tabla en Excel.Con todos estos ingredientes estamos preparados/para ver el que probablemente sea el tipo de dato más importante en R: las listas.Las listas son colecciones de variables de diferente tipo (ya lo teníamos con data.frame) pero además también de diferente longitud, con estructuras totalmente heterógeneas, todo guardado en la misma variable (incluso una lista puede tener dentro su vez otra lista).Vamos crear nuestra primera lista con tres elementos: el nombre de nuestros padres/madres, nuestro lugar de nacimiento y edades de nuestros hermanos.Si observas el objeto que hemos definido como lista, su longitud del es de 3 ya que tenemos guardados tres elementosun vector de caracteres (de longitud 2)un caracter (vector de longitud 1)un vector de números (de longitud 3)Tenemos guardados elementos de distinto tipo (algo que ya podíamos con los data.frame pero, además, de longitudes dispares).Si los juntásemos con un data.frame, al tener distinta longitud, obtendríamos un error: arguments imply differing number rows.Para acceder un elemento de la lista tenemos dos opciones:Acceder por índice: con el operador [[]] accedemos al elemento -ésimo de la lista.Acceder por índice: con el operador [[]] accedemos al elemento -ésimo de la lista.Acceder por nombre: con el operador $nombre_elemento accedemos al elemento por su nombreAcceder por nombre: con el operador $nombre_elemento accedemos al elemento por su nombreDada su heterogeneidad y flexibilidad, para acceder un elemento particular, las listas tienen una forma peculiar de acceder (con el corchete doble, en contraposición con el corchete simple que nos permite acceder varios elementos la vez)Las listas nos dan tanta flexibilidad que es el formato de dato natural para guardar datos que están estructurados, como pueden ser los datos almacenados en el registro de una persona.Vamos definir, por ejemplo, los datos que tendría un instituto de un alumno.nacimiento: una fecha.notas_insti: un data.frame.teléfonos: vector de números.nombre_padres: vector de texto.Hemos creado una lista algo más compleja de 4 elementos, los cuales podemos acceder por índice o por nombre.Como hemos comentado, también podemos hacer listas con otras listas dentro, de forma que para acceder cada nivel deberemos usar el operador [[]].¡Nos permiten guardar «datos n-dimensionales»!.Es un formato muy habitual para devolver argumentos en funciones. Imagina que la función igualdad_nombres que hemos definido en el Ejercicio 4 WARNING: operaciones aritméticas con listasUna lista se puede vectorizar de forma inmediata, por lo cualquier operación aritmética aplicada una lista dará error (para ello está disponible la función lapply(), o con las funciones del paquete purrr, pero eso lo veremos en futuros manuales más avanzados). ","code":"\nvariable_1 <- c(\"Paloma\", \"Gregorio\")\nvariable_2 <- \"Madrid\"\nvariable_3 <- c(25, 30, 26)\n\nlista <- list(\"progenitores\" = variable_1,\n              \"lugar_nacimiento\" = variable_2,\n              \"edades_hermanos\" = variable_3)\nlista## $progenitores\n## [1] \"Paloma\"   \"Gregorio\"\n## \n## $lugar_nacimiento\n## [1] \"Madrid\"\n## \n## $edades_hermanos\n## [1] 25 30 26\nlength(lista)## [1] 3\ndim(lista) # devolverá NULL al no tener dos dimensiones## NULL\nlength(lista)## [1] 3\nclass(lista) # de tipo lista## [1] \"list\"\ndata.frame(\"progenitores\" = variable_1,\n           \"lugar_nacimiento\" = variable_2,\n           \"edades_hermanos\" = variable_3)## Error in data.frame(progenitores = variable_1, lugar_nacimiento = variable_2, : arguments imply differing number of rows: 2, 1, 3\n# Accedemos por índice\nlista[[1]]## [1] \"Paloma\"   \"Gregorio\"\n# Accedemos por nombre\nlista$progenitores## [1] \"Paloma\"   \"Gregorio\"\n# Varios elementos\nlista[1:2]## $progenitores\n## [1] \"Paloma\"   \"Gregorio\"\n## \n## $lugar_nacimiento\n## [1] \"Madrid\"\n# Fecha de nacimiento\nfecha_nacimiento <- as_date(\"1989-09-10\")\n\n# Notas de asignaturas en primer y segundo parcial\nnotas <- data.frame(\"biología\" = c(5, 7), \"física\" = c(4, 5),\n                    \"matemáticas\" = c(8, 9.5))\nrow.names(notas) <- # Nombre a las filas\n  c(\"primer_parcial\", \"segundo_parcial\")\n\n# Números de teléfono\ntlf <- c(\"914719567\", \"617920765\", \"716505013\")\n\n# Nombres\npadres <- c(\"Juan\", \"Julia\")\n\n# Guardamos TODO en una lista (con nombres de cada elemento)\ndatos <- list(\"nacimiento\" = fecha_nacimiento,\n              \"notas_insti\" = notas, \"teléfonos\" = tlf,\n              \"nombre_padres\" = padres)\ndatos## $nacimiento\n## [1] \"1989-09-10\"\n## \n## $notas_insti\n##                 biología física matemáticas\n## primer_parcial         5      4         8.0\n## segundo_parcial        7      5         9.5\n## \n## $teléfonos\n## [1] \"914719567\" \"617920765\" \"716505013\"\n## \n## $nombre_padres\n## [1] \"Juan\"  \"Julia\"\ndatos[[1]]## [1] \"1989-09-10\"\ndatos$nacimiento## [1] \"1989-09-10\"\ndatos[[2]]##                 biología física matemáticas\n## primer_parcial         5      4         8.0\n## segundo_parcial        7      5         9.5\ndatos$notas_insti##                 biología física matemáticas\n## primer_parcial         5      4         8.0\n## segundo_parcial        7      5         9.5\nlista_de_listas <- list(\"lista_1\" = datos[3:4], \"lista_2\" = datos[1:2])\nnames(lista_de_listas) # Nombres de los elementos del primer nivel## [1] \"lista_1\" \"lista_2\"\nnames(lista_de_listas[[1]]) # Nombres de los elementos guardados en el primer elemento, que es a su vez una lista## [1] \"teléfonos\"     \"nombre_padres\"\nlista_de_listas[[1]][[1]] # Elemento 1 de la lista guardada como elemento 1 de la lista superior## [1] \"914719567\" \"617920765\" \"716505013\"\ndatos <- list(\"a\" = 1:5, \"b\" = 10:20)\ndatos / 2## Error in datos/2: argumento no-numérico para operador binario\nlapply(datos, FUN = function(x) { x / 2})## $a\n## [1] 0.5 1.0 1.5 2.0 2.5\n## \n## $b\n##  [1]  5.0  5.5  6.0  6.5  7.0  7.5  8.0  8.5  9.0  9.5 10.0"},{"path":"listas.html","id":"ejercicios-7","chapter":"Capítulo 10 Listas","heading":"10.1 📝 Ejercicios","text":"Ejercicio 1: define una lista de 4 elementos de tipos distintos y accede al segundo de ellos (yo incluiré uno que sea un data.frame para que veas que en una lista cabe de todo).Solución: Ejercicio 2: accede los elementos que ocupan los lugares 1 y 4 de la lista definida anteriormente.Solución:Otra opción es acceder con los nombres Ejercicio 3: define una lista de 4 elementos que contenga, en una sola variable, tu nombre, apellido, edad y si estás soltero/.Solución:","code":"\n# Ejemplo: lista con texto, numérico, lógico y un data.frame\nlista_ejemplo <- list(\"nombre\" = \"Javier\", \"cp\" = 28019,\n                      \"soltero\" = TRUE,\n                      \"notas\" = data.frame(\"mates\" = c(7.5, 8, 9),\n                                           \"lengua\" = c(10, 5, 6)))\nlista_ejemplo## $nombre\n## [1] \"Javier\"\n## \n## $cp\n## [1] 28019\n## \n## $soltero\n## [1] TRUE\n## \n## $notas\n##   mates lengua\n## 1   7.5     10\n## 2   8.0      5\n## 3   9.0      6\n# Longitud\nlength(lista_ejemplo)## [1] 4\n# Accedemos al elemento dos\nlista_ejemplo[[2]]## [1] 28019\n# Accedemos al 1 y al 4\nlista_ejemplo[c(1, 4)]## $nombre\n## [1] \"Javier\"\n## \n## $notas\n##   mates lengua\n## 1   7.5     10\n## 2   8.0      5\n## 3   9.0      6\n# Accedemos al 1 y al 4\nlista_ejemplo$nombre## [1] \"Javier\"\nlista_ejemplo$notas##   mates lengua\n## 1   7.5     10\n## 2   8.0      5\n## 3   9.0      6\nlista_ejemplo[c(\"nombre\", \"notas\")]## $nombre\n## [1] \"Javier\"\n## \n## $notas\n##   mates lengua\n## 1   7.5     10\n## 2   8.0      5\n## 3   9.0      6\n# Creamos lista: con lubridate calculamos la diferencia de años desde la fecha de nuestro nacimiento hasta hoy (sea cuando sea hoy)\nlista_personal <- list(\"nombre\" = \"Javier\",\n                       \"apellidos\" = \"Álvarez Liébana\",\n                       \"edad\" = 32,\n                       \"soltero\" = TRUE)\nlista_personal## $nombre\n## [1] \"Javier\"\n## \n## $apellidos\n## [1] \"Álvarez Liébana\"\n## \n## $edad\n## [1] 32\n## \n## $soltero\n## [1] TRUE"},{"path":"if-else.html","id":"if-else","chapter":"Capítulo 11 Estructuras de control: if-else","heading":"Capítulo 11 Estructuras de control: if-else","text":"Scripts usados:script11.R. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script11.RHasta ahora hemos trasteado con datos: hemos empezado desde una celda, para luego construir columnas (vectores), y luego juntarlas en algo parecido una base de datos (tablas o data.frame). Pero para poder manejarnos con soltura con dichos datos es importante que conozcamos cómo se usan las expresiones de control más típicas.Una expresión de control será un conjunto de órdenes que nos permiten decidir por dónde queremos que avance nuestro programa: ¿qué hacemos si sucede ? ¿Y si sucede B?Si programado en algún otro lenguaje, estarás familiarizado/con elementos como un (blabla) {...} else {...} (que los usaremos veces) o bucles y (que intentaremos usarlos en R). Si es la primera que programas en algún lenguaje, te preocupes, las empezamos desde cero, empezando por las estructuras condicionales","code":""},{"path":"if-else.html","id":"if","chapter":"Capítulo 11 Estructuras de control: if-else","heading":"11.1 if","text":"Una de las estructuras de control más famosas de cualquier lenguaje de programación es la estructura : SI las condiciones impuestas se cumplen (TRUE), ejecuta las órdenes que tengamos dentro.(x == 1) { código }: si condición (por ejemplo, x == 1) es cierta, se ejecuta código ; en caso contrario, hace nada.Definamos por ejemplo una variable sencilla, las edades de 8 personas.Para comprobar cuales son menores de edades podemos aplicar lo aprendido en temas anteriores, realizando una comparación lógica: si es menor de edad, devuelve un TRUE; en caso contrario, devuelve un FALSE.Con las funciones () y () podemos saber si todos o alguno de los elementos de un vector cumplen una condición.Con dichos elementos vamos construir nuestra primera estructura condicional: queremos que, SI existe algún menor de edad, nos imprima un mensaje.En caso de que se cumplan las condiciones dentro del () (condiciones que devuelvan un FALSE), sucederá nada. Podemos hacer lo mismo cambiando la condición: SI todos son mayores de edad, imprime el mensaje.Fíjate que en este caso hemos obtenido ningún mensaje porque la condición (edades >= 18) es cierta (son todos mayores de 18 años), así que ha ejecutado el código interno.","code":"\nedades <- c(14, 17, 24, 56, 31, 20, 87, 73)\nedades < 18## [1]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE\nall(edades >= 18) # todos mayores de edad## [1] FALSE\nany(edades < 18) # existe algun menor de edad## [1] TRUE\nif (any(edades < 18)) { # TRUE si al menos una persona mayor de edad\n  \n  print(\"existe alguna persona mayor de edad\")\n  \n}## [1] \"existe alguna persona mayor de edad\"\nif (all(edades >= 18)) { # TRUE si TODOS son mayores de edad\n  \n  print(\"todas las personas son mayores de edad\")\n  \n}"},{"path":"if-else.html","id":"if---else","chapter":"Capítulo 11 Estructuras de control: if-else","heading":"11.2 if - else","text":"La estructura (condicion) { } puede ser combinada con un else { }: cuando la condición del se cumpla (como en el último ejemplo), se ejecutará el código que haya dentro del else { }, permitiéndonos decidir que sucede cuando SÍ se cumple y cuando se cumple.(x == 1) { código } else { código B }: si condición (por ejemplo, x == 1) es cierta, se ejecuta código ; si es falsa, se ejecuta código B.Siguiendo con el ejemplo de las edades, queremos nos imprima un mensaje SI todos son mayores de edad, y un mensaje diferente en caso de que dicha condición se cumpla.Podemos ya complicar un poco el código con lo que hemos aprendido de temas anteriores. Por ejemplo, en caso de que se cumpla (es decir, que haya alguno menor de edad), queremos extraer la edad por pantalla de esos menores (con edades[edades < 18] extraeremos las edades que cumplen la condición de ser menor de edad).","code":"\nif (all(edades >= 18)) { # TRUE si TODOS son mayores de edad\n  \n  print(\"todas las personas son mayores de edad\")\n  \n} else { # si hay alguno menor de edad \n  \n  print(\"existe alguna persona menor de edad\")\n}## [1] \"existe alguna persona menor de edad\"\nif (all(edades >= 18)) { # TRUE si TODOS son mayores de edad\n  \n  print(\"todas las personas son mayores de edad\")\n  \n} else { # si hay alguno menor de edad \n  \n  print(glue(\"Existen menores de edad. Sus edades son: {paste(edades[edades < 18], collapse = '-')} años\"))\n}## Existen menores de edad. Sus edades son: 14-17 años"},{"path":"if-else.html","id":"if---else-anidados","chapter":"Capítulo 11 Estructuras de control: if-else","heading":"11.3 if - else anidados","text":"Dicha estructura - else puede anidarse, de forma que vayamos concatenando dichas estructuras, como en el ejemplo que tenemos debajo. Imagina que queremos realizar una acción si todos fuesen mayores de edad; en caso contrario, pero si todos los menores de edad tienen 16 años o más, realizar otra acción; en caso contrario, otra acción","code":"\nif (all(edades >= 18)) { # TRUE si TODOS son mayores de edad\n  \n  print(\"todas las personas son mayores de edad\")\n  \n} else if (all(edades >= 16)) { # si todos los menores de edad tienen >=16\n  \n  print(\"Existe alguna persona menor de edad pero todos con 16 años o más\")\n  \n} else {\n  \n  print(\"Existe alguna persona menor de 16 años\")\n\n}## [1] \"Existe alguna persona menor de 16 años\""},{"path":"if-else.html","id":"ifelse-vectorizado","chapter":"Capítulo 11 Estructuras de control: if-else","heading":"11.4 ifelse () vectorizado","text":"Esta estructura condicional puede ser vectorizada, de forma que podamos reunir en una sola fila un número elevado de estructuras de comparación la función ifelse(), cuyos argumentos de entrada serán la condición evaluar, lo que sucede cuando se cumple y lo que , que aplicará cada elemento del vector de entrada. Con el ejemplo de las edades, vamos dejar el dato ausente si son menores de edad, y si son mayores de edad se queda como está (recuerda: primero la condición, después lo que devuelve cuando es TRUE, y por último lo que devuelve cuando es FALSE)Todas estas estructuras solo sirven para datos numéricos. Vamos definir un vector de nombres con algunos ausentes (NA), y vamos sustituir los ausentes por el texto \"nombre_desconocido\" (los que sean ausentes, es decir los que .na() devuelva FALSE, se quedan como están).Esta función ifelse() es muy util para codificar variables o averiguar cuales cumplen una condición.","code":"\n# NA si no cumple la condición, la edad si se cumple.\nifelse(edades >= 18, edades, NA)## [1] NA NA 24 56 31 20 87 73\nnombres <- c(\"Juan\", \"María\", NA, NA, \"Lucía\", \"Carmen\", \"Javier\",\n             NA, \"Carlos\", NA, \"Gregorio\", \"Paloma\")\n\n# Si tiene ausente --> \"nombre_desconocido\"\n# Si no tiene ausente --> nombres originales\nnombres <- ifelse(is.na(nombres), \"nombre_desconocido\", nombres)\nnombres##  [1] \"Juan\"               \"María\"              \"nombre_desconocido\"\n##  [4] \"nombre_desconocido\" \"Lucía\"              \"Carmen\"            \n##  [7] \"Javier\"             \"nombre_desconocido\" \"Carlos\"            \n## [10] \"nombre_desconocido\" \"Gregorio\"           \"Paloma\""},{"path":"if-else.html","id":"consejos-7","chapter":"Capítulo 11 Estructuras de control: if-else","heading":"11.5 Consejos","text":"CONSEJOS Rainbow parenthesesUno de los errores más habituales, y que seguirás cometiendo aunque lleves años programando, es cerrar un paréntesis que abierto, por lo que el programa sabe si acabado de llamar una orden o . Para ello en las nuevas versiones de RStudio, en el menú Tools < Global Options < Code < Display podemos habilitar la opción Rainbow Parentheses que nos escribe cada par de () de un color distinto\nImagen/gráfica 11.1: Activando Rainbow Parentheses.\n Minimiza estructuras de control en el códigoPuedes colapsar las estructuras de control pulsando en la flecha que aparece la izquierda de ellas en tu script. ","code":""},{"path":"if-else.html","id":"ejercicios-8","chapter":"Capítulo 11 Estructuras de control: if-else","heading":"11.6 📝 Ejercicios","text":"(haz click en las flechas para ver soluciones)📝Ejercicio 1: modifica el código inferior para imprimir un mensaje por pantalla si todos los datos del conjunto airquality son de meses que sean enero.Solución: 📝Ejercicio 2: modifica el código inferior para guardar en una variable temperatura_alta un valor TRUE si alguno de los registros tiene una temperatura mayor 90 (están en Farenheit) y un FALSE en caso contrario.\nSolución: 📝Ejercicio 3: modifica el código inferior para imprimir un mensaje por pantalla si alguno de los días supera la temperatura de 100.Solución:debería imprimar nada porque ninguno cumple la condición. 📝Ejercicio 4: del paquete lubridate, la función hour() nos devuelve la hora de una fecha dada, y la función now() nos devuelve fecha y hora del momento actual. Con ambas funciones, y usando , imprime por pantalla \"buenas noches\" solo partir de las 21 horas. Solución: 📝Ejercicio 5: con las funciones del ejercicio anterior, y usando una estructura -else, imprime por pantalla (con cat() o print()) los mensajes \"buenos días\" (de 6 14 horas), \"buenas tardes\" (de 14 21 horas) o \"buenas noches\" (de las 21 las 6 horas). Solución: 📝Ejercicio 6: realiza el ejercicio anterior pero sin estructura de llaves, de forma concisa con ifelse(). Mira la ayuda si la necesitases poniendo ? ifelse en consola. Solución: ","code":"\n# install.packages(\"dataset\") # solo la primera vez\nlibrary(datasets) # paquete con los datos\nmes <- airquality$Month\n\nif (all(mes != 1)) { # todos con mes distinto de 1\n  \n  print(\"Ningún dato es del mes de enero\")\n  \n}## [1] \"Ningún dato es del mes de enero\"\n# install.packages(\"dataset\") # solo la primera vez\nlibrary(datasets) # paquete con los datos\nmes <- airquality$Month\n\nif (mes == 2) {\n  \n  print(\"Ningún dato es del mes de enero\")\n  \n}\ntemperatura <- airquality$Temp\ntemperatura_alta <- FALSE # por defecto FALSE\nif (any(temperatura > 90)) {\n  \n  temperatura_alta <- TRUE # si se cumple la condición, a TRUE\n  \n}\ntemperatura <- airquality$Temp\n\nif (temperatura == 100) {\n  \n  print(\"Alguno de los registros tiene temperatura superior a 90 Farenheit\")\n  \n}\ntemperatura <- airquality$Temp\n\nif (any(temperatura > 100)) { # nos basta con uno\n  \n  print(\"Alguno de los registros tiene temperatura superior a 100 Farenheit\")\n  \n}\ntemperatura <- airquality$Temp\n\nif (all(temperatura < 50)) {\n  \n  print(\"Alguno de los registros tiene temperatura superior a 100 Farenheit\")\n  \n}\n# Cargamos librería\nlibrary(lubridate)\n\n# Fecha-hora actual\nfecha_actual <- now()\n\n# Estructura if\nif (hour(fecha_actual) > 21) {\n  \n  cat(\"Buenas noches\") # print/cat dos formas de imprimir por pantalla\n}\n# Fecha actual\nfecha_actual <- now()\n\n# Estructura if-else\nif (hour(fecha_actual) > 6 & hour(fecha_actual) < 14) {\n  \n  cat(\"Buenos días\")\n  \n} else if (hour(fecha_actual) > 14 & hour(fecha_actual) < 21) {\n  \n  cat(\"Buenas tardes\")\n  \n} else {\n  \n  cat(\"Buenas noches\")\n}## Buenos días\n# Fecha actual\nfecha_actual <- now()\n\n# Estructura if-else\ncat(ifelse(hour(fecha_actual) > 6 & hour(fecha_actual) < 14,\n           \"Buenos días\",\n           ifelse(hour(fecha_actual) > 14 &\n                    hour(fecha_actual) < 21,\n                  \"Buenas tardes\", \"Buenas noches\")))## Buenos días"},{"path":"bucles.html","id":"bucles","chapter":"Capítulo 12 Estructuras de control: bucles","heading":"Capítulo 12 Estructuras de control: bucles","text":"Scripts usados:script12.R. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script12.RAunque la mayoría de veces son sustituibles por otras expresiones más legibles y eficientes, es importante que conozcamos otra archiconocida expresion de control: los bucles.: permite repetir el mismo código un número fijo (y conocido priori) de veces (normalmente en función de un índice).: permite repetir el mismo código un número indeterminado de veces, hasta que una condición dada se deje de cumplir.","code":""},{"path":"bucles.html","id":"for","chapter":"Capítulo 12 Estructuras de control: bucles","heading":"12.1 for","text":"Aunque la mayoría de las veces los bucles pueden ser sustituidos por expresiones mucho más eficientes (fíjate que ya hemos filtrado columnas, filas y aplicado operaciones por filas y columnas, sin necesitarlo), veces nos quedará más remedio que usarlos por lo que nunca viene mal conocer su estructura.Un bucle {} es una estructura que nos permite repetir un conjunto de órdenes un número finito y conocido de veces: dado un conjunto de índices, el bucle irá recorriendo cada uno de ellos, y para cada uno ejecutará lo que tenga dentro de las llaves.Veamos un ejemplo muy sencillo. Vamos definir un vector de números de longitud 4, por ejemplo x <- c(0, -7, 1, 4). Si quisiéramos devolver el primer elemento al cuadrado escribiríamos x[1]^2 (accedemos con [1] al primer elemento y lo elevamos al cuadrado). Si quisiéramos devolver el segundo elemento al cuadrado escribiríamos x[2]^2. Si lo quisiéramos hacer en general, para el elemento -ésimo (el que ocupa la posición ), escribiríamos x[]^2. Lo que haremos dentro del (...) {} es indicarle que valores irá tomando : creamos un vector de índices, en este caso 1:4, para que vaya tomando sus valores (primero =1, luego =2, etc)Lo que tenemos dentro de los paréntesis, en la línea del , es más que la secuencia de números que hemos aprendido construir.Si quisiéramos que haga lo mismo pero excluyendo por ejemplo el segundo elemento bastaría con definir los índices recorrer como c(1, 3, 4) o c(1, 3:4)Podemos definir también una variable y <- rep(0, 4) (un vector de la misma longitud pero, de momento, lleno de ceros), y hacer que elemento -ésimo del vector y se defina como x[]^2Fíjate que, dado que las operaciones en R ya se hacen por defecto de forma vectorial, elemento elemento, lo anterior es equivalente estoNo solo es equivalente sino que además, haciendo uso del paquete microbenchmark podemos comprobar como el bucle, amén de ser necesario, es menos eficiente (de ahí que la mayoría de veces los intentemos evitar si existe otra alternativa) Veamos otro ejemplo: vamos definir de nuevo un vector de edades y nombres, y vamos recorrer cada uno imprimiento un mensaje por pantalla.Fíjate que si nos queremos preocupar de si añadimos otra persona, podemos hacer que el bucle empiece en 1 y termine en el último lugar (sea el que sea), usando length()Aunque normalmente el conjunto que recorre el bucle suelen ser índices numéricos, podemos recorrer cualquier tipo de objeto, por ejemplo días e la semanaComo hemos visto, además de imprimir por pantalla podemos asignar valores variables o cambiarlas. Por ejemplo, vamos recorrer nuestro conjunto swiss de {datasets} y vamos pasar dato ausente todos los valores de fertilidad superiores 80. Para ello recorreremos cada fila para después ejecutar un .Esto sería exactamente equivalente al ifelse vectorizado que vimos en el tema anterior ¿Te acuerdas de las operaciones por filas y columnas que hicimos con los apply()? Podemos hacer lo mismo (aunque menos eficiente) con un bucle: vamos sumar las filas del conjunto swiss. Para ello antes definiremos una variable llena de ceros que luego rellenaremos, de tamaño igual al número de filas, con suma <- rep(0, nrow(swiss)) ","code":"\nx <- c(0, -7, 1, 4)\nfor (i in 1:4) {\n  \n  print(x[i]^2) # que lo imprima\n  \n}## [1] 0\n## [1] 49\n## [1] 1\n## [1] 16\n1:4## [1] 1 2 3 4\nfor (i in c(1, 3, 4)) {\n  \n  print(x[i]^2) # que lo imprima\n  \n}## [1] 0\n## [1] 1\n## [1] 16\ny <- rep(0, 4)\nfor (i in 1:4) {\n  \n  y[i] <- x[i]^2\n  \n}\n\ny## [1]  0 49  1 16\ny <- x^2\ny## [1]  0 49  1 16\n# install.packages(\"microbenchmark)\nlibrary(microbenchmark)\n\n# Le pasamos dos conjuntos de códigos, y le indicamos con\n# times el número de simulaciones a realizar para luego obtener\n# un promedio de tiempos\nmicrobenchmark(x^2, for (i in 1:4) { y[i] <- x[i]^2 },\n               times = 1000)## Unit: nanoseconds\n##                                   expr     min      lq        mean  median\n##                                    x^2     106     151     788.981     767\n##  for (i in 1:4) {     y[i] <- x[i]^2 } 1347751 1470072 1857820.061 1582175\n##       uq       max neval cld\n##     1318     24133  1000  a \n##  1840935 115524213  1000   b\nlibrary(glue)\n\nnombres <- c(\"Javi\", \"Laura\", \"Carlos\", \"Lucía\", \"Mar\")\nedades <- c(32, 51, 18, 43, 29)\n\n# Recorremos cada uno de los 5 elementos e imprimimos un\n# mensaje que depende de ese índice i\nfor (i in 1:5) { \n  \n  print(glue(\"{nombres[i]} tiene {edades[i]} años\")) \n  \n}## Javi tiene 32 años\n## Laura tiene 51 años\n## Carlos tiene 18 años\n## Lucía tiene 43 años\n## Mar tiene 29 años\nfor (i in 1:length(nombres)) { \n  \n  print(glue(\"{nombres[i]} tiene {edades[i]} años\")) \n  \n}## Javi tiene 32 años\n## Laura tiene 51 años\n## Carlos tiene 18 años\n## Lucía tiene 43 años\n## Mar tiene 29 años\nlibrary(stringr)\ndias_semana <- c(\"lunes\", \"martes\", \"miércoles\", \"jueves\",\n                 \"viernes\", \"sábado\", \"domingo\")\n\nfor (dias in dias_semana) { # dias recorre los días de la semana\n  \n  print(str_to_upper(dias)) # Imprimimos en mayúsculas el día\n}## [1] \"LUNES\"\n## [1] \"MARTES\"\n## [1] \"MIÉRCOLES\"\n## [1] \"JUEVES\"\n## [1] \"VIERNES\"\n## [1] \"SÁBADO\"\n## [1] \"DOMINGO\"\nfor (i in 1:nrow(swiss)) {\n  \n  # si cumple la condición dicha fila, ponemos ausente.\n  if (swiss$Fertility[i] > 80) { \n    \n    swiss$Fertility[i] <- NA\n    \n  }\n}\nswiss##              Fertility Agriculture Examination Education Catholic\n## Courtelary          NA        17.0          15        12     9.96\n## Delemont            NA        45.1           6         9    84.84\n## Franches-Mnt        NA        39.7           5         5    93.40\n## Moutier             NA        36.5          12         7    33.77\n## Neuveville        76.9        43.5          17        15     5.16\n## Porrentruy        76.1        35.3           9         7    90.57\n## Broye               NA        70.2          16         7    92.85\n## Glane               NA        67.8          14         8    97.16\n## Gruyere             NA        53.3          12         7    97.67\n## Sarine              NA        45.2          16        13    91.38\n## Veveyse             NA        64.5          14         6    98.61\n## Aigle             64.1        62.0          21        12     8.52\n## Aubonne           66.9        67.5          14         7     2.27\n## Avenches          68.9        60.7          19        12     4.43\n## Cossonay          61.7        69.3          22         5     2.82\n## Echallens         68.3        72.6          18         2    24.20\n## Grandson          71.7        34.0          17         8     3.30\n## Lausanne          55.7        19.4          26        28    12.11\n## La Vallee         54.3        15.2          31        20     2.15\n## Lavaux            65.1        73.0          19         9     2.84\n## Morges            65.5        59.8          22        10     5.23\n## Moudon            65.0        55.1          14         3     4.52\n## Nyone             56.6        50.9          22        12    15.14\n## Orbe              57.4        54.1          20         6     4.20\n## Oron              72.5        71.2          12         1     2.40\n## Payerne           74.2        58.1          14         8     5.23\n## Paysd'enhaut      72.0        63.5           6         3     2.56\n## Rolle             60.5        60.8          16        10     7.72\n## Vevey             58.3        26.8          25        19    18.46\n## Yverdon           65.4        49.5          15         8     6.10\n## Conthey           75.5        85.9           3         2    99.71\n## Entremont         69.3        84.9           7         6    99.68\n## Herens            77.3        89.7           5         2   100.00\n## Martigwy          70.5        78.2          12         6    98.96\n## Monthey           79.4        64.9           7         3    98.22\n## St Maurice        65.0        75.9           9         9    99.06\n## Sierre              NA        84.6           3         3    99.46\n## Sion              79.3        63.1          13        13    96.83\n## Boudry            70.4        38.4          26        12     5.62\n## La Chauxdfnd      65.7         7.7          29        11    13.79\n## Le Locle          72.7        16.7          22        13    11.22\n## Neuchatel         64.4        17.6          35        32    16.92\n## Val de Ruz        77.6        37.6          15         7     4.97\n## ValdeTravers      67.6        18.7          25         7     8.65\n## V. De Geneve      35.0         1.2          37        53    42.34\n## Rive Droite       44.7        46.6          16        29    50.43\n## Rive Gauche       42.8        27.7          22        29    58.33\n##              Infant.Mortality\n## Courtelary               22.2\n## Delemont                 22.2\n## Franches-Mnt             20.2\n## Moutier                  20.3\n## Neuveville               20.6\n## Porrentruy               26.6\n## Broye                    23.6\n## Glane                    24.9\n## Gruyere                  21.0\n## Sarine                   24.4\n## Veveyse                  24.5\n## Aigle                    16.5\n## Aubonne                  19.1\n## Avenches                 22.7\n## Cossonay                 18.7\n## Echallens                21.2\n## Grandson                 20.0\n## Lausanne                 20.2\n## La Vallee                10.8\n## Lavaux                   20.0\n## Morges                   18.0\n## Moudon                   22.4\n## Nyone                    16.7\n## Orbe                     15.3\n## Oron                     21.0\n## Payerne                  23.8\n## Paysd'enhaut             18.0\n## Rolle                    16.3\n## Vevey                    20.9\n## Yverdon                  22.5\n## Conthey                  15.1\n## Entremont                19.8\n## Herens                   18.3\n## Martigwy                 19.4\n## Monthey                  20.2\n## St Maurice               17.8\n## Sierre                   16.3\n## Sion                     18.1\n## Boudry                   20.3\n## La Chauxdfnd             20.5\n## Le Locle                 18.9\n## Neuchatel                23.0\n## Val de Ruz               20.0\n## ValdeTravers             19.5\n## V. De Geneve             18.0\n## Rive Droite              18.2\n## Rive Gauche              19.3\ndata(\"swiss\") # lo cargamos de 0\nswiss$Fertility <- ifelse(swiss$Fertility > 80, NA, swiss$Fertility)\nswiss##              Fertility Agriculture Examination Education Catholic\n## Courtelary          NA        17.0          15        12     9.96\n## Delemont            NA        45.1           6         9    84.84\n## Franches-Mnt        NA        39.7           5         5    93.40\n## Moutier             NA        36.5          12         7    33.77\n## Neuveville        76.9        43.5          17        15     5.16\n## Porrentruy        76.1        35.3           9         7    90.57\n## Broye               NA        70.2          16         7    92.85\n## Glane               NA        67.8          14         8    97.16\n## Gruyere             NA        53.3          12         7    97.67\n## Sarine              NA        45.2          16        13    91.38\n## Veveyse             NA        64.5          14         6    98.61\n## Aigle             64.1        62.0          21        12     8.52\n## Aubonne           66.9        67.5          14         7     2.27\n## Avenches          68.9        60.7          19        12     4.43\n## Cossonay          61.7        69.3          22         5     2.82\n## Echallens         68.3        72.6          18         2    24.20\n## Grandson          71.7        34.0          17         8     3.30\n## Lausanne          55.7        19.4          26        28    12.11\n## La Vallee         54.3        15.2          31        20     2.15\n## Lavaux            65.1        73.0          19         9     2.84\n## Morges            65.5        59.8          22        10     5.23\n## Moudon            65.0        55.1          14         3     4.52\n## Nyone             56.6        50.9          22        12    15.14\n## Orbe              57.4        54.1          20         6     4.20\n## Oron              72.5        71.2          12         1     2.40\n## Payerne           74.2        58.1          14         8     5.23\n## Paysd'enhaut      72.0        63.5           6         3     2.56\n## Rolle             60.5        60.8          16        10     7.72\n## Vevey             58.3        26.8          25        19    18.46\n## Yverdon           65.4        49.5          15         8     6.10\n## Conthey           75.5        85.9           3         2    99.71\n## Entremont         69.3        84.9           7         6    99.68\n## Herens            77.3        89.7           5         2   100.00\n## Martigwy          70.5        78.2          12         6    98.96\n## Monthey           79.4        64.9           7         3    98.22\n## St Maurice        65.0        75.9           9         9    99.06\n## Sierre              NA        84.6           3         3    99.46\n## Sion              79.3        63.1          13        13    96.83\n## Boudry            70.4        38.4          26        12     5.62\n## La Chauxdfnd      65.7         7.7          29        11    13.79\n## Le Locle          72.7        16.7          22        13    11.22\n## Neuchatel         64.4        17.6          35        32    16.92\n## Val de Ruz        77.6        37.6          15         7     4.97\n## ValdeTravers      67.6        18.7          25         7     8.65\n## V. De Geneve      35.0         1.2          37        53    42.34\n## Rive Droite       44.7        46.6          16        29    50.43\n## Rive Gauche       42.8        27.7          22        29    58.33\n##              Infant.Mortality\n## Courtelary               22.2\n## Delemont                 22.2\n## Franches-Mnt             20.2\n## Moutier                  20.3\n## Neuveville               20.6\n## Porrentruy               26.6\n## Broye                    23.6\n## Glane                    24.9\n## Gruyere                  21.0\n## Sarine                   24.4\n## Veveyse                  24.5\n## Aigle                    16.5\n## Aubonne                  19.1\n## Avenches                 22.7\n## Cossonay                 18.7\n## Echallens                21.2\n## Grandson                 20.0\n## Lausanne                 20.2\n## La Vallee                10.8\n## Lavaux                   20.0\n## Morges                   18.0\n## Moudon                   22.4\n## Nyone                    16.7\n## Orbe                     15.3\n## Oron                     21.0\n## Payerne                  23.8\n## Paysd'enhaut             18.0\n## Rolle                    16.3\n## Vevey                    20.9\n## Yverdon                  22.5\n## Conthey                  15.1\n## Entremont                19.8\n## Herens                   18.3\n## Martigwy                 19.4\n## Monthey                  20.2\n## St Maurice               17.8\n## Sierre                   16.3\n## Sion                     18.1\n## Boudry                   20.3\n## La Chauxdfnd             20.5\n## Le Locle                 18.9\n## Neuchatel                23.0\n## Val de Ruz               20.0\n## ValdeTravers             19.5\n## V. De Geneve             18.0\n## Rive Droite              18.2\n## Rive Gauche              19.3\nsuma <- rep(0, nrow(swiss))\nfor (i in 1:nrow(swiss)) {\n  \n  suma[i] <- sum(swiss[i, ])\n}\nsuma##  [1]     NA     NA     NA     NA 178.16 244.57     NA     NA     NA     NA\n## [11]     NA 184.12 176.77 187.73 179.52 206.30 154.00 161.41 133.45 188.94\n## [21] 180.53 164.02 173.34 157.00 180.10 183.33 165.06 171.32 168.46 166.50\n## [31] 281.21 286.68 292.30 285.06 272.72 275.76     NA 283.33 172.72 147.69\n## [41] 154.52 188.92 162.17 146.45 186.54 204.93 199.13"},{"path":"bucles.html","id":"while","chapter":"Capítulo 12 Estructuras de control: bucles","heading":"12.2 while","text":"Otra manera de diseñar un bucle es con la estructura {}, que ejecutará el bucle un número de veces pero que priori es desconocido, lo hará hasta que la condición impuesta deje de ser TRUE (en el sabemos de antemano el número de iteraciones). Por ejemplo, vamos inicializar una variable ciclos <- 1, y en cada paso aumentaremos una unidad ciclos, y saldremos del bucle hasta que ciclos > 5¿Y qué sucede cuando la condición nunca llega ser FALSE? Compruébalo tú mismo/.","code":"\nciclos <- 1\n# Mientras el número de ciclos sea inferior 5, imprime\nwhile(ciclos <= 5) {\n  \n  print(paste(\"Todavía no, vamos por el ciclo \", ciclos)) # Pegamos la frase al número de ciclo por el que vayamos con paste\n  ciclos <- ciclos + 1\n  \n}## [1] \"Todavía no, vamos por el ciclo  1\"\n## [1] \"Todavía no, vamos por el ciclo  2\"\n## [1] \"Todavía no, vamos por el ciclo  3\"\n## [1] \"Todavía no, vamos por el ciclo  4\"\n## [1] \"Todavía no, vamos por el ciclo  5\"\nwhile (1 > 0) { # Nunca va a dejar de ser cierto\n  \n  print(\"Presiona ESC para salir del bucle\")\n  \n}"},{"path":"bucles.html","id":"breaknext","chapter":"Capítulo 12 Estructuras de control: bucles","heading":"12.3 break/next","text":"En R tenemos dos comandos reservados para poder abortar un bucle o avanzar forzosamente un bucle: dichas palabras son break y next. La primera nos habilita para parar un bucle aunque haya llegado al final de su conjunto de índices recorrer (o se siga cumpliendo la condición del {}).Vamos hacer un bucle de 1 10: cuando el índice es igual 7, el bucle se para.Mientras que la segunda, el next obliga al bucle avanzar la siguiente interacción, abortando la iteración actual en la que se encuentra. Vamos ahora hacer un bucle de 1 10: cuando el índice es igual 7, el bucle salta al = 8.","code":"\nfor(i in 1:10) {\n  if (i == 7) {\n    \n    break # si i es 7, el bucle frena aquí (nunca llegará a imprimir el 7 ni los sucesivos)\n    \n  }\n  print(i)\n}## [1] 1\n## [1] 2\n## [1] 3\n## [1] 4\n## [1] 5\n## [1] 6\nfor(i in 1:10) {\n  if (i == 7) {\n    \n    next # si i es 7, la iteración frenará aquí y pasará a la siguiente por lo que imprimirá todos menos el 7\n    \n  }\n  print(i)\n}## [1] 1\n## [1] 2\n## [1] 3\n## [1] 4\n## [1] 5\n## [1] 6\n## [1] 8\n## [1] 9\n## [1] 10"},{"path":"bucles.html","id":"repeat","chapter":"Capítulo 12 Estructuras de control: bucles","heading":"12.4 repeat","text":"Aunque es una opción muy poco usada, existe una estructura de control llamada repeat{} que nos ejecuta un bucle de forma infinita hasta que le ordenemos parar con un break. WARNING: cuidado con los bucles infinitosLas estucturas {} y repeat{} son de las menos usadas por su peligrosidad, ya que si incluimos un break o la condición nunca llega ser TRUE, el bucle seguirá ejecutándose de forma infinita y solo podrá ser detenido abortando la ejecución con la tecla ESC. ","code":"\nconteo <- 0\nrepeat { \n  \n  conteo <- conteo + 1\n  if (conteo >= 100) { break }\n  \n}\nconteo## [1] 100"},{"path":"bucles.html","id":"consejos-8","chapter":"Capítulo 12 Estructuras de control: bucles","heading":"12.5 Consejos","text":"CONSEJOS Evita bucles (si puedes)Recuerda: por lo general, di los bucles en R (intenta evitarlos, en la mayoría de casos hay una alternativa mejor). Evita bucles (parte II)Evita al máximo los bucles en R: suele existir una forma más eficiente de programarlo. Veamos un ejemplo muy sencillo: dado un vector de índices idx, queremos calcular su cuadrado y guardarlo. Vamos comparar como sería con un sencillo bucle y de forma vectorial, repitiéndolo 1000 veces para sacar tiempos medios, haciendo uso del paquete microbenchmark.Una tarea tan sencilla, programada en un bucle (segunda fila), tarda 40 veces más que hacerlo de forma vectorial (primera fila) (elevando cada elemento al cuadrado, iterando internamente, sin necesidad de implementar un bucle).","code":"\nidx <- 1:10000\nx <- y <- rep(0, length(idx))\nmicrobenchmark::microbenchmark(x <- idx^2, \n                               for (i in idx) {  y[i] <- idx[i]^2},\n                               times = 1e3)## Unit: microseconds\n##                                     expr      min        lq       mean   median\n##                               x <- idx^2   18.361   43.7695   51.02143   52.849\n##  for (i in idx) {     y[i] <- idx[i]^2 } 1827.169 2058.4970 2404.84884 2177.657\n##        uq      max neval cld\n##    61.172  176.812  1000  a \n##  2513.735 9395.285  1000   b"},{"path":"bucles.html","id":"ejercicios-9","chapter":"Capítulo 12 Estructuras de control: bucles","heading":"12.6 📝 Ejercicios","text":"(haz click en las flechas para ver soluciones)📝Ejercicio 1: modifica el código inferior para diseñar un bucle de 5 iteraciones que recorra los 5 primeros impares y les sume uno.Solución: 📝Ejercicio 2: modifica el código inferior para diseñar un bucle que parta con una variable conteo <- 1 y pare cuando llegue 6.Solución: 📝Ejercicio 3: construye un bucle que recorra las primeras 8 filas del conjunto de datos datasets::airquality y que imprima un mensaje con la temperaturaSolución: 📝Ejercicio 4: diseña un bucle de 200 iteraciones que, empezando en un valor inicial de 100 (euros), te sume 3€ si el número actual es par y te reste 5€ si es impar. Un número par o impar: un número par será todo aquel número que al dividir entre 2, la división es exacta, es decir, que su resto es nulo. Por ejemplo, al dividir 5 entre 2, el resto es 1, pero al dividir 12 entre 2 el resto es 0. Para calcula ese resto usaremos la función %%.Solución: 📝Ejercicio 5: diseña el anterior bucle pero guardando el dinero de cada iteración.Solución: 📝Ejercicio 6: diseña el bucle del ejercicio 4 parando cuando nos quede dinero.Solución:","code":"\n# Una forma\nfor (i in seq(1, 9, by = 2)) {\n  \n  print(i + 1)\n}## [1] 2\n## [1] 4\n## [1] 6\n## [1] 8\n## [1] 10\n# Otra\nfor (i in c(1, 3, 5, 7, 9)) {\n  \n  print(i + 1)\n}## [1] 2\n## [1] 4\n## [1] 6\n## [1] 8\n## [1] 10\nfor (i in 1:5) {\n  \n  print(i)\n}## [1] 1\n## [1] 2\n## [1] 3\n## [1] 4\n## [1] 5\nconteo <- 1\nwhile (conteo < 6) {\n  \n  print(conteo)\n  conteo <- conteo + 1\n}## [1] 1\n## [1] 2\n## [1] 3\n## [1] 4\n## [1] 5\nconteo <- 1\nwhile (conteo == 2) {\n  \n  print(conteo)\n}\nfor (i in 1:8) {\n  \n  print(glue(\"La temperatura es de {airquality$Temp[i]}ºF\"))\n}## La temperatura es de 67ºF\n## La temperatura es de 72ºF\n## La temperatura es de 74ºF\n## La temperatura es de 62ºF\n## La temperatura es de 56ºF\n## La temperatura es de 66ºF\n## La temperatura es de 65ºF\n## La temperatura es de 59ºF\n# pares e impares\n5 %% 2## [1] 1\n12 %% 2## [1] 0\n23 %% 2## [1] 1\n46 %% 2## [1] 0\n# dinero inicial\ndinero <- 100\n\n# Bucle for\nfor (i in 1:200) {\n  \n  dinero <- ifelse(dinero %% 2 == 0, dinero + 3, dinero  - 5)\n  \n}\ndinero## [1] -100\n# vector de importes\ndinero <- rep(0, 201)\ndinero[1] <- 100 # dinero inicial\n\n# Bucle for\nfor (i in 2:201) {\n  \n  # si dinero[i - 1] es par o  impar\n  dinero[i] <- ifelse(dinero[i - 1] %% 2 == 0, dinero[i - 1] + 3,\n                      dinero[i - 1]  - 5)\n  \n}\ndinero##   [1]  100  103   98  101   96   99   94   97   92   95   90   93   88   91   86\n##  [16]   89   84   87   82   85   80   83   78   81   76   79   74   77   72   75\n##  [31]   70   73   68   71   66   69   64   67   62   65   60   63   58   61   56\n##  [46]   59   54   57   52   55   50   53   48   51   46   49   44   47   42   45\n##  [61]   40   43   38   41   36   39   34   37   32   35   30   33   28   31   26\n##  [76]   29   24   27   22   25   20   23   18   21   16   19   14   17   12   15\n##  [91]   10   13    8   11    6    9    4    7    2    5    0    3   -2    1   -4\n## [106]   -1   -6   -3   -8   -5  -10   -7  -12   -9  -14  -11  -16  -13  -18  -15\n## [121]  -20  -17  -22  -19  -24  -21  -26  -23  -28  -25  -30  -27  -32  -29  -34\n## [136]  -31  -36  -33  -38  -35  -40  -37  -42  -39  -44  -41  -46  -43  -48  -45\n## [151]  -50  -47  -52  -49  -54  -51  -56  -53  -58  -55  -60  -57  -62  -59  -64\n## [166]  -61  -66  -63  -68  -65  -70  -67  -72  -69  -74  -71  -76  -73  -78  -75\n## [181]  -80  -77  -82  -79  -84  -81  -86  -83  -88  -85  -90  -87  -92  -89  -94\n## [196]  -91  -96  -93  -98  -95 -100\ndinero <- 100 # dinero inicial\n\n# Bucle while\nwhile (dinero > 0) {\n  \n  dinero <- ifelse(dinero %% 2 == 0, dinero + 3, dinero - 5)\n  \n}\ndinero## [1] 0"},{"path":"funciones.html","id":"funciones","chapter":"Capítulo 13 Funciones","heading":"Capítulo 13 Funciones","text":"Scripts usados:script13.R. Ver en https://github.com/dadosdelaplace/courses-intro-R/blob/main/scripts/script13.REn R solo podemos usar las funciones predeterminadas que vienen ya cargadas, o las de los paquetes que instalamos, como sum() o mean(). Además podemos crear nuestras propias funciones para automatizar tareas que vayamos repetir lo largo de nuestro código.¿Cómo crear nuestra propia función? Veamos su esquema básico. Para crear una función necesitamosUn nombre, por ejemplo nombre_funcion (sin espacios ni caracteres extraños)dicho nombre le asignamos <- la palabra reservada function().Dentro de function() definimos los argumentos de entrada que usará la función.Dentro de {} incluiremos la órdenes.Finalizaremos la función con return() indicando los argumentos de salidaEn el esquema anteriorargumento_1, argumento_2, …: serán los argumentos de entrada, los argumentos que toma la función para ejecutar el código que tiene dentrocódigo: líneas de código que queramos que ejecute la función. IMPORTANTE: todas las variables que definamos dentro de la función son variables locales, solo existirán dentro de la función salvo que especifiquemos lo contrario.return(variable_salida): dentro del comando return() se introducirán los argumentos de salida, que puede ser un número, un data.frame, un caracter, una gráfica, una matriz…","code":"\n# No ejecutar --> esquema conceptual\nnombre_funcion <- function(argumento_1, argumento_2, ... ) {\n  \n  # Código que queramos ejecutar en la función\n  código\n  \n  # Salida\n  return(variable_salida)\n}"},{"path":"funciones.html","id":"primera-función","chapter":"Capítulo 13 Funciones","heading":"13.1 Primera función","text":"Veamos un ejemplo muy simple de función para calcular el área de un rectángulo.¿Qué se necesita para calcular el área? Dado que el área de un rectángulo se calcula como el producto de sus lados, necesitaremos precisamente eso, sus lados: esos serán los argumentos de entrada (lado_1 y lado_2). el valor devolver será justo su área, calculada como lado_1 * lado_2.Nombre –> calcular_areaArgumentos –> lado_1, lado_2Código –> area <- lado_1 * lado_2Salida –> return(area)También podemos hacer una definición directa, sin almacenar variables por el camino¿Cómo aplicar la función? Haciendo uso del nombre y los valores de los argumentos, usamos calcular_area() y le pasamos los dos argumentos de entrada.Imagina ahora que nos damos cuenta que el 90% de las veces usamos dicha función para calcular el área de un cuadrado (es decir, solo necesitamos un argumento, un lado, ya que en un cuadrado lado_1 = lado_2). Para ello, R nos permite definir argumentos por defecto en la función (tomarán dicho valor salvo que le asignemos otro, como nos ha pasado con el argumento na.rm para operar con datos ausentes). ¿Por qué asignar lado_2 = lado_1 por defecto, para ahorrar líneas de código y tiempo?Ahora, si indicamos nada, por defecto el segundo lado será igual al primero (un cuadrado), y si se lo añadimos usará ambos. Compliquemos un poco la función y añadamos en la salida los valores de cada lado, etiquetados como lado_1 y lado_2, empaquetando la salida en una lista.Veamos que nos devuelve ahoraAntes nos daba igual el orden de los argumentos pero ahora , ya que en la salida incluimos lado_1 y lado_2. Es altamente recomendable hacer la llamada la función indicando explícitamente los argumentos argumento_1 = valor_1 para mejorar la legibilidad e interpretabilidad de nuestro código (recuerda: programa como escribirías en castellano).Parece una tontería lo que hemos hecho pero hemos cruzado una frontera importante: hemos pasado de consumir conocimiento (código de otros paquetes, elaborado por otros/), generar conocimiento, creando nuestras propias funciones. En este caso ganaremos el Nobel por nuestro aporte, pero en un futuro… Si la Unión Europea lo ganó, hay opciones :)","code":"\n# Definición del nombre de función y argumentos de entrada\ncalcular_area <- function(lado_1, lado_2) {\n  \n  # Cuerpo de la función (lo que hace)\n  area <- lado_1 * lado_2\n  \n  # Resultado (lo que devuelve)\n  return(area)\n  \n}\n# Definición del nombre de función y argumentos de entrada\ncalcular_area <- function(lado_1, lado_2) {\n\n  # Resultado que devolvemos\n  return(lado_1 * lado_2)\n  \n}\n# Aplicación de la función con los parámetros por defecto\ncalcular_area(5, 3) # área de un rectángulo 5 x 3 ## [1] 15\ncalcular_area(1, 5) # área de un rectángulo 1 x 5## [1] 5\ncalcular_area(3, 3) # área de un rectángulo 3 x 3 ## [1] 9\n# Definición del nombre de función y argumentos de entrada\n# por defecto lado_2 = lado_1\ncalcular_area <- function(lado_1, lado_2 = lado_1) {\n  \n  # Cuerpo de la función\n  area <- lado_1 * lado_2\n  \n  # Resultado que devolvemos\n  return(area)\n  \n}\ncalcular_area(lado_1 = 5) # cuadrado: si no indicamos nada, lado_2 = lado_1## [1] 25\ncalcular_area(lado_1 = 5, lado_2 = 7) # rectángulo## [1] 35\n# Definición del nombre de función y argumentos de entrada\ncalcular_area <- function(lado_1, lado_2 = lado_1) {\n  \n  # Cuerpo de la función\n  area <- lado_1 * lado_2\n  \n  # Resultado\n  return(list(\"area\" = area, \"lado_1\" = lado_1, \"lado_2\" = lado_2))\n  \n}\nsalida <- calcular_area(5, 3)\nsalida## $area\n## [1] 15\n## \n## $lado_1\n## [1] 5\n## \n## $lado_2\n## [1] 3\nsalida[\"area\"]## $area\n## [1] 15\nsalida[\"lado_1\"]## $lado_1\n## [1] 5\nsalida[\"lado_2\"]## $lado_2\n## [1] 3\n# Equivalente a calcular_area(5, 3)\ncalcular_area(lado_1 = 5, lado_2 = 3)## $area\n## [1] 15\n## \n## $lado_1\n## [1] 5\n## \n## $lado_2\n## [1] 3"},{"path":"funciones.html","id":"variables-localesglobales","chapter":"Capítulo 13 Funciones","heading":"13.2 Variables locales/globales","text":"Un aspecto importante sobre el que reflexionar con las funciones: ¿qué sucede si nombramos una variable dentro de una función que se nos ha olvidado asignar un valor dentro de la misma? Debemos ser cautos al usar funciones en R, ya que debido la «regla lexicográfica», si una variable se define dentro de la función, R buscará dicha variable en el entorno de variables.Construyamos una función de ejemplo que toma ningún argumento de entrada: solo imprime el valor de x. Como dentro de la función x está definida, usará el valor definido fuera de la función.Si una variable ya está definida fuera de la función (entorno global), y además es usada dentro de la misma cambiando su valor, el valor de dicha variable solo cambia dentro de la función pero en el entorno global.Si queremos que además de cambiar localmente lo haga globalmente deberemos usar la doble asignación (<<-).","code":"\nx <- 1\nfuncion_ejemplo <- function() {\n    \n  print(x) # No devuelve nada per se, solo realiza la acción de imprimir en consola\n}\nfuncion_ejemplo()## [1] 1\nx <- 1\nfuncion_ejemplo <- function() {\n    \n  x <- 2\n  print(x) # lo que vale dentro\n}\nfuncion_ejemplo() # lo que vale dentro## [1] 2\nprint(x) # lo que vale fuera## [1] 1\nx <- 1\ny <- 2\nfuncion_ejemplo <- function() {\n  \n  x <- 3 # no cambia globalmente, solo localmente\n  y <<- 0 # cambia globalmente\n  print(x)\n  print(y)\n}\n\nfuncion_ejemplo() # lo que vale dentro## [1] 3\n## [1] 0\nx # lo que vale fuera## [1] 1\ny # lo que vale fuera## [1] 0"},{"path":"funciones.html","id":"ejercicios-10","chapter":"Capítulo 13 Funciones","heading":"13.3 📝 Ejercicios","text":"(haz click en las flechas para ver soluciones)Ejercicio 1: modifica el código inferior para definir una función llamada funcion_suma, de forma que dados dos elementos, devuelve su suma.Solución: Ejercicio 2: modifica el código inferior para definir una función llamada funcion_producto, de forma que dados dos elementos, devuelve su producto.Solución: Ejercicio 3: modifica el código inferior para definir una función llamada funcion_producto, de forma que dados dos elementos, devuelve su producto, pero que por defecto calcule el cuadrado (es decir, por defecto un solo argumento, y el resultado sea el número por sí mismo)Solución: Ejercicio 4: define una función llamada igualdad_nombres que, dados dos nombres persona_1 e persona_2, nos diga si son iguales o . Hazlo considerando importantes las mayúsculas, y sin que importen las mayúsculas. Recuerda que con toupper() podemos pasar todo un texto mayúscula. Solución: Ejercicio 5: define una función llamada pares que, dados dos números x e y, nos diga si la suma de ambos es par o .Recuerda que con %% podemos obtener el resto de un número al dividir entre 2.Solución: Ejercicio 6: define una función llamada pasar_a_celsius que, dada una temperatura \\(x\\) en Fahrenheit, la convierta grados Celsius (\\(ºC = (ºF - 32) * \\frac{5}{9}\\)). Aplica la función la columna Temp del conjunto airquality, e incorpórala al fichero en una nueva columna Temp_Celsius.\nSolución: ","code":"\n# Definimos función\nnombre <- function(x, y) {\n  \n  # Sumamos\n  suma <- # código a ejecutar\n  \n  # ¿Qué devolvemos?\n  return()\n}\n\n# Aplicamos la función\nsuma(3, 7)\n# Definimos función\nfuncion_suma <- function(x, y) {\n  \n  # Sumamos\n  suma <- x + y\n  \n  # Devolvemos la salida\n  return(suma)\n}\n\n# Aplicamos la función\nfuncion_suma(3, 7)## [1] 10\n# Definimos función\nnombre <- function(x, y) {\n  \n  # Multiplicamos\n  producto <- # código de la multiplicación\n  \n  # ¿Qué devolvemos?\n  return()\n}\n\n# Aplicamos la función\nproducto(3, -7)\n# Definimos función\nfuncion_producto <- function(x, y) {\n  \n  # Multiplicamos\n  producto <- x * y\n  \n  # Devolvemos la salida\n  return(producto)\n}\n\n# Aplicamos la función\nfuncion_producto(3, -7)## [1] -21\n# Definimos función\nnombre <- function(x, y) {\n  \n  # Multiplicamos\n  producto <- # código de la multiplicación\n  \n  # ¿Qué devolvemos?\n  return()\n}\n\n# Aplicamos la función solo con un argumento\nproducto(3)\n\n# Aplicamos la función con dos argumentos\nproducto(3, -7)\n# Definimos función\nfuncion_producto <- function(x, y = x) {\n  \n  # Multiplicamos\n  producto <- x * y\n  \n  # Devolvemos la salida\n  return(producto)\n}\n\n# Aplicamos la función\nfuncion_producto(3) # por defecto x = 3, y = 3## [1] 9\nfuncion_producto(3, -7)## [1] -21\n# Distinguiendo mayúsculas\nigualdad_nombres <- function(persona_1, persona_2) {\n  \n  return(persona_1 == persona_2)\n}\nigualdad_nombres(\"Javi\", \"javi\")## [1] FALSE\nigualdad_nombres(\"Javi\", \"Lucía\")## [1] FALSE\n# Sin importar mayúsculas\nigualdad_nombres <- function(persona_1, persona_2) {\n  \n  return(toupper(persona_1) == toupper(persona_2))\n}\nigualdad_nombres(\"Javi\", \"javi\")## [1] TRUE\nigualdad_nombres(\"Javi\", \"Lucía\")## [1] FALSE\n2 %% 2 # par, resto 0## [1] 0\n3 %% 2 # impar, resto 1## [1] 1\n# Definimos función\npares <- function(x, y) {\n  \n  # Sumamos\n  suma <- x + y\n  \n  # Comprobamos si es par\n  par <- suma %% 2 == 0\n  \n  # Devolvemos la salida\n  return(par)\n}\n\n# Aplicamos la función\npares(1, 3) # suma 4 (par)## [1] TRUE\npares(2, 7) # suma 9 (impar)## [1] FALSE\n# Definimos función\npasar_a_celsius <- function(x) {\n  \n  # Temperatura en Celsius\n  x_celsius <- (x - 32) * (5 / 9)\n  \n  # Devolvemos la salida\n  return(x_celsius)\n}\n\n# Aplicamos la función\npasar_a_celsius(0)## [1] -17.77778\npasar_a_celsius(80)## [1] 26.66667\n# Aplicamos\ndata.frame(airquality,\n           \"Temp_Celsius\" = pasar_a_celsius(airquality$Temp))##     Ozone Solar.R Wind Temp Month Day Temp_Celsius\n## 1      41     190  7.4   67     5   1     19.44444\n## 2      36     118  8.0   72     5   2     22.22222\n## 3      12     149 12.6   74     5   3     23.33333\n## 4      18     313 11.5   62     5   4     16.66667\n## 5      NA      NA 14.3   56     5   5     13.33333\n## 6      28      NA 14.9   66     5   6     18.88889\n## 7      23     299  8.6   65     5   7     18.33333\n## 8      19      99 13.8   59     5   8     15.00000\n## 9       8      19 20.1   61     5   9     16.11111\n## 10     NA     194  8.6   69     5  10     20.55556\n## 11      7      NA  6.9   74     5  11     23.33333\n## 12     16     256  9.7   69     5  12     20.55556\n## 13     11     290  9.2   66     5  13     18.88889\n## 14     14     274 10.9   68     5  14     20.00000\n## 15     18      65 13.2   58     5  15     14.44444\n## 16     14     334 11.5   64     5  16     17.77778\n## 17     34     307 12.0   66     5  17     18.88889\n## 18      6      78 18.4   57     5  18     13.88889\n## 19     30     322 11.5   68     5  19     20.00000\n## 20     11      44  9.7   62     5  20     16.66667\n## 21      1       8  9.7   59     5  21     15.00000\n## 22     11     320 16.6   73     5  22     22.77778\n## 23      4      25  9.7   61     5  23     16.11111\n## 24     32      92 12.0   61     5  24     16.11111\n## 25     NA      66 16.6   57     5  25     13.88889\n## 26     NA     266 14.9   58     5  26     14.44444\n## 27     NA      NA  8.0   57     5  27     13.88889\n## 28     23      13 12.0   67     5  28     19.44444\n## 29     45     252 14.9   81     5  29     27.22222\n## 30    115     223  5.7   79     5  30     26.11111\n## 31     37     279  7.4   76     5  31     24.44444\n## 32     NA     286  8.6   78     6   1     25.55556\n## 33     NA     287  9.7   74     6   2     23.33333\n## 34     NA     242 16.1   67     6   3     19.44444\n## 35     NA     186  9.2   84     6   4     28.88889\n## 36     NA     220  8.6   85     6   5     29.44444\n## 37     NA     264 14.3   79     6   6     26.11111\n## 38     29     127  9.7   82     6   7     27.77778\n## 39     NA     273  6.9   87     6   8     30.55556\n## 40     71     291 13.8   90     6   9     32.22222\n## 41     39     323 11.5   87     6  10     30.55556\n## 42     NA     259 10.9   93     6  11     33.88889\n## 43     NA     250  9.2   92     6  12     33.33333\n## 44     23     148  8.0   82     6  13     27.77778\n## 45     NA     332 13.8   80     6  14     26.66667\n## 46     NA     322 11.5   79     6  15     26.11111\n## 47     21     191 14.9   77     6  16     25.00000\n## 48     37     284 20.7   72     6  17     22.22222\n## 49     20      37  9.2   65     6  18     18.33333\n## 50     12     120 11.5   73     6  19     22.77778\n## 51     13     137 10.3   76     6  20     24.44444\n## 52     NA     150  6.3   77     6  21     25.00000\n## 53     NA      59  1.7   76     6  22     24.44444\n## 54     NA      91  4.6   76     6  23     24.44444\n## 55     NA     250  6.3   76     6  24     24.44444\n## 56     NA     135  8.0   75     6  25     23.88889\n## 57     NA     127  8.0   78     6  26     25.55556\n## 58     NA      47 10.3   73     6  27     22.77778\n## 59     NA      98 11.5   80     6  28     26.66667\n## 60     NA      31 14.9   77     6  29     25.00000\n## 61     NA     138  8.0   83     6  30     28.33333\n## 62    135     269  4.1   84     7   1     28.88889\n## 63     49     248  9.2   85     7   2     29.44444\n## 64     32     236  9.2   81     7   3     27.22222\n## 65     NA     101 10.9   84     7   4     28.88889\n## 66     64     175  4.6   83     7   5     28.33333\n## 67     40     314 10.9   83     7   6     28.33333\n## 68     77     276  5.1   88     7   7     31.11111\n## 69     97     267  6.3   92     7   8     33.33333\n## 70     97     272  5.7   92     7   9     33.33333\n## 71     85     175  7.4   89     7  10     31.66667\n## 72     NA     139  8.6   82     7  11     27.77778\n## 73     10     264 14.3   73     7  12     22.77778\n## 74     27     175 14.9   81     7  13     27.22222\n## 75     NA     291 14.9   91     7  14     32.77778\n## 76      7      48 14.3   80     7  15     26.66667\n## 77     48     260  6.9   81     7  16     27.22222\n## 78     35     274 10.3   82     7  17     27.77778\n## 79     61     285  6.3   84     7  18     28.88889\n## 80     79     187  5.1   87     7  19     30.55556\n## 81     63     220 11.5   85     7  20     29.44444\n## 82     16       7  6.9   74     7  21     23.33333\n## 83     NA     258  9.7   81     7  22     27.22222\n## 84     NA     295 11.5   82     7  23     27.77778\n## 85     80     294  8.6   86     7  24     30.00000\n## 86    108     223  8.0   85     7  25     29.44444\n## 87     20      81  8.6   82     7  26     27.77778\n## 88     52      82 12.0   86     7  27     30.00000\n## 89     82     213  7.4   88     7  28     31.11111\n## 90     50     275  7.4   86     7  29     30.00000\n## 91     64     253  7.4   83     7  30     28.33333\n## 92     59     254  9.2   81     7  31     27.22222\n## 93     39      83  6.9   81     8   1     27.22222\n## 94      9      24 13.8   81     8   2     27.22222\n## 95     16      77  7.4   82     8   3     27.77778\n## 96     78      NA  6.9   86     8   4     30.00000\n## 97     35      NA  7.4   85     8   5     29.44444\n## 98     66      NA  4.6   87     8   6     30.55556\n## 99    122     255  4.0   89     8   7     31.66667\n## 100    89     229 10.3   90     8   8     32.22222\n## 101   110     207  8.0   90     8   9     32.22222\n## 102    NA     222  8.6   92     8  10     33.33333\n## 103    NA     137 11.5   86     8  11     30.00000\n## 104    44     192 11.5   86     8  12     30.00000\n## 105    28     273 11.5   82     8  13     27.77778\n## 106    65     157  9.7   80     8  14     26.66667\n## 107    NA      64 11.5   79     8  15     26.11111\n## 108    22      71 10.3   77     8  16     25.00000\n## 109    59      51  6.3   79     8  17     26.11111\n## 110    23     115  7.4   76     8  18     24.44444\n## 111    31     244 10.9   78     8  19     25.55556\n## 112    44     190 10.3   78     8  20     25.55556\n## 113    21     259 15.5   77     8  21     25.00000\n## 114     9      36 14.3   72     8  22     22.22222\n## 115    NA     255 12.6   75     8  23     23.88889\n## 116    45     212  9.7   79     8  24     26.11111\n## 117   168     238  3.4   81     8  25     27.22222\n## 118    73     215  8.0   86     8  26     30.00000\n## 119    NA     153  5.7   88     8  27     31.11111\n## 120    76     203  9.7   97     8  28     36.11111\n## 121   118     225  2.3   94     8  29     34.44444\n## 122    84     237  6.3   96     8  30     35.55556\n## 123    85     188  6.3   94     8  31     34.44444\n## 124    96     167  6.9   91     9   1     32.77778\n## 125    78     197  5.1   92     9   2     33.33333\n## 126    73     183  2.8   93     9   3     33.88889\n## 127    91     189  4.6   93     9   4     33.88889\n## 128    47      95  7.4   87     9   5     30.55556\n## 129    32      92 15.5   84     9   6     28.88889\n## 130    20     252 10.9   80     9   7     26.66667\n## 131    23     220 10.3   78     9   8     25.55556\n## 132    21     230 10.9   75     9   9     23.88889\n## 133    24     259  9.7   73     9  10     22.77778\n## 134    44     236 14.9   81     9  11     27.22222\n## 135    21     259 15.5   76     9  12     24.44444\n## 136    28     238  6.3   77     9  13     25.00000\n## 137     9      24 10.9   71     9  14     21.66667\n## 138    13     112 11.5   71     9  15     21.66667\n## 139    46     237  6.9   78     9  16     25.55556\n## 140    18     224 13.8   67     9  17     19.44444\n## 141    13      27 10.3   76     9  18     24.44444\n## 142    24     238 10.3   68     9  19     20.00000\n## 143    16     201  8.0   82     9  20     27.77778\n## 144    13     238 12.6   64     9  21     17.77778\n## 145    23      14  9.2   71     9  22     21.66667\n## 146    36     139 10.3   81     9  23     27.22222\n## 147     7      49 10.3   69     9  24     20.55556\n## 148    14      20 16.6   63     9  25     17.22222\n## 149    30     193  6.9   70     9  26     21.11111\n## 150    NA     145 13.2   77     9  27     25.00000\n## 151    14     191 14.3   75     9  28     23.88889\n## 152    18     131  8.0   76     9  29     24.44444\n## 153    20     223 11.5   68     9  30     20.00000"},{"path":"proyecto.html","id":"proyecto","chapter":"Capítulo 14 Proyecto de trabajo","heading":"Capítulo 14 Proyecto de trabajo","text":"Estamos listos/para crear nuestro primer proyecto de R para trabajar ordenadicos/.Cuando se empieza programar para un trabajo concreto de R es recomendable crearnos lo que se conoce como un proyecto de R: en lugar de ir abriendo ventanas sueltas para programar (las pestañas de los scripts, los archivos con extensión .R que hemos comentado), podemos agruparlos en distintos proyectos, de forma que podamos acceder ellos de forma ordenada (algo así como crear carpetas en nuestro disco duro, pero en RStudio).","code":""},{"path":"proyecto.html","id":"crear-proyecto","chapter":"Capítulo 14 Proyecto de trabajo","heading":"14.1 Crear proyecto","text":"Para crear nuestro proyecto deberemos de ir al menú superior File << New Project (ver 14.1)\nImagen/gráfica 14.1: Crear un nuevo proyecto en R.\nSe nos abrirá una ventana con 3 opciones:New directory: crear un proyecto desde el inicio (opción recomendable).New directory: crear un proyecto desde el inicio (opción recomendable).Existing directory: crear un proyecto con los códigos que tienes ya guardados en una carpeta.Existing directory: crear un proyecto con los códigos que tienes ya guardados en una carpeta.Version control: para importar el proyecto de algún repositorio y vincularlo él.Version control: para importar el proyecto de algún repositorio y vincularlo él.\nImagen/gráfica 14.2: Opciones de creación.\n\nImagen/gráfica 14.3: Clickar en «New project».\nDeberemos elegir el directorio de nuestro ordenador donde queremos que se guarde (una carpeta que contendrá todos los códigos y datos de ese proyecto), así como el nombre del proyecto (que será su vez el nombre de la subcarpeta que se os creará en el ordenador).\nImagen/gráfica 14.4: Nombre del proyecto.\nUna vez que el proyecto está creado, abriremos un script de R (donde escribiremos el código), escribiremos si queremos una descripción del proyecto en la primera línea y guardaremos el archivo (archivo de extensión .R).\nImagen/gráfica 14.5: Abrir nuestro primer script de R.\n\nImagen/gráfica 14.6: Descripción al inicio del código.\n\nImagen/gráfica 14.7: Guardamos el código.\n\nImagen/gráfica 14.8: Guardamos el código.\nEste será nuestro código principal (puedes ponerle el nombre que quieras, normalmente se le llama main.R para diferenciarlo del resto), desde el que iremos construyendo nuestro código e iremos llamando otros archivos si es necesario. Recuerda que programar es como escribir: cuanto más limpio y estructurado, mejor se entenderá. La ventaja de tener los códigos agrupados por proyectos es que si estamos trabajando en varios la vez podemos saltar de uno otro, visualizando solo los códigos de un proyecto, y los 100 archivos que vayamos creando.\nImagen/gráfica 14.9: Saltar de proyecto en proyecto.\n","code":""},{"path":"proyecto.html","id":"directorios-de-trabajo-y-cabecera","chapter":"Capítulo 14 Proyecto de trabajo","heading":"14.2 Directorios de trabajo y cabecera","text":"Como luego veremos, es altamente recomendable que todos los archivos (códigos, datos, imágenes, etc) estén dentro de la misma carpeta del proyecto (aunque podamos crear subdirectorios), para que trabajar en el proyecto sea más sencillo e intuitivo. Vamos crearnos dentro de la carpeta del proyecto, una subcarpeta que se llame DATOS, en donde debemos descargar todos los ficheros que hay en https://github.com/dadosdelaplace/courses-intro-r/tree/main/DATOS, y otra llamada CODIGOS, donde guardar nuestros archivos .R (por eso de ser ordenadicos).\nImagen/gráfica 14.10: Subcarpeta «CODIGOS».\nEn esa carpeta de códigos vamos crear de prueba el código llamado variables.R donde vamos definir algunas variables que luego usaremos en el código principal (suele suceder con variables que van ser fijas como nombres, fechas o codificaciones de variables).\nImagen/gráfica 14.11: Escribimos una serie de variables fijas para luego ser usadas.\nes obligatorio pero es altamente recomendable tener muy estructurado nuestros códigos, de forma que el archivo .R haga una tarea concreta y definida (uno carga archivos, otro preprocesa, otro hace un modelo, otro hace las gráficas), y sea el código principal el que haga una llamada limpia todos ellos, para que en caso de error, la detección del mismo sea más sencilla.Así que eso haremos: desde nuestro archivo principal main.R llamaremos ese archivo variables.R, para luego usar las variables definidas en él.¿Cómo indicarle R donde está nuestro fichero?En R, como en todo lenguaje de programación, podemos consultar lo que el ordenador llama directorio de trabajo: la carpeta «base» desde donde está ejecutando tu código. Dicha ruta de directorio se puede consultar con la función getwd(), pudiendo ver los archivos y carpetas que hay dentro del mismo con el comando dir()\nImagen/gráfica 14.12: Consultar directorio de trabajo predeterminado y archivos contenidos en él.\nLo ideal es empezar el código fijando como directorio de trabajo el directorio donde tengamos nuestro archivo principalmain.R y para ello usaremos la función setwd(), cuyo argumento será la ruta donde queremos fijarlo. Para hacerlo de forma automática (y que el código pueda ser abierto por ti pero también por otros que tengan tu misma estructura de carpetas), obtendremos de forma automática la ruta del archivo main.R o del proyecto con la orden rstudioapi::getSourceEditorContext()$path, y después usaremos dirname() para quedarnos solo con la ruta de carpetas (eliminando el nombre del fichero al final). Esa será la ruta que le pasaremos setwd(), quedando nuestro directorio de trabajo automáticamente fijado, sin preocuparnos de la ruta\nImagen/gráfica 14.13: Fijamos de forma automático el directorio de trabajo.\nUna vez que hemos fijado nuestro directorio, para cargar código .R, basta que usemos la función source(), cuyo argumento será la ruta del archivo. Como tenemos de directorio base el directorio en el que tenemos nuestro archivo principal (./), bastará que empecemos escribir source(\"./\"), presionar el tabulador, y se nos abrirá el menú de archivos de nuestro directorio de trabajo, pudiendo ir seleccionando de forma sencilla la ruta de nuestro archivo.\nImagen/gráfica 14.14: Cargar archivos de nuestro directorio de trabajo.\n\nImagen/gráfica 14.15: Cargar archivos de nuestro directorio de trabajo.\n","code":"\n# Descripción: script de prueba con variables\n\n# Variables\nx <- c(1, 2, 0, -1, 71) # Vector de números\ny <- c(\"hola\", \"me\", \"llamo\", \"Javier\") # Vector de caracteres\napellido <- \"Álvarez\"\n\n# Fechas\nhoy <- as_date(today()) # Convertir a tipo fecha la fecha de hoy\nfecha_origen <- as_date(\"2021-01-01\") # Inicio de año 2021\ngetwd()\ndir()\n# Fijamos directorio de trabajo automáticamente\nsetwd(dirname(rstudioapi::getSourceEditorContext()$path))"},{"path":"proyecto.html","id":"ejecución","chapter":"Capítulo 14 Proyecto de trabajo","heading":"14.3 Ejecución","text":"Ese archivo que hemos incluido en el código principal nos cargará las variables que hemos definido en él, pudiendo usarlas en el código. Vamos ejecutar lo que tenemos de momento, y para ello tenemos 2 opciones: o copiar el código del script en la consola y pulsar ENTER, o bien, activando la casilla source save y guardando el script (solo se guardará sino que se ejecutará).\nImagen/gráfica 14.16: Guardamos con la casilla «source save» activada para que además de guardar se ejecute el código.\nComo vemos en la imagen 14.16, una vez ejecutado, tenemos en nuestro panel de entorno (parte superior derecha) las variables ya cargadas que teníamos definidas en nuestro fichero variables.R.Prueba escribir algunas funciones que hemos aprendido con dichas variables y vuelve hacer click en «guardar» con source save activado.La función cat() nos muestra por consola el texto que le pasemos de argumento (función especial para mensajes de alerta por consola)\nImagen/gráfica 14.17: Cálculos con la variables definidas: suma, concatenación de texto y diferencia de fechas.\nYa hemos ejecutado nuestro primer proyecto en .R :) WARNING: guardar los scriptsLos scripts que tengas sin guardar tendrán un asterisco * al final del nombre en la pestaña superior de la ventana.","code":"\n# Sumamos 3 a cada elemento de x\nz <- x + 3\nz## [1]  4  5  3  2 74\n# Imprimimos por pantalla la frase unida, y a dicha frase\n# le pegamos nuestro apellido\ncat(paste(paste(y, collapse = \" \"), apellido))## hola me llamo Javier Álvarez\n# Días que han pasado desde el inicio de año\ndias <- hoy - fecha_origen\ndias## Time difference of 619 days"},{"path":"proyecto.html","id":"consejos-9","chapter":"Capítulo 14 Proyecto de trabajo","heading":"14.4 Consejos","text":"CONSEJOS Limpiar consolaPodemos limpiar la consola clickando en al escoba que tenemos en la parte superior derecha de la misma. Esta acción nos elimina ninguna variable, simplemente nos limpia la consola de mensajes. Comentarios en los códigosEs crucial que intentes documentar al máximo tu código y que te acostumbres ello desde el principio, dejando explícito que haces en cada paso, tanto para ti como para otra persona que pueda leer tu código y lo entienda. Para ello usaremos # comentario cuando queramos dejar comentarios en el código. Dichas partes, amén de estar en otro color, son leídas por R ni ejecutadas: son comentarios que el programa «ve», solo son para nosotros. ","code":""},{"path":"importar-exportar.html","id":"importar-exportar","chapter":"Capítulo 15 Importar/exportar datos","heading":"Capítulo 15 Importar/exportar datos","text":"Hemos aprendido crear nuestros propios datos pero muchas veces los cargaremos de distintos paquetes, archivos y fuentes, y necesitaremos expotarlo. En este manual introductorio simplemente vamos ver cómo cargar datos desde paquetes o formatos nativos de R, así como su exportación (pero las fuentes de exportación son más de las que imaginas, desde Spotify hasta el AEMET, pero lo dejaremos para un futuro manual algo más avanzado.)Es recomendable tener los datos en la misma carpeta del proyecto pero una carpeta separada, ya que podemos tener muchos archivos y así mezclamos dichos ficheros con los códigos que escirbamos.","code":""},{"path":"importar-exportar.html","id":"archivo-.rdata-pasajeros-del-rms-titanic","chapter":"Capítulo 15 Importar/exportar datos","heading":"15.1 Archivo .RData: pasajeros del RMS Titanic","text":"Fuente original de los datos: https://www.kaggle.com/c/titanic/overviewEl 15 de abril de 1912 se producía el hundimiento naval más famoso de la historia: el hundimiento del barco RMS Titanic. Tras chocar con un iceberg, y con un déficit de botes salvavidas bordo, murieron 1502 de los 2224 pasajeros (tripulación incluida) que iban bordo del navío.¿Qué edad, sexo o cabina ocupabana los pasajeros que sobrevivieron y los que sobrevivieron? Dicho conjunto de datos nos va servir para ilustrar la forma más sencilla de guardar datos y variables en R, y que además ocupa menos espacio en nuestro disco duro: los archivos propios que tiene R con extensiones .rda o .RData. De nuestra carpeta DATOS cargaremos el archivo titanic.RData, un archivo con extensión .RData, conteniendo los datos de los pasajeros del Titanic (nombre, título, cabina, si sobrevivió o , edad, etc)¿Cómo cargar archivos .RData?Muy sencillo: como son ficheros nativos de R, basta con usar la función de carga load(), y dentro de los paréntesis la ruta del archivo que queramos cargar.Fíjate que, al fijar nuestro directorio de trabajo, necesitamos toda la ruta, solo ./ (que nos arranca la ruta en la carpeta de nuestro proyecto) más la ruta dentro de la carpeta del proyecto. Ahora en el panel de entorno de la parte superior derecha tendremos un data.frame que antes teníamos. Ya hemos visto que una función muy útil es head(), con argumento el nombre de un data.frame, que nos permite visualizar las primeras filas.","code":"\nload(\"./DATOS/titanic.RData\")\nhead(titanic)##   PassengerId Survived Pclass\n## 1           1        0      3\n## 2           2        1      1\n## 3           3        1      3\n## 4           4        1      1\n## 5           5        0      3\n## 6           6        0      3\n##                                                  Name    Sex Age SibSp Parch\n## 1                             Braund, Mr. Owen Harris   male  22     1     0\n## 2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0\n## 3                              Heikkinen, Miss. Laina female  26     0     0\n## 4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0\n## 5                            Allen, Mr. William Henry   male  35     0     0\n## 6                                    Moran, Mr. James   male  NA     0     0\n##             Ticket    Fare Cabin Embarked\n## 1        A/5 21171  7.2500              S\n## 2         PC 17599 71.2833   C85        C\n## 3 STON/O2. 3101282  7.9250              S\n## 4           113803 53.1000  C123        S\n## 5           373450  8.0500              S\n## 6           330877  8.4583              Q"},{"path":"importar-exportar.html","id":"archivo-.rda-pisos-en-boston","chapter":"Capítulo 15 Importar/exportar datos","heading":"15.2 Archivo .rda: pisos en Boston","text":"Fuente original de los datos: https://doi.org/10.1016/0095-0696(78)90006-2Muchas veces tendremos un .Rdata sino un archivo .rda. El procedimiento para leerlo será el mismoEl dataset Boston está basado en el estudio que realizaron Harrison Rubinfeld, 1978 en el que se pretende determinar la disposición de los compradores para pagar más por una vivienda en un entorno con mayor calidad del aire. El conjunto de datos contiene datos del área metropolitana de Boston, con datos de 560 vecindarios, midiendo 14 variables en cada uno.Las variables están totalmente descritas en Harrison Rubinfeld, 1978 pero podemos resumirlas de la siguiente forma:medv: variable objetivo, representa la mediana del precio inmobiliario (en miles de dolares).Variables arquitectónicas: rm (número medio de habitaciones) y age (porcentaje de propiedades construidas antes de 1940).Variables de vecindario: crim (tasa de criminalidad), zn (porcentaje del territorio destinado áreas residenciales), indus (porcentaje del territorio destinado al tejido industrial), chas ( ¿hay río limitando la extensión en el territorio?), tax (coste de los servicios públicos), ptratio (ratio alumno-profesor), black (índice de población negra - sí, es un archivo vergonzoso, pero viene mal ver los sesgo raciales de muchos de los datos que consumimos - calcualda como \\(1000 ( B - 0.63)^2\\), donde \\(B\\) es el procentaje de población negra) y lstat (porcentaje de la población con bajos ingresos).Variables de accesibilidad: dis (distancia oficinas de empleo) y rad (categoría indicando la accesibilidad la red de autopistas, mayor índice, mayor accesibilidad).Variables de calidad del aire: nox (concentración anual de óxido de nitrógeno, en partes por 10 millones).","code":"\nload(\"./DATOS/boston.rda\")"},{"path":"importar-exportar.html","id":"desde-paquete-estadísticas-del-eurostat","chapter":"Capítulo 15 Importar/exportar datos","heading":"15.3 Desde paquete: estadísticas del Eurostat","text":"Fuente original de los datos: World DataUna opción muy común es cargar datos desde paquetes que ya los tienen incorporadas (o los consiguen través de una API). Uno de los ejemplos más útiles seguramente sea uno de los protagonistas de los últimos años debido la pandemia ha sido la web World Data, y en concreto los datos que han recopilado de covid y vacunación de todos los países del mundo. Y sí, podemos acceder ellos directamente desde R través del paquete {owidR}.Con la función owid_search() podemos introducir una palabra clave, para obtener el listado de datasets y su palabra clave.","code":"\n# install.packages(\"owidR\")\nlibrary(owidR)"},{"path":"importar-exportar.html","id":"exportación-de-datos","chapter":"Capítulo 15 Importar/exportar datos","heading":"15.4 Exportación de datos","text":"Aunque se puede exportar en cualquier formato que puedas importar, vamos ver las dos formas más útiles y eficientes de exportar datos en R:fichero .RData.fichero .csv (un Excel sin formato para ser leído en cualquier sistema)La exportación en fichero .RData es la opción más recomendable si tú o tu equipo solo trabajáis con R, es la opción nativa de fichero, para que su importación sea tan sencilla como una función load(). Para exportar en R.Data basta con uses la función save(), indícandole lo que quieres guardar y la ruta donde quieres guardarlo.Es importante entender que la principal ventaja de exportar un fichero .RData es que se está portando una tabla, o un fichero tabulado con un formato de filas y columnas: estás exportando cualquier cosa, cualquier variable de R, con la naturaleza de esa variable intacta, sin necesidad de pasarlo otro formato.Para tenerlo organizado, la orden anterior está hecha habiendo creado en nuestra carpeta del proyecto una carpeta EXPORTAR para guardar lo que vayamos exportando. Ese fichero solo podrá ser abierto por R, pero cuando lo cargemos, tendremos la variable nombres tal cual la hemos guardado. siempre trabajamos en R y veces necesitamos una exportación de un data.frame o una tabla que podamos abrir en nuestra ordenador, ya sea para explicársela alguien o para enviársela otra persona. Para ello exportaremos en .csv, un fichero sin formato, y que es capaz de ser abierto por todo tipo de hojas de cálculo: basta que usemos la función write_csv() del paquete readrWARNING: líneas de código en los erroresDado que los errores del código nos vendrán referenciados en la consola por el número de línea donde fueron detectados, puede sernos muy útil mostrar dichos números en la barra lateral izquierda, yendo Tools << Global Options << Code << Display << Show line numbers\nImagen/gráfica 15.1: Líneas de código.\n","code":"\nnombres <- c(\"javier\", \"carla\")\n# Exportamos en .RData la variable nombres \nsave(nombres, file = \"./EXPORTAR/nombres.RData\")\n# install.packages(\"readr\") # solo la primera vez\nlibrary(readr)\n\n# Exportamos en .csv el data.frame boston\nwrite_csv(boston, file = \"./EXPORTAR/boston.csv\")"},{"path":"importar-exportar.html","id":"consejos-10","chapter":"Capítulo 15 Importar/exportar datos","heading":"15.5 Consejos","text":"CONSEJOS Margen derecho en la ventana de scriptsAunque afecte nuestro código escribir todo en una línea sin saltos de línea, somos bárbaros/. ¿Por qué cuadno escribes en un Word lo haces en formato vertical pero cuando programas pones todas las órdenes seguidas? Recuerda que la legibilidad de tu código solo te ahorrará tiempo sino que te hará programar mejor. ¿Cómo podemos fijar un margen imaginario para nosotros ser quienes demos al ENTER? Yendo Tools << Global Options << Code << Display << Show margin (es un margen imaginario para ser nosotros quienes lo hagamos efectivo, R le da igual)\nImagen/gráfica 15.2: Margen derecho.\n","code":""},{"path":"practica-final.html","id":"practica-final","chapter":"Capítulo 16 📝 Práctica final","heading":"Capítulo 16 📝 Práctica final","text":":(haz click en las flechas para ver soluciones)Ejercicio 1: carga el fichero titanic.RData que tienes en la carpeta DATOS https://github.com/dadosdelaplace/courses-intro-r/tree/main/DATOS.Solución: Ejercicio 2: obtén el número de individuos y de variables de nuestro datasetSolución: Ejercicio 3: ¿de qué tipo es la variable Name? ¿Y la variable Pclass? ¿Y la variable Age? ¿Y la variable SurvivedSolución: Ejercicio 4: internamente tenemos 0 y 1 pero la variable Survived en realidad debería ser variable lógica (TRUE si sobrevivió). Modifica la variable para ponter TRUE cuando vale 1 y FALSE en caso contrarioSolución: Ejercicio 5: en la variable Name tenemos guardado el nombre de los pasajeros, pero también su título (Mr., Mrs, Miss, etc). Extrae los nombres de las personas con Miss.Solución: Ejercicio 6: calcula la media de edad de los pasajeros del Titanic (recuerda: si hay datos ausentes…). Haz lo mismo pero por sexos (male/female)Solución: Ejercicio 7: ordena la edad de los pasajeros del Titanic de menor mayor, y de mayor menorSolución: Ejercicio 8: vamos clasificar los pasajeros según su edad en \"mayores de edad\" y \"menores de edad\". Crea un función que, dada una edad, nos diga si es mayor o menor de edad. Aplícala después nuestra variable Age y guarda el resultado en una variable edad_recodificada que añadamos los datos originalesSolución: Ejercicio 9: el accidente del Titanic se produjo el 15 de abril de 1912. Tomando dicha fecha como referencia, usa la edad de los pasajeros para añadir una nueva variable que sea la fecha de nacimiento.Solución:","code":"\nload(\"./DATOS/titanic.RData\")\nncol(titanic) # variables## [1] 12\nnrow(titanic) # individuos## [1] 891\nclass(titanic$Name) ## [1] \"character\"\nclass(titanic$Pclass)## [1] \"integer\"\nclass(titanic$Age)## [1] \"numeric\"\nclass(titanic$Survived)## [1] \"integer\"\n# Modo ifelse\ntitanic$Survived <- ifelse(titanic$Survived == 1, TRUE, FALSE)\n\n# otra forma: modo bucle + if\nload(\"./DATOS/titanic.RData\")\nnueva_variable <- rep(FALSE, length(titanic$Survived))\nfor (i in 1:length(titanic$Survived)) {\n  \n  if (titanic$Survived[i] == 1) {\n    \n    nueva_variable[i] <- TRUE\n    \n  }\n}\ntitanic$Survived <- nueva_variable\nlibrary(stringr)\n# Con str_detect obtenemos un TRUE/FALSE\ntitanic$Name[str_detect(titanic$Name, pattern = \"Miss.\")]##   [1] \"Heikkinen, Miss. Laina\"                                               \n##   [2] \"Sandstrom, Miss. Marguerite Rut\"                                      \n##   [3] \"Bonnell, Miss. Elizabeth\"                                             \n##   [4] \"Vestrom, Miss. Hulda Amanda Adolfina\"                                 \n##   [5] \"McGowan, Miss. Anna \\\"Annie\\\"\"                                        \n##   [6] \"Palsson, Miss. Torborg Danira\"                                        \n##   [7] \"O'Dwyer, Miss. Ellen \\\"Nellie\\\"\"                                      \n##   [8] \"Glynn, Miss. Mary Agatha\"                                             \n##   [9] \"Vander Planke, Miss. Augusta Maria\"                                   \n##  [10] \"Nicola-Yarred, Miss. Jamila\"                                          \n##  [11] \"Laroche, Miss. Simonne Marie Anne Andree\"                             \n##  [12] \"Devaney, Miss. Margaret Delia\"                                        \n##  [13] \"O'Driscoll, Miss. Bridget\"                                            \n##  [14] \"Rugg, Miss. Emily\"                                                    \n##  [15] \"West, Miss. Constance Mirium\"                                         \n##  [16] \"Icard, Miss. Amelie\"                                                  \n##  [17] \"Andersson, Miss. Erna Alexandra\"                                      \n##  [18] \"Goodwin, Miss. Lillian Amy\"                                           \n##  [19] \"Dowdell, Miss. Elizabeth\"                                             \n##  [20] \"McDermott, Miss. Brigdet Delia\"                                       \n##  [21] \"Ilett, Miss. Bertha\"                                                  \n##  [22] \"Fortune, Miss. Mabel Helen\"                                           \n##  [23] \"Petranec, Miss. Matilda\"                                              \n##  [24] \"Salkjelsvik, Miss. Anna Kristine\"                                     \n##  [25] \"Moran, Miss. Bertha\"                                                  \n##  [26] \"Zabour, Miss. Hileni\"                                                 \n##  [27] \"Jussila, Miss. Katriina\"                                              \n##  [28] \"Attalah, Miss. Malake\"                                                \n##  [29] \"Andersson, Miss. Ellis Anna Maria\"                                    \n##  [30] \"Webber, Miss. Susan\"                                                  \n##  [31] \"Peter, Miss. Anna\"                                                    \n##  [32] \"Newsom, Miss. Helen Monypeny\"                                         \n##  [33] \"Nysten, Miss. Anna Sofia\"                                             \n##  [34] \"Ford, Miss. Robina Maggie \\\"Ruby\\\"\"                                   \n##  [35] \"Gilnagh, Miss. Katherine \\\"Katie\\\"\"                                   \n##  [36] \"Johnson, Miss. Eleanor Ileen\"                                         \n##  [37] \"Isham, Miss. Ann Elizabeth\"                                           \n##  [38] \"Sage, Miss. Constance Gladys\"                                         \n##  [39] \"Kink-Heilmann, Miss. Luise Gretchen\"                                  \n##  [40] \"Andersen-Jensen, Miss. Carla Christine Nielsine\"                      \n##  [41] \"Lurette, Miss. Elise\"                                                 \n##  [42] \"Madigan, Miss. Margaret \\\"Maggie\\\"\"                                   \n##  [43] \"Yrois, Miss. Henriette (\\\"Mrs Harbeck\\\")\"                             \n##  [44] \"Strom, Miss. Telma Matilda\"                                           \n##  [45] \"Carr, Miss. Helen \\\"Ellen\\\"\"                                          \n##  [46] \"Cameron, Miss. Clear Annie\"                                           \n##  [47] \"Newell, Miss. Madeleine\"                                              \n##  [48] \"Honkanen, Miss. Eliina\"                                               \n##  [49] \"Bazzani, Miss. Albina\"                                                \n##  [50] \"Lefebre, Miss. Mathilde\"                                              \n##  [51] \"Asplund, Miss. Lillian Gertrud\"                                       \n##  [52] \"Harknett, Miss. Alice Phoebe\"                                         \n##  [53] \"Collyer, Miss. Marjorie \\\"Lottie\\\"\"                                   \n##  [54] \"Zabour, Miss. Thamine\"                                                \n##  [55] \"Murphy, Miss. Katherine \\\"Kate\\\"\"                                     \n##  [56] \"Lindahl, Miss. Agda Thorilda Viktoria\"                                \n##  [57] \"Cherry, Miss. Gladys\"                                                 \n##  [58] \"Ward, Miss. Anna\"                                                     \n##  [59] \"Henry, Miss. Delia\"                                                   \n##  [60] \"Bissette, Miss. Amelia\"                                               \n##  [61] \"Healy, Miss. Hanora \\\"Nora\\\"\"                                         \n##  [62] \"Andrews, Miss. Kornelia Theodosia\"                                    \n##  [63] \"Lindblom, Miss. Augusta Charlotta\"                                    \n##  [64] \"Connolly, Miss. Kate\"                                                 \n##  [65] \"Barber, Miss. Ellen \\\"Nellie\\\"\"                                       \n##  [66] \"Haas, Miss. Aloisia\"                                                  \n##  [67] \"Allison, Miss. Helen Loraine\"                                         \n##  [68] \"Kelly, Miss. Anna Katherine \\\"Annie Kate\\\"\"                           \n##  [69] \"Keane, Miss. Nora A\"                                                  \n##  [70] \"Fleming, Miss. Margaret\"                                              \n##  [71] \"Francatelli, Miss. Laura Mabel\"                                       \n##  [72] \"Hays, Miss. Margaret Bechstein\"                                       \n##  [73] \"Ryerson, Miss. Emily Borie\"                                           \n##  [74] \"Nilsson, Miss. Helmina Josefina\"                                      \n##  [75] \"Wick, Miss. Mary Natalie\"                                             \n##  [76] \"Slayter, Miss. Hilda Mary\"                                            \n##  [77] \"Young, Miss. Marie Grice\"                                             \n##  [78] \"Hippach, Miss. Jean Gertrude\"                                         \n##  [79] \"McCoy, Miss. Agnes\"                                                   \n##  [80] \"Burns, Miss. Elizabeth Margaret\"                                      \n##  [81] \"Fortune, Miss. Alice Elizabeth\"                                       \n##  [82] \"Brown, Miss. Amelia \\\"Mildred\\\"\"                                      \n##  [83] \"Smith, Miss. Marion Elsie\"                                            \n##  [84] \"Bowerman, Miss. Elsie Edith\"                                          \n##  [85] \"Funk, Miss. Annie Clemmer\"                                            \n##  [86] \"McGovern, Miss. Mary\"                                                 \n##  [87] \"Mockler, Miss. Helen Mary \\\"Ellie\\\"\"                                  \n##  [88] \"Jermyn, Miss. Annie\"                                                  \n##  [89] \"Palsson, Miss. Stina Viola\"                                           \n##  [90] \"Landergren, Miss. Aurora Adelia\"                                      \n##  [91] \"Bidois, Miss. Rosalie\"                                                \n##  [92] \"Nakid, Miss. Maria (\\\"Mary\\\")\"                                        \n##  [93] \"Buss, Miss. Kate\"                                                     \n##  [94] \"Lehmann, Miss. Bertha\"                                                \n##  [95] \"Newell, Miss. Marjorie\"                                               \n##  [96] \"Olsson, Miss. Elina\"                                                  \n##  [97] \"Jussila, Miss. Mari Aina\"                                             \n##  [98] \"Oreskovic, Miss. Marija\"                                              \n##  [99] \"Lefebre, Miss. Ida\"                                                   \n## [100] \"Minahan, Miss. Daisy E\"                                               \n## [101] \"Silven, Miss. Lyyli Karoliina\"                                        \n## [102] \"Van Impe, Miss. Catharina\"                                            \n## [103] \"Phillips, Miss. Kate Florence (\\\"Mrs Kate Louise Phillips Marshall\\\")\"\n## [104] \"Carter, Miss. Lucile Polk\"                                            \n## [105] \"Ford, Miss. Doolina Margaret \\\"Daisy\\\"\"                               \n## [106] \"Mellinger, Miss. Madeleine Violet\"                                    \n## [107] \"Baclini, Miss. Marie Catherine\"                                       \n## [108] \"Toomey, Miss. Ellen\"                                                  \n## [109] \"Baclini, Miss. Helene Barbara\"                                        \n## [110] \"Strandberg, Miss. Ida Sofia\"                                          \n## [111] \"Hirvonen, Miss. Hildur E\"                                             \n## [112] \"Lefebre, Miss. Jeannie\"                                               \n## [113] \"Eustis, Miss. Elizabeth Mussey\"                                       \n## [114] \"Canavan, Miss. Mary\"                                                  \n## [115] \"O'Sullivan, Miss. Bridget Mary\"                                       \n## [116] \"Laitinen, Miss. Kristina Sofia\"                                       \n## [117] \"Maioni, Miss. Roberta\"                                                \n## [118] \"Perreault, Miss. Anne\"                                                \n## [119] \"Ridsdale, Miss. Lucy\"                                                 \n## [120] \"Quick, Miss. Phyllis May\"                                             \n## [121] \"Cacic, Miss. Marija\"                                                  \n## [122] \"Hart, Miss. Eva Miriam\"                                               \n## [123] \"LeRoy, Miss. Bertha\"                                                  \n## [124] \"Frolicher, Miss. Hedwig Margaritha\"                                   \n## [125] \"Crosby, Miss. Harriet R\"                                              \n## [126] \"Andersson, Miss. Ingeborg Constanzia\"                                 \n## [127] \"Andersson, Miss. Sigrid Elisabeth\"                                    \n## [128] \"Ohman, Miss. Velin\"                                                   \n## [129] \"Meanwell, Miss. (Marion Ogden)\"                                       \n## [130] \"Kelly, Miss. Mary\"                                                    \n## [131] \"Garside, Miss. Ethel\"                                                 \n## [132] \"Christy, Miss. Julie Rachel\"                                          \n## [133] \"Taussig, Miss. Ruth\"                                                  \n## [134] \"Bourke, Miss. Mary\"                                                   \n## [135] \"Leitch, Miss. Jessie Wills\"                                           \n## [136] \"Shutes, Miss. Elizabeth W\"                                            \n## [137] \"Murphy, Miss. Margaret Jane\"                                          \n## [138] \"Herman, Miss. Alice\"                                                  \n## [139] \"Becker, Miss. Marion Louise\"                                          \n## [140] \"Longley, Miss. Gretchen Fiske\"                                        \n## [141] \"Skoog, Miss. Mabel\"                                                   \n## [142] \"Davis, Miss. Mary\"                                                    \n## [143] \"Skoog, Miss. Margit Elizabeth\"                                        \n## [144] \"Baclini, Miss. Eugenie\"                                               \n## [145] \"Stanley, Miss. Amy Zillah Elsie\"                                      \n## [146] \"Doling, Miss. Elsie\"                                                  \n## [147] \"O'Leary, Miss. Hanora \\\"Norah\\\"\"                                      \n## [148] \"Hegarty, Miss. Hanora \\\"Nora\\\"\"                                       \n## [149] \"Turja, Miss. Anna Sofia\"                                              \n## [150] \"Peters, Miss. Katie\"                                                  \n## [151] \"Madill, Miss. Georgette Alexandra\"                                    \n## [152] \"Karun, Miss. Manca\"                                                   \n## [153] \"Mullens, Miss. Katherine \\\"Katie\\\"\"                                   \n## [154] \"Barbara, Miss. Saiide\"                                                \n## [155] \"Cleaver, Miss. Alice\"                                                 \n## [156] \"Endres, Miss. Caroline Louise\"                                        \n## [157] \"Troutt, Miss. Edwina Celia \\\"Winnie\\\"\"                                \n## [158] \"Harper, Miss. Annie Jessie \\\"Nina\\\"\"                                  \n## [159] \"Mannion, Miss. Margareth\"                                             \n## [160] \"Ilmakangas, Miss. Pieta Sofia\"                                        \n## [161] \"Allen, Miss. Elisabeth Walton\"                                        \n## [162] \"Ryerson, Miss. Susan Parker \\\"Suzette\\\"\"                              \n## [163] \"Sinkkonen, Miss. Anna\"                                                \n## [164] \"Wells, Miss. Joan\"                                                    \n## [165] \"Mangan, Miss. Mary\"                                                   \n## [166] \"Emanuel, Miss. Virginia Ethel\"                                        \n## [167] \"Ayoub, Miss. Banoura\"                                                 \n## [168] \"Sjoblom, Miss. Anna Sofia\"                                            \n## [169] \"Sage, Miss. Stella Anna\"                                              \n## [170] \"Pettersson, Miss. Ellen Natalia\"                                      \n## [171] \"Andersson, Miss. Ebba Iris Alfrida\"                                   \n## [172] \"Heininen, Miss. Wendla Maria\"                                         \n## [173] \"Compton, Miss. Sara Rebecca\"                                          \n## [174] \"Serepeca, Miss. Augusta\"                                              \n## [175] \"Boulos, Miss. Nourelain\"                                              \n## [176] \"Lines, Miss. Mary Conover\"                                            \n## [177] \"Sage, Miss. Dorothy Edith \\\"Dolly\\\"\"                                  \n## [178] \"Duran y More, Miss. Asuncion\"                                         \n## [179] \"Najib, Miss. Adele Kiamie \\\"Jane\\\"\"                                   \n## [180] \"Dahlberg, Miss. Gerda Ulrika\"                                         \n## [181] \"Graham, Miss. Margaret Edith\"                                         \n## [182] \"Johnston, Miss. Catherine Helen \\\"Carrie\\\"\"\nmean(titanic$Age, na.rm = TRUE)## [1] 29.69912\nmean(titanic$Age[titanic$Sex == \"male\"], na.rm = TRUE)## [1] 30.72664\nmean(titanic$Age[titanic$Sex == \"female\"], na.rm = TRUE)## [1] 27.91571\nsort(titanic$Age) # menor a mayor##   [1]  0.42  0.67  0.75  0.75  0.83  0.83  0.92  1.00  1.00  1.00  1.00  1.00\n##  [13]  1.00  1.00  2.00  2.00  2.00  2.00  2.00  2.00  2.00  2.00  2.00  2.00\n##  [25]  3.00  3.00  3.00  3.00  3.00  3.00  4.00  4.00  4.00  4.00  4.00  4.00\n##  [37]  4.00  4.00  4.00  4.00  5.00  5.00  5.00  5.00  6.00  6.00  6.00  7.00\n##  [49]  7.00  7.00  8.00  8.00  8.00  8.00  9.00  9.00  9.00  9.00  9.00  9.00\n##  [61]  9.00  9.00 10.00 10.00 11.00 11.00 11.00 11.00 12.00 13.00 13.00 14.00\n##  [73] 14.00 14.00 14.00 14.00 14.00 14.50 15.00 15.00 15.00 15.00 15.00 16.00\n##  [85] 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00\n##  [97] 16.00 16.00 16.00 16.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00\n## [109] 17.00 17.00 17.00 17.00 17.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00\n## [121] 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00\n## [133] 18.00 18.00 18.00 18.00 18.00 18.00 18.00 19.00 19.00 19.00 19.00 19.00\n## [145] 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00\n## [157] 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 20.00 20.00 20.00 20.00\n## [169] 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.50\n## [181] 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00\n## [193] 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00\n## [205] 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00\n## [217] 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00\n## [229] 22.00 22.00 22.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00\n## [241] 23.00 23.00 23.00 23.00 23.00 23.00 23.50 24.00 24.00 24.00 24.00 24.00\n## [253] 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00\n## [265] 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00\n## [277] 24.00 24.50 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00\n## [289] 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00\n## [301] 25.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00\n## [313] 26.00 26.00 26.00 26.00 26.00 26.00 26.00 27.00 27.00 27.00 27.00 27.00\n## [325] 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00\n## [337] 27.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00\n## [349] 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00\n## [361] 28.00 28.00 28.50 28.50 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00\n## [373] 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00\n## [385] 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00\n## [397] 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00\n## [409] 30.00 30.50 30.50 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00\n## [421] 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 32.00 32.00 32.00 32.00\n## [433] 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00\n## [445] 32.00 32.00 32.50 32.50 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00\n## [457] 33.00 33.00 33.00 33.00 33.00 33.00 33.00 34.00 34.00 34.00 34.00 34.00\n## [469] 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.50 35.00\n## [481] 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00\n## [493] 35.00 35.00 35.00 35.00 35.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00\n## [505] 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00\n## [517] 36.00 36.00 36.00 36.50 37.00 37.00 37.00 37.00 37.00 37.00 38.00 38.00\n## [529] 38.00 38.00 38.00 38.00 38.00 38.00 38.00 38.00 38.00 39.00 39.00 39.00\n## [541] 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 40.00\n## [553] 40.00 40.00 40.00 40.00 40.00 40.00 40.00 40.00 40.00 40.00 40.00 40.00\n## [565] 40.50 40.50 41.00 41.00 41.00 41.00 41.00 41.00 42.00 42.00 42.00 42.00\n## [577] 42.00 42.00 42.00 42.00 42.00 42.00 42.00 42.00 42.00 43.00 43.00 43.00\n## [589] 43.00 43.00 44.00 44.00 44.00 44.00 44.00 44.00 44.00 44.00 44.00 45.00\n## [601] 45.00 45.00 45.00 45.00 45.00 45.00 45.00 45.00 45.00 45.00 45.00 45.50\n## [613] 45.50 46.00 46.00 46.00 47.00 47.00 47.00 47.00 47.00 47.00 47.00 47.00\n## [625] 47.00 48.00 48.00 48.00 48.00 48.00 48.00 48.00 48.00 48.00 49.00 49.00\n## [637] 49.00 49.00 49.00 49.00 50.00 50.00 50.00 50.00 50.00 50.00 50.00 50.00\n## [649] 50.00 50.00 51.00 51.00 51.00 51.00 51.00 51.00 51.00 52.00 52.00 52.00\n## [661] 52.00 52.00 52.00 53.00 54.00 54.00 54.00 54.00 54.00 54.00 54.00 54.00\n## [673] 55.00 55.00 55.50 56.00 56.00 56.00 56.00 57.00 57.00 58.00 58.00 58.00\n## [685] 58.00 58.00 59.00 59.00 60.00 60.00 60.00 60.00 61.00 61.00 61.00 62.00\n## [697] 62.00 62.00 62.00 63.00 63.00 64.00 64.00 65.00 65.00 65.00 66.00 70.00\n## [709] 70.00 70.50 71.00 71.00 74.00 80.00\nsort(titanic$Age, decreasing = TRUE) # mayor a menor##   [1] 80.00 74.00 71.00 71.00 70.50 70.00 70.00 66.00 65.00 65.00 65.00 64.00\n##  [13] 64.00 63.00 63.00 62.00 62.00 62.00 62.00 61.00 61.00 61.00 60.00 60.00\n##  [25] 60.00 60.00 59.00 59.00 58.00 58.00 58.00 58.00 58.00 57.00 57.00 56.00\n##  [37] 56.00 56.00 56.00 55.50 55.00 55.00 54.00 54.00 54.00 54.00 54.00 54.00\n##  [49] 54.00 54.00 53.00 52.00 52.00 52.00 52.00 52.00 52.00 51.00 51.00 51.00\n##  [61] 51.00 51.00 51.00 51.00 50.00 50.00 50.00 50.00 50.00 50.00 50.00 50.00\n##  [73] 50.00 50.00 49.00 49.00 49.00 49.00 49.00 49.00 48.00 48.00 48.00 48.00\n##  [85] 48.00 48.00 48.00 48.00 48.00 47.00 47.00 47.00 47.00 47.00 47.00 47.00\n##  [97] 47.00 47.00 46.00 46.00 46.00 45.50 45.50 45.00 45.00 45.00 45.00 45.00\n## [109] 45.00 45.00 45.00 45.00 45.00 45.00 45.00 44.00 44.00 44.00 44.00 44.00\n## [121] 44.00 44.00 44.00 44.00 43.00 43.00 43.00 43.00 43.00 42.00 42.00 42.00\n## [133] 42.00 42.00 42.00 42.00 42.00 42.00 42.00 42.00 42.00 42.00 41.00 41.00\n## [145] 41.00 41.00 41.00 41.00 40.50 40.50 40.00 40.00 40.00 40.00 40.00 40.00\n## [157] 40.00 40.00 40.00 40.00 40.00 40.00 40.00 39.00 39.00 39.00 39.00 39.00\n## [169] 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 39.00 38.00 38.00 38.00\n## [181] 38.00 38.00 38.00 38.00 38.00 38.00 38.00 38.00 37.00 37.00 37.00 37.00\n## [193] 37.00 37.00 36.50 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00\n## [205] 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00 36.00\n## [217] 36.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00 35.00\n## [229] 35.00 35.00 35.00 35.00 35.00 35.00 35.00 34.50 34.00 34.00 34.00 34.00\n## [241] 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 34.00 33.00\n## [253] 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00 33.00\n## [265] 33.00 33.00 32.50 32.50 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00\n## [277] 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 32.00 31.00 31.00\n## [289] 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00 31.00\n## [301] 31.00 31.00 31.00 30.50 30.50 30.00 30.00 30.00 30.00 30.00 30.00 30.00\n## [313] 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00 30.00\n## [325] 30.00 30.00 30.00 30.00 30.00 30.00 29.00 29.00 29.00 29.00 29.00 29.00\n## [337] 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00 29.00\n## [349] 29.00 29.00 28.50 28.50 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00\n## [361] 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00 28.00\n## [373] 28.00 28.00 28.00 28.00 28.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00\n## [385] 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 27.00 26.00\n## [397] 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00 26.00\n## [409] 26.00 26.00 26.00 26.00 26.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00\n## [421] 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00 25.00\n## [433] 25.00 25.00 25.00 25.00 24.50 24.00 24.00 24.00 24.00 24.00 24.00 24.00\n## [445] 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00\n## [457] 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 24.00 23.50\n## [469] 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00 23.00\n## [481] 23.00 23.00 23.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00\n## [493] 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00 22.00\n## [505] 22.00 22.00 22.00 22.00 22.00 22.00 21.00 21.00 21.00 21.00 21.00 21.00\n## [517] 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00 21.00\n## [529] 21.00 21.00 21.00 21.00 21.00 21.00 20.50 20.00 20.00 20.00 20.00 20.00\n## [541] 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 20.00 19.00 19.00\n## [553] 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00\n## [565] 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 19.00 18.00\n## [577] 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00\n## [589] 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00 18.00\n## [601] 18.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00 17.00\n## [613] 17.00 17.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00 16.00\n## [625] 16.00 16.00 16.00 16.00 16.00 16.00 16.00 15.00 15.00 15.00 15.00 15.00\n## [637] 14.50 14.00 14.00 14.00 14.00 14.00 14.00 13.00 13.00 12.00 11.00 11.00\n## [649] 11.00 11.00 10.00 10.00  9.00  9.00  9.00  9.00  9.00  9.00  9.00  9.00\n## [661]  8.00  8.00  8.00  8.00  7.00  7.00  7.00  6.00  6.00  6.00  5.00  5.00\n## [673]  5.00  5.00  4.00  4.00  4.00  4.00  4.00  4.00  4.00  4.00  4.00  4.00\n## [685]  3.00  3.00  3.00  3.00  3.00  3.00  2.00  2.00  2.00  2.00  2.00  2.00\n## [697]  2.00  2.00  2.00  2.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.92\n## [709]  0.83  0.83  0.75  0.75  0.67  0.42\n# Definimos función\nmenor_edad <- function(edad) {\n  \n  salida <- ifelse(edad < 18, \"menores de edad\", \"mayores de edad\")\n  return(salida)\n}\n\n# Creamos nueva variable\ntitanic$edad_recodificada <- menor_edad(titanic$Age) # se aplica elemento a elemento\ntitanic$edad_recodificada # habrá NA##   [1] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n##   [5] \"mayores de edad\" NA                \"mayores de edad\" \"menores de edad\"\n##   [9] \"mayores de edad\" \"menores de edad\" \"menores de edad\" \"mayores de edad\"\n##  [13] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n##  [17] \"menores de edad\" NA                \"mayores de edad\" NA               \n##  [21] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n##  [25] \"menores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n##  [29] NA                NA                \"mayores de edad\" NA               \n##  [33] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n##  [37] NA                \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n##  [41] \"mayores de edad\" \"mayores de edad\" NA                \"menores de edad\"\n##  [45] \"mayores de edad\" NA                NA                NA               \n##  [49] NA                \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n##  [53] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n##  [57] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"menores de edad\"\n##  [61] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n##  [65] NA                NA                \"mayores de edad\" \"mayores de edad\"\n##  [69] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n##  [73] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n##  [77] NA                NA                \"menores de edad\" \"mayores de edad\"\n##  [81] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n##  [85] \"menores de edad\" \"mayores de edad\" \"menores de edad\" NA               \n##  [89] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n##  [93] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n##  [97] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [101] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [105] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [109] \"mayores de edad\" NA                \"mayores de edad\" \"menores de edad\"\n## [113] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [117] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [121] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [125] \"mayores de edad\" \"menores de edad\" NA                \"mayores de edad\"\n## [129] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [133] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [137] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [141] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [145] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [149] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [153] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [157] \"menores de edad\" \"mayores de edad\" NA                NA               \n## [161] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [165] \"menores de edad\" \"menores de edad\" NA                \"mayores de edad\"\n## [169] NA                \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [173] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [177] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [181] NA                NA                \"menores de edad\" \"menores de edad\"\n## [185] \"menores de edad\" NA                NA                \"mayores de edad\"\n## [189] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [193] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [197] NA                \"mayores de edad\" NA                \"mayores de edad\"\n## [201] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [205] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [209] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [213] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [217] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [221] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [225] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [229] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [233] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" NA               \n## [237] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [241] NA                NA                \"mayores de edad\" \"mayores de edad\"\n## [245] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [249] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [253] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [257] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [261] NA                \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [265] NA                \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [269] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [273] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [277] \"mayores de edad\" NA                \"menores de edad\" \"mayores de edad\"\n## [281] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [285] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [289] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [293] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [297] \"mayores de edad\" \"menores de edad\" NA                \"mayores de edad\"\n## [301] NA                NA                \"mayores de edad\" NA               \n## [305] NA                \"menores de edad\" NA                \"menores de edad\"\n## [309] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [313] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [317] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [321] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [325] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [329] \"mayores de edad\" \"menores de edad\" NA                \"mayores de edad\"\n## [333] \"mayores de edad\" \"menores de edad\" NA                NA               \n## [337] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [341] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [345] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [349] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [353] \"menores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [357] \"mayores de edad\" \"mayores de edad\" NA                NA               \n## [361] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [365] NA                \"mayores de edad\" \"mayores de edad\" NA               \n## [369] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [373] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" NA               \n## [377] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [381] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [385] NA                \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [389] NA                \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [393] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [397] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [401] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [405] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [409] \"mayores de edad\" NA                NA                NA               \n## [413] \"mayores de edad\" NA                \"mayores de edad\" NA               \n## [417] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [421] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [425] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [429] NA                \"mayores de edad\" \"mayores de edad\" NA               \n## [433] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"menores de edad\"\n## [437] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [441] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [445] NA                \"menores de edad\" \"menores de edad\" \"mayores de edad\"\n## [449] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [453] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [457] \"mayores de edad\" NA                \"mayores de edad\" NA               \n## [461] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [465] NA                \"mayores de edad\" NA                \"mayores de edad\"\n## [469] NA                \"menores de edad\" NA                \"mayores de edad\"\n## [473] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [477] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [481] \"menores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [485] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [489] \"mayores de edad\" \"menores de edad\" NA                \"mayores de edad\"\n## [493] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [497] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [501] \"menores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [505] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [509] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [513] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [517] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [521] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [525] NA                \"mayores de edad\" \"mayores de edad\" NA               \n## [529] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" NA               \n## [533] \"menores de edad\" NA                \"mayores de edad\" \"menores de edad\"\n## [537] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [541] \"mayores de edad\" \"menores de edad\" \"menores de edad\" \"mayores de edad\"\n## [545] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [549] \"mayores de edad\" \"menores de edad\" \"menores de edad\" \"mayores de edad\"\n## [553] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [557] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [561] NA                \"mayores de edad\" \"mayores de edad\" NA               \n## [565] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [569] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [573] \"mayores de edad\" NA                \"menores de edad\" \"mayores de edad\"\n## [577] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [581] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [585] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [589] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [593] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [597] NA                \"mayores de edad\" NA                \"mayores de edad\"\n## [601] \"mayores de edad\" NA                NA                \"mayores de edad\"\n## [605] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [609] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [613] NA                NA                \"mayores de edad\" \"mayores de edad\"\n## [617] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [621] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [625] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [629] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [633] \"mayores de edad\" NA                \"menores de edad\" \"mayores de edad\"\n## [637] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [641] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" NA               \n## [645] \"menores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [649] NA                \"mayores de edad\" NA                \"mayores de edad\"\n## [653] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [657] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [661] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [665] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [669] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [673] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [677] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [681] NA                \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [685] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [689] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"menores de edad\"\n## [693] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [697] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [701] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [705] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [709] \"mayores de edad\" NA                \"mayores de edad\" NA               \n## [713] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [717] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [721] \"menores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [725] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [729] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [733] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [737] \"mayores de edad\" \"mayores de edad\" NA                NA               \n## [741] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [745] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"mayores de edad\"\n## [749] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"menores de edad\"\n## [753] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [757] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [761] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [765] \"menores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [769] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [773] \"mayores de edad\" NA                \"mayores de edad\" \"mayores de edad\"\n## [777] NA                \"menores de edad\" NA                \"mayores de edad\"\n## [781] \"menores de edad\" \"menores de edad\" \"mayores de edad\" NA               \n## [785] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [789] \"menores de edad\" \"mayores de edad\" NA                \"menores de edad\"\n## [793] NA                NA                \"mayores de edad\" \"mayores de edad\"\n## [797] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [801] \"mayores de edad\" \"mayores de edad\" \"menores de edad\" \"menores de edad\"\n## [805] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [809] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [813] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" NA               \n## [817] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [821] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [825] \"menores de edad\" NA                NA                \"menores de edad\"\n## [829] NA                \"mayores de edad\" \"menores de edad\" \"menores de edad\"\n## [833] NA                \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [837] \"mayores de edad\" NA                \"mayores de edad\" NA               \n## [841] \"mayores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [845] \"menores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [849] \"mayores de edad\" NA                \"menores de edad\" \"mayores de edad\"\n## [853] \"menores de edad\" \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [857] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [861] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" NA               \n## [865] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [869] NA                \"menores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [873] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"menores de edad\"\n## [877] \"mayores de edad\" \"mayores de edad\" NA                \"mayores de edad\"\n## [881] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [885] \"mayores de edad\" \"mayores de edad\" \"mayores de edad\" \"mayores de edad\"\n## [889] NA                \"mayores de edad\" \"mayores de edad\"\nlibrary(lubridate)\n# Fecha accidente\naccidente <- as_date(\"1912/04/15\")\n\n# Creamos nueva variable: fecha del accidente - años\n# (saldrán todos nacidos el 15 de abril, ya que no sabemos\n# cuantos meses cumplían en el momento del accidente)\ntitanic$fecha_nacimiento <- accidente - titanic$Age\ntitanic$fecha_nacimiento ##   [1] \"1912-03-24\" \"1912-03-08\" \"1912-03-20\" \"1912-03-11\" \"1912-03-11\"\n##   [6] NA           \"1912-02-21\" \"1912-04-13\" \"1912-03-19\" \"1912-04-01\"\n##  [11] \"1912-04-11\" \"1912-02-17\" \"1912-03-26\" \"1912-03-07\" \"1912-04-01\"\n##  [16] \"1912-02-20\" \"1912-04-13\" NA           \"1912-03-15\" NA          \n##  [21] \"1912-03-11\" \"1912-03-12\" \"1912-03-31\" \"1912-03-18\" \"1912-04-07\"\n##  [26] \"1912-03-08\" NA           \"1912-03-27\" NA           NA          \n##  [31] \"1912-03-06\" NA           NA           \"1912-02-09\" \"1912-03-18\"\n##  [36] \"1912-03-04\" NA           \"1912-03-25\" \"1912-03-28\" \"1912-04-01\"\n##  [41] \"1912-03-06\" \"1912-03-19\" NA           \"1912-04-12\" \"1912-03-27\"\n##  [46] NA           NA           NA           NA           \"1912-03-28\"\n##  [51] \"1912-04-08\" \"1912-03-25\" \"1912-02-26\" \"1912-03-17\" \"1912-02-10\"\n##  [56] NA           \"1912-03-25\" \"1912-03-17\" \"1912-04-10\" \"1912-04-04\"\n##  [61] \"1912-03-24\" \"1912-03-08\" \"1912-03-01\" \"1912-04-11\" NA          \n##  [66] NA           \"1912-03-17\" \"1912-03-27\" \"1912-03-29\" \"1912-03-20\"\n##  [71] \"1912-03-14\" \"1912-03-30\" \"1912-03-25\" \"1912-03-20\" \"1912-03-14\"\n##  [76] \"1912-03-21\" NA           NA           \"1912-04-14\" \"1912-03-16\"\n##  [81] \"1912-03-24\" \"1912-03-17\" NA           \"1912-03-18\" \"1912-03-29\"\n##  [86] \"1912-03-13\" \"1912-03-30\" NA           \"1912-03-23\" \"1912-03-22\"\n##  [91] \"1912-03-17\" \"1912-03-26\" \"1912-02-29\" \"1912-03-20\" \"1912-02-16\"\n##  [96] NA           \"1912-02-04\" \"1912-03-23\" \"1912-03-12\" \"1912-03-12\"\n## [101] \"1912-03-18\" NA           \"1912-03-25\" \"1912-03-13\" \"1912-03-09\"\n## [106] \"1912-03-18\" \"1912-03-25\" NA           \"1912-03-08\" NA          \n## [111] \"1912-02-28\" \"1912-03-31\" \"1912-03-24\" \"1912-03-26\" \"1912-03-29\"\n## [116] \"1912-03-25\" \"1912-02-04\" \"1912-03-17\" \"1912-03-22\" \"1912-04-13\"\n## [121] \"1912-03-25\" NA           \"1912-03-13\" \"1912-03-13\" \"1912-02-21\"\n## [126] \"1912-04-03\" NA           \"1912-03-22\" NA           \"1912-03-01\"\n## [131] \"1912-03-13\" \"1912-03-26\" \"1912-02-28\" \"1912-03-17\" \"1912-03-21\"\n## [136] \"1912-03-23\" \"1912-03-27\" \"1912-03-09\" \"1912-03-30\" \"1912-03-22\"\n## [141] NA           \"1912-03-24\" \"1912-03-22\" \"1912-03-27\" \"1912-03-28\"\n## [146] \"1912-03-27\" \"1912-03-19\" \"1912-04-06\" \"1912-03-09\" \"1912-03-04\"\n## [151] \"1912-02-24\" \"1912-03-24\" \"1912-02-19\" \"1912-03-05\" NA          \n## [156] \"1912-02-24\" \"1912-03-30\" \"1912-03-16\" NA           NA          \n## [161] \"1912-03-02\" \"1912-03-06\" \"1912-03-20\" \"1912-03-29\" \"1912-04-14\"\n## [166] \"1912-04-06\" NA           \"1912-03-01\" NA           \"1912-03-18\"\n## [171] \"1912-02-14\" \"1912-04-11\" \"1912-04-14\" \"1912-03-25\" \"1912-02-19\"\n## [176] \"1912-03-28\" NA           \"1912-02-25\" \"1912-03-16\" \"1912-03-10\"\n## [181] NA           NA           \"1912-04-06\" \"1912-04-14\" \"1912-04-11\"\n## [186] NA           NA           \"1912-03-01\" \"1912-03-06\" \"1912-03-10\"\n## [191] \"1912-03-14\" \"1912-03-27\" \"1912-03-27\" \"1912-04-12\" \"1912-03-02\"\n## [196] \"1912-02-17\" NA           \"1912-03-04\" NA           \"1912-03-22\"\n## [201] \"1912-03-18\" NA           \"1912-03-12\" \"1912-02-29\" \"1912-03-28\"\n## [206] \"1912-04-13\" \"1912-03-14\" \"1912-03-20\" \"1912-03-30\" \"1912-03-06\"\n## [211] \"1912-03-22\" \"1912-03-11\" \"1912-03-24\" \"1912-03-16\" NA          \n## [216] \"1912-03-15\" \"1912-03-19\" \"1912-03-04\" \"1912-03-14\" \"1912-03-16\"\n## [221] \"1912-03-30\" \"1912-03-19\" \"1912-02-24\" NA           \"1912-03-08\"\n## [226] \"1912-03-24\" \"1912-03-27\" \"1912-03-25\" \"1912-03-28\" NA          \n## [231] \"1912-03-11\" \"1912-03-17\" \"1912-02-16\" \"1912-04-10\" \"1912-03-22\"\n## [236] NA           \"1912-03-02\" \"1912-04-07\" \"1912-03-27\" \"1912-03-13\"\n## [241] NA           NA           \"1912-03-17\" \"1912-03-24\" \"1912-03-16\"\n## [246] \"1912-03-02\" \"1912-03-21\" \"1912-03-22\" \"1912-03-09\" \"1912-02-21\"\n## [251] NA           \"1912-03-17\" \"1912-02-13\" \"1912-03-16\" \"1912-03-05\"\n## [256] \"1912-03-17\" NA           \"1912-03-16\" \"1912-03-11\" \"1912-02-25\"\n## [261] NA           \"1912-04-12\" \"1912-02-23\" \"1912-03-06\" NA          \n## [266] \"1912-03-10\" \"1912-03-30\" \"1912-03-21\" \"1912-02-17\" \"1912-03-11\"\n## [271] NA           \"1912-03-21\" \"1912-03-05\" \"1912-03-09\" NA          \n## [276] \"1912-02-12\" \"1912-03-01\" NA           \"1912-04-08\" \"1912-03-11\"\n## [281] \"1912-02-10\" \"1912-03-18\" \"1912-03-30\" \"1912-03-27\" NA          \n## [286] \"1912-03-13\" \"1912-03-16\" \"1912-03-24\" \"1912-03-04\" \"1912-03-24\"\n## [291] \"1912-03-20\" \"1912-03-27\" \"1912-03-10\" \"1912-03-22\" \"1912-03-22\"\n## [296] NA           \"1912-03-22\" \"1912-04-13\" NA           \"1912-02-25\"\n## [301] NA           NA           \"1912-03-27\" NA           NA          \n## [306] \"1912-04-14\" NA           \"1912-03-29\" \"1912-03-16\" \"1912-03-16\"\n## [311] \"1912-03-22\" \"1912-03-28\" \"1912-03-20\" \"1912-03-18\" \"1912-03-03\"\n## [316] \"1912-03-20\" \"1912-03-22\" \"1912-02-21\" \"1912-03-15\" \"1912-03-06\"\n## [321] \"1912-03-24\" \"1912-03-19\" \"1912-03-16\" \"1912-03-24\" NA          \n## [326] \"1912-03-10\" \"1912-02-14\" \"1912-03-10\" \"1912-03-15\" \"1912-03-30\"\n## [331] NA           \"1912-02-29\" \"1912-03-08\" \"1912-03-30\" NA          \n## [336] NA           \"1912-03-17\" \"1912-03-05\" \"1912-03-01\" \"1912-03-01\"\n## [341] \"1912-04-13\" \"1912-03-22\" \"1912-03-18\" \"1912-03-21\" \"1912-03-10\"\n## [346] \"1912-03-22\" \"1912-03-06\" NA           \"1912-04-12\" \"1912-03-04\"\n## [351] \"1912-03-23\" NA           \"1912-03-31\" \"1912-03-21\" NA          \n## [356] \"1912-03-18\" \"1912-03-24\" \"1912-03-08\" NA           NA          \n## [361] \"1912-03-06\" \"1912-03-17\" \"1912-03-01\" \"1912-03-11\" NA          \n## [366] \"1912-03-16\" \"1912-02-15\" NA           NA           \"1912-03-22\"\n## [371] \"1912-03-21\" \"1912-03-28\" \"1912-03-27\" \"1912-03-24\" \"1912-04-12\"\n## [376] NA           \"1912-03-24\" \"1912-03-19\" \"1912-03-26\" \"1912-03-27\"\n## [381] \"1912-03-04\" \"1912-04-14\" \"1912-03-14\" \"1912-03-11\" NA          \n## [386] \"1912-03-28\" \"1912-04-14\" \"1912-03-10\" NA           \"1912-03-29\"\n## [391] \"1912-03-10\" \"1912-03-25\" \"1912-03-18\" \"1912-03-23\" \"1912-03-22\"\n## [396] \"1912-03-24\" \"1912-03-15\" \"1912-02-29\" \"1912-03-23\" \"1912-03-18\"\n## [401] \"1912-03-07\" \"1912-03-20\" \"1912-03-25\" \"1912-03-18\" \"1912-03-26\"\n## [406] \"1912-03-12\" \"1912-02-24\" \"1912-04-12\" \"1912-03-25\" NA          \n## [411] NA           NA           \"1912-03-13\" NA           \"1912-03-02\"\n## [416] NA           \"1912-03-12\" \"1912-03-28\" \"1912-03-16\" \"1912-04-05\"\n## [421] NA           \"1912-03-25\" \"1912-03-17\" \"1912-03-18\" \"1912-03-28\"\n## [426] NA           \"1912-03-18\" \"1912-03-27\" NA           \"1912-03-14\"\n## [431] \"1912-03-18\" NA           \"1912-03-04\" \"1912-03-29\" \"1912-02-25\"\n## [436] \"1912-04-01\" \"1912-03-25\" \"1912-03-22\" \"1912-02-11\" \"1912-03-15\"\n## [441] \"1912-03-01\" \"1912-03-26\" \"1912-03-21\" \"1912-03-18\" NA          \n## [446] \"1912-04-11\" \"1912-04-02\" \"1912-03-12\" \"1912-04-10\" \"1912-02-23\"\n## [451] \"1912-03-10\" NA           \"1912-03-16\" \"1912-02-26\" NA          \n## [456] \"1912-03-17\" \"1912-02-10\" NA           \"1912-02-25\" NA          \n## [461] \"1912-02-27\" \"1912-03-12\" \"1912-02-28\" \"1912-02-27\" NA          \n## [466] \"1912-03-08\" NA           \"1912-02-19\" NA           \"1912-04-14\"\n## [471] NA           \"1912-03-08\" \"1912-03-13\" \"1912-03-23\" \"1912-03-24\"\n## [476] NA           \"1912-03-12\" \"1912-03-17\" \"1912-03-24\" \"1912-04-13\"\n## [481] \"1912-04-06\" NA           \"1912-02-25\" \"1912-02-12\" \"1912-03-21\"\n## [486] NA           \"1912-03-11\" \"1912-02-17\" \"1912-03-16\" \"1912-04-06\"\n## [491] NA           \"1912-03-25\" \"1912-02-20\" \"1912-02-04\" \"1912-03-25\"\n## [496] NA           \"1912-02-21\" NA           \"1912-03-21\" \"1912-03-22\"\n## [501] \"1912-03-29\" \"1912-03-25\" NA           \"1912-03-09\" \"1912-03-30\"\n## [506] \"1912-03-28\" \"1912-03-13\" NA           \"1912-03-18\" \"1912-03-20\"\n## [511] \"1912-03-17\" NA           \"1912-03-10\" \"1912-02-21\" \"1912-03-22\"\n## [516] \"1912-02-28\" \"1912-03-12\" NA           \"1912-03-10\" \"1912-03-14\"\n## [521] \"1912-03-16\" \"1912-03-24\" NA           \"1912-03-02\" NA          \n## [526] \"1912-03-05\" \"1912-02-25\" NA           \"1912-03-07\" \"1912-03-23\"\n## [531] \"1912-04-13\" NA           \"1912-03-29\" NA           \"1912-03-16\"\n## [536] \"1912-04-08\" \"1912-03-01\" \"1912-03-16\" NA           \"1912-03-24\"\n## [541] \"1912-03-10\" \"1912-04-06\" \"1912-04-04\" \"1912-03-14\" \"1912-02-25\"\n## [546] \"1912-02-11\" \"1912-03-27\" NA           \"1912-03-13\" \"1912-04-07\"\n## [551] \"1912-03-29\" \"1912-03-19\" NA           \"1912-03-24\" \"1912-03-24\"\n## [556] \"1912-02-13\" \"1912-02-27\" NA           \"1912-03-07\" \"1912-03-10\"\n## [561] NA           \"1912-03-06\" \"1912-03-18\" NA           NA          \n## [566] \"1912-03-22\" \"1912-03-27\" \"1912-03-17\" NA           \"1912-03-14\"\n## [571] \"1912-02-13\" \"1912-02-22\" \"1912-03-10\" NA           \"1912-03-30\"\n## [576] \"1912-03-27\" \"1912-03-12\" \"1912-03-07\" NA           \"1912-03-14\"\n## [581] \"1912-03-21\" \"1912-03-07\" \"1912-02-21\" \"1912-03-10\" NA          \n## [586] \"1912-03-28\" \"1912-02-28\" \"1912-02-15\" \"1912-03-24\" NA          \n## [591] \"1912-03-11\" \"1912-02-23\" \"1912-02-28\" NA           \"1912-03-09\"\n## [596] \"1912-03-10\" NA           \"1912-02-26\" NA           \"1912-02-26\"\n## [601] \"1912-03-22\" NA           NA           \"1912-03-02\" \"1912-03-11\"\n## [606] \"1912-03-10\" \"1912-03-16\" \"1912-03-19\" \"1912-03-24\" \"1912-03-06\"\n## [611] \"1912-03-07\" NA           NA           NA           \"1912-03-11\"\n## [616] \"1912-03-22\" \"1912-03-12\" \"1912-03-20\" \"1912-04-11\" \"1912-03-20\"\n## [621] \"1912-03-19\" \"1912-03-04\" \"1912-03-26\" \"1912-03-25\" \"1912-03-25\"\n## [626] \"1912-02-14\" \"1912-02-18\" \"1912-03-25\" \"1912-03-20\" NA          \n## [631] \"1912-01-26\" \"1912-02-24\" \"1912-03-14\" NA           \"1912-04-06\"\n## [636] \"1912-03-18\" \"1912-03-14\" \"1912-03-15\" \"1912-03-05\" NA          \n## [641] \"1912-03-26\" \"1912-03-22\" \"1912-04-13\" NA           \"1912-04-14\"\n## [646] \"1912-02-27\" \"1912-03-27\" \"1912-02-19\" NA           \"1912-03-23\"\n## [651] NA           \"1912-03-28\" \"1912-03-25\" NA           \"1912-03-28\"\n## [656] \"1912-03-22\" NA           \"1912-03-14\" \"1912-03-23\" \"1912-02-17\"\n## [661] \"1912-02-25\" \"1912-03-06\" \"1912-02-28\" \"1912-03-10\" \"1912-03-26\"\n## [666] \"1912-03-14\" \"1912-03-21\" NA           \"1912-03-03\" NA          \n## [671] \"1912-03-06\" \"1912-03-15\" \"1912-02-05\" \"1912-03-15\" NA          \n## [676] \"1912-03-28\" \"1912-03-21\" \"1912-03-28\" \"1912-03-03\" \"1912-03-10\"\n## [681] NA           \"1912-03-19\" \"1912-03-26\" \"1912-04-01\" \"1912-02-15\"\n## [686] \"1912-03-21\" \"1912-04-01\" \"1912-03-27\" \"1912-03-28\" \"1912-03-31\"\n## [691] \"1912-03-15\" \"1912-04-11\" NA           \"1912-03-21\" \"1912-02-15\"\n## [696] \"1912-02-23\" \"1912-03-02\" NA           \"1912-02-26\" \"1912-03-04\"\n## [701] \"1912-03-28\" \"1912-03-11\" \"1912-03-28\" \"1912-03-21\" \"1912-03-20\"\n## [706] \"1912-03-07\" \"1912-03-01\" \"1912-03-04\" \"1912-03-24\" NA          \n## [711] \"1912-03-22\" NA           \"1912-02-27\" \"1912-03-17\" \"1912-02-23\"\n## [716] \"1912-03-27\" \"1912-03-08\" \"1912-03-19\" NA           \"1912-03-13\"\n## [721] \"1912-04-09\" \"1912-03-29\" \"1912-03-12\" \"1912-02-25\" \"1912-03-19\"\n## [726] \"1912-03-26\" \"1912-03-16\" NA           \"1912-03-21\" \"1912-03-21\"\n## [731] \"1912-03-17\" \"1912-04-04\" NA           \"1912-03-23\" \"1912-03-23\"\n## [736] \"1912-03-17\" \"1912-02-27\" \"1912-03-11\" NA           NA          \n## [741] NA           \"1912-03-10\" \"1912-03-25\" \"1912-03-22\" \"1912-03-15\"\n## [746] \"1912-02-05\" \"1912-03-30\" \"1912-03-16\" \"1912-03-27\" \"1912-03-15\"\n## [751] \"1912-04-11\" \"1912-04-09\" \"1912-03-13\" \"1912-03-23\" \"1912-02-27\"\n## [756] \"1912-04-14\" \"1912-03-18\" \"1912-03-28\" \"1912-03-12\" \"1912-03-13\"\n## [761] NA           \"1912-03-05\" \"1912-03-26\" \"1912-03-10\" \"1912-03-30\"\n## [766] \"1912-02-24\" NA           \"1912-03-15\" NA           \"1912-03-14\"\n## [771] \"1912-03-22\" \"1912-02-27\" \"1912-02-18\" NA           \"1912-02-21\"\n## [776] \"1912-03-28\" NA           \"1912-04-10\" NA           \"1912-03-03\"\n## [781] \"1912-04-02\" \"1912-03-29\" \"1912-03-17\" NA           \"1912-03-21\"\n## [786] \"1912-03-21\" \"1912-03-28\" \"1912-04-07\" \"1912-04-14\" \"1912-02-29\"\n## [791] NA           \"1912-03-30\" NA           NA           \"1912-03-21\"\n## [796] \"1912-03-07\" \"1912-02-26\" \"1912-03-15\" \"1912-03-16\" \"1912-03-16\"\n## [801] \"1912-03-12\" \"1912-03-15\" \"1912-04-04\" \"1912-04-14\" \"1912-03-19\"\n## [806] \"1912-03-15\" \"1912-03-07\" \"1912-03-28\" \"1912-03-07\" \"1912-03-13\"\n## [811] \"1912-03-20\" \"1912-03-07\" \"1912-03-11\" \"1912-04-09\" \"1912-03-15\"\n## [816] NA           \"1912-03-23\" \"1912-03-15\" \"1912-03-03\" \"1912-04-05\"\n## [821] \"1912-02-23\" \"1912-03-19\" \"1912-03-08\" \"1912-03-19\" \"1912-04-13\"\n## [826] NA           NA           \"1912-04-14\" NA           \"1912-02-13\"\n## [831] \"1912-03-31\" \"1912-04-14\" NA           \"1912-03-23\" \"1912-03-28\"\n## [836] \"1912-03-07\" \"1912-03-25\" NA           \"1912-03-14\" NA          \n## [841] \"1912-03-26\" \"1912-03-30\" \"1912-03-16\" \"1912-03-11\" \"1912-03-29\"\n## [846] \"1912-03-04\" NA           \"1912-03-11\" \"1912-03-18\" NA          \n## [851] \"1912-04-11\" \"1912-02-01\" \"1912-04-06\" \"1912-03-30\" \"1912-03-02\"\n## [856] \"1912-03-28\" \"1912-03-01\" \"1912-02-24\" \"1912-03-22\" NA          \n## [861] \"1912-03-05\" \"1912-03-25\" \"1912-02-27\" NA           \"1912-03-22\"\n## [866] \"1912-03-04\" \"1912-03-19\" \"1912-03-15\" NA           \"1912-04-11\"\n## [871] \"1912-03-20\" \"1912-02-28\" \"1912-03-13\" \"1912-02-28\" \"1912-03-18\"\n## [876] \"1912-03-31\" \"1912-03-26\" \"1912-03-27\" NA           \"1912-02-19\"\n## [881] \"1912-03-21\" \"1912-03-13\" \"1912-03-24\" \"1912-03-18\" \"1912-03-21\"\n## [886] \"1912-03-07\" \"1912-03-19\" \"1912-03-27\" NA           \"1912-03-20\"\n## [891] \"1912-03-14\""},{"path":"bibliografía.html","id":"bibliografía","chapter":"Bibliografía","heading":"Bibliografía","text":"Ziemann, M., Y. Eren, . El-Osta. 2016. “Gene Name Errors Widespread Scientific Literature.” Genome Biology 17 (177).","code":""}]
